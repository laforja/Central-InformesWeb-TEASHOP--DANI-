'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace com.serveftp.laforja
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="VgeServiciosSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MarshalByRefObject))>  _
    Partial Public Class VgeServicios
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private POSSuperadasTransaccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStocksPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCustomerPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExecutePSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertOrderXMLPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vgeCredencialesUsuarioValueField As VgeCredencialesUsuario
        
        Private ObtenerZonaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPerfilesTiendaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPerfilesCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvTareasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvTareasAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerMesasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerSeccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTPVPerifericosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvArticulosConfiguracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvCrmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerEscandallosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvParametrosAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTpvPermisosVendedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosTiendaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTPVPerifericosCodigosDeControlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTiposDeRepartoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerProveedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerProveedorAlternativoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAgenciaDeTransporteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerConceptoCuentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDepartamentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDivisaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerIdiomaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerGrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPaisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerProvinciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTareaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTemporadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerConceptosCuentasAlternativaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDireccionesEnvioClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDescripcionArticulosIdiomaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDescripcionFamiliasIdiomasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDescripcionSubFamiliasIdiomasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDesgloseMonetarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPoblacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPermisosUsuariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPermisosGruposOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPuntosDesgloseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertAlbaranClienteFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertPedidoClienteFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertPedidoClienteXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertClienteFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerStocksFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDatosFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDatosXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerValorFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjecutarFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListadoDeExistenciasEnFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarLineaInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSLoginCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSArticulosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSValidateEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSGuardarVentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSCobrarVentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSInicioDiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSArqueoDiferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSArqueoEjecucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSCobrosPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSUltimoTicketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSSesionActivaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSCerrarSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private POSEliminarImagenesDirectorioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBackUpBaseDeDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearBaseDeDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InicializarBaseDeDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFiltroUsuarioOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDatoUsuarioOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivarFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesActivarFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VentasPorTiendaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumenVentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UltimasVentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VentasPorFamiliasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SituacionActualTiendasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VentasPorMesesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PedidosPendientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FichaArticuloStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnviarMensajeOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MisDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnviarPasswordPorMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BannerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPeriodoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerUsuarioOfficePosDEMOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AccederOficinaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AccederRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BannerLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarComunicacionesTiendaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ErroresSincronizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionMesasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaInventarioFisicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionSeccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTPVCrmEstadisticaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTPVPerifericosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTPVPerifericosCharsetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTPVPerifericosCodigosDeControlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTpvParametrosAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTpvTareasAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTpvArticulosConfiguracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AltaModificacionTiendasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDatosSincronizarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosModeloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosDescripcionIdiomaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCodigosDeBarrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerVendedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDireccionesVariasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTiendasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTiendasGrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTPVPerifericosCharsetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoTarifaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTarifaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPromocionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPromocionEscaladoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerClientesPreciosEscaladoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosModeloAlternativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosComplementariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerArticulosModeloComplementariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerColoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerColoresDesgloseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFabricanteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFamiliaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFormaDePagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerIvaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerMarcaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerModistaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerSerieOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerSubFamiliaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTallaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTallasDesgloseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoDeDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoDeClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoDeDesgloseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTiposMovimientoAlmacenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAlmacenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NumeroFilasClientesDireccionesVariasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NumeroFilasClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PuntosClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PuntosClientesImporteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExisteClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaldoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NumeroFilasArticulosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaStocksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateIPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerIPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertTesoreriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertMovClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarReciboOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertReciboOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateReciboOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertAlbaranTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelarAlbaranTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarAlbaranClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertAlbaranClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarFacturaClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertFacturaClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarPedidoClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertPedidoClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarCabeceraPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarPresupuestoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertPresupuestoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarCabeceraPresupuestoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPresupuestoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoCobrarOnlineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConfirmarMensajeRecibidoEnTiendaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirMovimientosAlmacenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirEstadisticaVentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirDiarioCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirInformacionAdicionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirMovimientosPuntosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirCintaDeControlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirControlHorarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferirAuditoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VersionWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FactorCambioDeDivisaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ComprobarCredencialesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerValorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjecutarQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjecutarQueryParamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPLSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MatarColaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnviarMailDesdeOfficePOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPasswordOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambioDeAñoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivarTiendaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTiendasLibresOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCajasLibresOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutentificacionUsuarioOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PermisosUsuarioOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarObservacionesUsuarioOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFechaVencimientoContratoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ContratoVigenteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VigentePorFechasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoClienteOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutentificacionOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CerrarSesionesAbiertasOfficePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SesionActivaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RealizarCopiaSeguridadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearBaseDatosCompactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CumplimentarDatosCompactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CompactarDatosCompactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RealizarCopiaSeguridadCompactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RealizarCopiaSeguridadCompactStandardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RealizarCopiaSeguridadCentralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CentralInformesWeb.My.MySettings.Default.CentralInformesWeb_com_serveftp_laforja_VgeServicios
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property VgeCredencialesUsuarioValue() As VgeCredencialesUsuario
            Get
                Return Me.vgeCredencialesUsuarioValueField
            End Get
            Set
                Me.vgeCredencialesUsuarioValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event POSSuperadasTransaccionesCompleted As POSSuperadasTransaccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataPSCompleted As GetDataPSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStocksPSCompleted As GetStocksPSCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCustomerPSCompleted As InsertCustomerPSCompletedEventHandler
        
        '''<remarks/>
        Public Event ExecutePSCompleted As ExecutePSCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertOrderXMLPSCompleted As InsertOrderXMLPSCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerZonaCompleted As ObtenerZonaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPerfilesTiendaCompleted As ObtenerPerfilesTiendaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPerfilesCajaCompleted As ObtenerPerfilesCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvTareasCompleted As ObtenerTpvTareasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvTareasAlternativosCompleted As ObtenerTpvTareasAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerMesasCompleted As ObtenerMesasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerSeccionesCompleted As ObtenerSeccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTPVPerifericosCompleted As ObtenerTPVPerifericosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvArticulosConfiguracionCompleted As ObtenerTpvArticulosConfiguracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvCrmCompleted As ObtenerTpvCrmCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerEscandallosCompleted As ObtenerEscandallosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvParametrosCompleted As ObtenerTpvParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvParametrosAlternativosCompleted As ObtenerTpvParametrosAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTpvPermisosVendedoresCompleted As ObtenerTpvPermisosVendedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosTiendaCompleted As ObtenerArticulosTiendaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTPVPerifericosCodigosDeControlCompleted As ObtenerTPVPerifericosCodigosDeControlCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTiposDeRepartoCompleted As ObtenerTiposDeRepartoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerProveedorCompleted As ObtenerProveedorCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerProveedorAlternativoCompleted As ObtenerProveedorAlternativoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAgenciaDeTransporteCompleted As ObtenerAgenciaDeTransporteCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerConceptoCuentaCompleted As ObtenerConceptoCuentaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDepartamentoCompleted As ObtenerDepartamentoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDivisaCompleted As ObtenerDivisaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerIdiomaCompleted As ObtenerIdiomaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerGrupoCompleted As ObtenerGrupoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPaisCompleted As ObtenerPaisCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerProvinciaCompleted As ObtenerProvinciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerUsuarioCompleted As ObtenerUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTareaCompleted As ObtenerTareaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerProcesoCompleted As ObtenerProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTemporadaCompleted As ObtenerTemporadaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerConceptosCuentasAlternativaCompleted As ObtenerConceptosCuentasAlternativaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDireccionesEnvioClienteCompleted As ObtenerDireccionesEnvioClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDescripcionArticulosIdiomaCompleted As ObtenerDescripcionArticulosIdiomaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDescripcionFamiliasIdiomasCompleted As ObtenerDescripcionFamiliasIdiomasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDescripcionSubFamiliasIdiomasCompleted As ObtenerDescripcionSubFamiliasIdiomasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDesgloseMonetarioCompleted As ObtenerDesgloseMonetarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPoblacionCompleted As ObtenerPoblacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPermisosUsuariosCompleted As ObtenerPermisosUsuariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPermisosGruposCompleted As ObtenerPermisosGruposCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPuntosDesgloseCompleted As ObtenerPuntosDesgloseCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerClienteCompleted As ObtenerClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertAlbaranClienteFCompleted As InsertAlbaranClienteFCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertPedidoClienteFCompleted As InsertPedidoClienteFCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertPedidoClienteXMLCompleted As InsertPedidoClienteXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertClienteFCompleted As InsertClienteFCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerStocksFCompleted As ObtenerStocksFCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDatosFCompleted As ObtenerDatosFCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDatosXMLCompleted As ObtenerDatosXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerValorFCompleted As ObtenerValorFCompletedEventHandler
        
        '''<remarks/>
        Public Event EjecutarFCompleted As EjecutarFCompletedEventHandler
        
        '''<remarks/>
        Public Event ListadoDeExistenciasEnFechaCompleted As ListadoDeExistenciasEnFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarLineaInventarioCompleted As InsertarLineaInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearInventarioCompleted As CrearInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarInventarioCompleted As ActualizarInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event POSLoginCompleted As POSLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event POSLoginCajaCompleted As POSLoginCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event POSArticulosCompleted As POSArticulosCompletedEventHandler
        
        '''<remarks/>
        Public Event POSValidateEmployeeCompleted As POSValidateEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event POSClientesCompleted As POSClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event POSGuardarVentaCompleted As POSGuardarVentaCompletedEventHandler
        
        '''<remarks/>
        Public Event POSCobrarVentaCompleted As POSCobrarVentaCompletedEventHandler
        
        '''<remarks/>
        Public Event POSInicioDiaCompleted As POSInicioDiaCompletedEventHandler
        
        '''<remarks/>
        Public Event POSArqueoDiferenciasCompleted As POSArqueoDiferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event POSArqueoEjecucionCompleted As POSArqueoEjecucionCompletedEventHandler
        
        '''<remarks/>
        Public Event POSCobrosPagosCompleted As POSCobrosPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event POSUltimoTicketCompleted As POSUltimoTicketCompletedEventHandler
        
        '''<remarks/>
        Public Event POSSesionActivaCompleted As POSSesionActivaCompletedEventHandler
        
        '''<remarks/>
        Public Event POSCerrarSesionCompleted As POSCerrarSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event POSEliminarImagenesDirectorioCompleted As POSEliminarImagenesDirectorioCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBackUpBaseDeDatosCompleted As EliminarBackUpBaseDeDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearBaseDeDatosCompleted As CrearBaseDeDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event ComprobarBaseDastosCreadaOfficePosEnServidorCompleted As ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEventHandler
        
        '''<remarks/>
        Public Event InicializarBaseDeDatosCompleted As InicializarBaseDeDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFiltroUsuarioOfficePosCompleted As ObtenerFiltroUsuarioOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDatoUsuarioOfficePosCompleted As ObtenerDatoUsuarioOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivarFiltroCompleted As ActivarFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event DesActivarFiltroCompleted As DesActivarFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event VentasPorTiendaCompleted As VentasPorTiendaCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumenVentasCompleted As ResumenVentasCompletedEventHandler
        
        '''<remarks/>
        Public Event UltimasVentasCompleted As UltimasVentasCompletedEventHandler
        
        '''<remarks/>
        Public Event VentasPorFamiliasCompleted As VentasPorFamiliasCompletedEventHandler
        
        '''<remarks/>
        Public Event SituacionActualTiendasCompleted As SituacionActualTiendasCompletedEventHandler
        
        '''<remarks/>
        Public Event VentasPorMesesCompleted As VentasPorMesesCompletedEventHandler
        
        '''<remarks/>
        Public Event PedidosPendientesCompleted As PedidosPendientesCompletedEventHandler
        
        '''<remarks/>
        Public Event FichaArticuloStockCompleted As FichaArticuloStockCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarCompleted As BuscarCompletedEventHandler
        
        '''<remarks/>
        Public Event EnviarMensajeOfficePosCompleted As EnviarMensajeOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event MisDatosCompleted As MisDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event EnviarPasswordPorMailCompleted As EnviarPasswordPorMailCompletedEventHandler
        
        '''<remarks/>
        Public Event BannerCompleted As BannerCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPeriodoCompleted As ObtenerPeriodoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerUsuarioOfficePosDEMOCompleted As ObtenerUsuarioOfficePosDEMOCompletedEventHandler
        
        '''<remarks/>
        Public Event AccederOficinaCompleted As AccederOficinaCompletedEventHandler
        
        '''<remarks/>
        Public Event AccederRegistroCompleted As AccederRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event BannerLoginCompleted As BannerLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarComunicacionesTiendaCompleted As ActualizarComunicacionesTiendaCompletedEventHandler
        
        '''<remarks/>
        Public Event ErroresSincronizacionCompleted As ErroresSincronizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionMesasCompleted As AltaModificacionMesasCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaInventarioFisicoCompleted As AltaInventarioFisicoCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionSeccionesCompleted As AltaModificacionSeccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTPVCrmEstadisticaCompleted As AltaModificacionTPVCrmEstadisticaCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTPVPerifericosCompleted As AltaModificacionTPVPerifericosCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTPVPerifericosCharsetCompleted As AltaModificacionTPVPerifericosCharsetCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTPVPerifericosCodigosDeControlCompleted As AltaModificacionTPVPerifericosCodigosDeControlCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTpvParametrosAlternativosCompleted As AltaModificacionTpvParametrosAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTpvTareasAlternativosCompleted As AltaModificacionTpvTareasAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTpvArticulosConfiguracionCompleted As AltaModificacionTpvArticulosConfiguracionCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionCajasCompleted As AltaModificacionCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event AltaModificacionTiendasCompleted As AltaModificacionTiendasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDatosSincronizarCompleted As ObtenerDatosSincronizarCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosModeloCompleted As ObtenerArticulosModeloCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosCompleted As ObtenerArticulosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosDescripcionIdiomaCompleted As ObtenerArticulosDescripcionIdiomaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCodigosDeBarrasCompleted As ObtenerCodigosDeBarrasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerVendedoresCompleted As ObtenerVendedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerEmpresaCompleted As ObtenerEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerBancoCompleted As ObtenerBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDireccionesVariasCompleted As ObtenerDireccionesVariasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTiendasCompleted As ObtenerTiendasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCajasCompleted As ObtenerCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTiendasGrupoCompleted As ObtenerTiendasGrupoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTPVPerifericosCharsetCompleted As ObtenerTPVPerifericosCharsetCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoTarifaCompleted As ObtenerTipoTarifaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTarifaCompleted As ObtenerTarifaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPromocionCompleted As ObtenerPromocionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPromocionEscaladoCompleted As ObtenerPromocionEscaladoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerClientesPreciosEscaladoCompleted As ObtenerClientesPreciosEscaladoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosAlternativosCompleted As ObtenerArticulosAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosModeloAlternativosCompleted As ObtenerArticulosModeloAlternativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosComplementariosCompleted As ObtenerArticulosComplementariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerArticulosModeloComplementariosCompleted As ObtenerArticulosModeloComplementariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerColoresCompleted As ObtenerColoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerColoresDesgloseCompleted As ObtenerColoresDesgloseCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFabricanteCompleted As ObtenerFabricanteCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFamiliaCompleted As ObtenerFamiliaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFormaDePagoCompleted As ObtenerFormaDePagoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerIvaEmpresaCompleted As ObtenerIvaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerMarcaCompleted As ObtenerMarcaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerModistaCompleted As ObtenerModistaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerSerieCompleted As ObtenerSerieCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerSubFamiliaCompleted As ObtenerSubFamiliaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTallaCompleted As ObtenerTallaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTallasDesgloseCompleted As ObtenerTallasDesgloseCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoDeDocumentoCompleted As ObtenerTipoDeDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoDeClienteCompleted As ObtenerTipoDeClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoDeDesgloseCompleted As ObtenerTipoDeDesgloseCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTiposMovimientoAlmacenCompleted As ObtenerTiposMovimientoAlmacenCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAlmacenCompleted As ObtenerAlmacenCompletedEventHandler
        
        '''<remarks/>
        Public Event NumeroFilasClientesDireccionesVariasCompleted As NumeroFilasClientesDireccionesVariasCompletedEventHandler
        
        '''<remarks/>
        Public Event NumeroFilasClientesCompleted As NumeroFilasClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event PuntosClientesCompleted As PuntosClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event PuntosClientesImporteCompleted As PuntosClientesImporteCompletedEventHandler
        
        '''<remarks/>
        Public Event ExisteClienteCompleted As ExisteClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarClienteCompleted As CargarClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateClienteCompleted As UpdateClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertClienteCompleted As InsertClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event SaldoCompleted As SaldoCompletedEventHandler
        
        '''<remarks/>
        Public Event NumeroFilasArticulosCompleted As NumeroFilasArticulosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaStocksCompleted As ConsultaStocksCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateIPCompleted As UpdateIPCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerIPCompleted As ObtenerIPCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertTesoreriaCompleted As InsertTesoreriaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertMovClienteCompleted As InsertMovClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarReciboCompleted As CargarReciboCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertReciboCompleted As InsertReciboCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateReciboCompleted As UpdateReciboCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertAlbaranTraspasoCompleted As InsertAlbaranTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelarAlbaranTraspasoCompleted As CancelarAlbaranTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarAlbaranClienteCompleted As CargarAlbaranClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertAlbaranClienteCompleted As InsertAlbaranClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarFacturaClienteCompleted As CargarFacturaClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertFacturaClienteCompleted As InsertFacturaClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarPedidoClienteCompleted As CargarPedidoClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertPedidoClienteCompleted As InsertPedidoClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPedidoCompleted As EliminarPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarPedidoCompleted As ActualizarPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarCabeceraPedidoCompleted As ActualizarCabeceraPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarPresupuestoCompleted As CargarPresupuestoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertPresupuestoCompleted As InsertPresupuestoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarCabeceraPresupuestoCompleted As ActualizarCabeceraPresupuestoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPresupuestoCompleted As EliminarPresupuestoCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoCobrarOnlineCompleted As ProcesoCobrarOnlineCompletedEventHandler
        
        '''<remarks/>
        Public Event ConfirmarMensajeRecibidoEnTiendaCompleted As ConfirmarMensajeRecibidoEnTiendaCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirMensajesCompleted As TransferirMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirMovimientosAlmacenCompleted As TransferirMovimientosAlmacenCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirEstadisticaVentasCompleted As TransferirEstadisticaVentasCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirDiarioCajaCompleted As TransferirDiarioCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirInformacionAdicionalCompleted As TransferirInformacionAdicionalCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirMovimientosPuntosCompleted As TransferirMovimientosPuntosCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirCintaDeControlCompleted As TransferirCintaDeControlCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirControlHorarioCompleted As TransferirControlHorarioCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferirAuditoriaCompleted As TransferirAuditoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event VersionWSCompleted As VersionWSCompletedEventHandler
        
        '''<remarks/>
        Public Event FactorCambioDeDivisaCompleted As FactorCambioDeDivisaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAlmacenTransitoSiTengoTratamientoCompleted As ObtenerAlmacenTransitoSiTengoTratamientoCompletedEventHandler
        
        '''<remarks/>
        Public Event ComprobarCredencialesCompleted As ComprobarCredencialesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerValorCompleted As ObtenerValorCompletedEventHandler
        
        '''<remarks/>
        Public Event EjecutarQueryCompleted As EjecutarQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event EjecutarQueryParamCompleted As EjecutarQueryParamCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCompleted As ObtenerCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPLSCompleted As ObtenerPLSCompletedEventHandler
        
        '''<remarks/>
        Public Event MatarColaCompleted As MatarColaCompletedEventHandler
        
        '''<remarks/>
        Public Event EnviarMailDesdeOfficePOSCompleted As EnviarMailDesdeOfficePOSCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPasswordOfficePosCompleted As ObtenerPasswordOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event CambioDeAñoCompleted As CambioDeAñoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivarTiendaCajaCompleted As ActivarTiendaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTiendasLibresOfficePosCompleted As ObtenerTiendasLibresOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCajasLibresOfficePosCompleted As ObtenerCajasLibresOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event AutentificacionUsuarioOfficePosCompleted As AutentificacionUsuarioOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event PermisosUsuarioOfficePosCompleted As PermisosUsuarioOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarObservacionesUsuarioOfficePosCompleted As ActualizarObservacionesUsuarioOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFechaVencimientoContratoCompleted As ObtenerFechaVencimientoContratoCompletedEventHandler
        
        '''<remarks/>
        Public Event ContratoVigenteCompleted As ContratoVigenteCompletedEventHandler
        
        '''<remarks/>
        Public Event VigentePorFechasCompleted As VigentePorFechasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoClienteOfficePosCompleted As ObtenerTipoClienteOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event AutentificacionOfficePosCompleted As AutentificacionOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event CerrarSesionesAbiertasOfficePosCompleted As CerrarSesionesAbiertasOfficePosCompletedEventHandler
        
        '''<remarks/>
        Public Event SesionActivaCompleted As SesionActivaCompletedEventHandler
        
        '''<remarks/>
        Public Event RealizarCopiaSeguridadCompleted As RealizarCopiaSeguridadCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearBaseDatosCompactCompleted As CrearBaseDatosCompactCompletedEventHandler
        
        '''<remarks/>
        Public Event CumplimentarDatosCompactCompleted As CumplimentarDatosCompactCompletedEventHandler
        
        '''<remarks/>
        Public Event CompactarDatosCompactCompleted As CompactarDatosCompactCompletedEventHandler
        
        '''<remarks/>
        Public Event RealizarCopiaSeguridadCompactCompleted As RealizarCopiaSeguridadCompactCompletedEventHandler
        
        '''<remarks/>
        Public Event RealizarCopiaSeguridadCompactStandardCompleted As RealizarCopiaSeguridadCompactStandardCompletedEventHandler
        
        '''<remarks/>
        Public Event RealizarCopiaSeguridadCentralCompleted As RealizarCopiaSeguridadCentralCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSSuperadasTransacciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSSuperadasTransacciones(ByVal data As String)
            Me.Invoke("POSSuperadasTransacciones", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSSuperadasTransaccionesAsync(ByVal data As String)
            Me.POSSuperadasTransaccionesAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSSuperadasTransaccionesAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSSuperadasTransaccionesOperationCompleted Is Nothing) Then
                Me.POSSuperadasTransaccionesOperationCompleted = AddressOf Me.OnPOSSuperadasTransaccionesOperationCompleted
            End If
            Me.InvokeAsync("POSSuperadasTransacciones", New Object() {data}, Me.POSSuperadasTransaccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSSuperadasTransaccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSSuperadasTransaccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSSuperadasTransaccionesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataPS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataPS(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDataPS", New Object() {IdClienteOfficePOS, idNumSerie, sSQL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String)
            Me.GetDataPSAsync(IdClienteOfficePOS, idNumSerie, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String, ByVal userState As Object)
            If (Me.GetDataPSOperationCompleted Is Nothing) Then
                Me.GetDataPSOperationCompleted = AddressOf Me.OnGetDataPSOperationCompleted
            End If
            Me.InvokeAsync("GetDataPS", New Object() {IdClienteOfficePOS, idNumSerie, sSQL}, Me.GetDataPSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataPSCompleted(Me, New GetDataPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStocksPS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStocksPS(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStocksPS", New Object() {IdClienteOfficePOS, idNumSerie, NumeroDeAlmacen, Articulo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStocksPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String)
            Me.GetStocksPSAsync(IdClienteOfficePOS, idNumSerie, NumeroDeAlmacen, Articulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStocksPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String, ByVal userState As Object)
            If (Me.GetStocksPSOperationCompleted Is Nothing) Then
                Me.GetStocksPSOperationCompleted = AddressOf Me.OnGetStocksPSOperationCompleted
            End If
            Me.InvokeAsync("GetStocksPS", New Object() {IdClienteOfficePOS, idNumSerie, NumeroDeAlmacen, Articulo}, Me.GetStocksPSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStocksPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStocksPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStocksPSCompleted(Me, New GetStocksPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerPS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCustomerPS( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal idNumSerie As String,  _
                    ByRef CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String) As String
            Dim results() As Object = Me.Invoke("InsertCustomerPS", New Object() {IdClienteOfficePOS, idNumSerie, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma})
            CodigoDeCliente = CType(results(1),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCustomerPSAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal idNumSerie As String,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String)
            Me.InsertCustomerPSAsync(IdClienteOfficePOS, idNumSerie, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCustomerPSAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal idNumSerie As String,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String,  _
                    ByVal userState As Object)
            If (Me.InsertCustomerPSOperationCompleted Is Nothing) Then
                Me.InsertCustomerPSOperationCompleted = AddressOf Me.OnInsertCustomerPSOperationCompleted
            End If
            Me.InvokeAsync("InsertCustomerPS", New Object() {IdClienteOfficePOS, idNumSerie, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma}, Me.InsertCustomerPSOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCustomerPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCustomerPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCustomerPSCompleted(Me, New InsertCustomerPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecutePS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExecutePS(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String) As String
            Dim results() As Object = Me.Invoke("ExecutePS", New Object() {IdClienteOfficePOS, idNumSerie, sSQL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExecutePSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String)
            Me.ExecutePSAsync(IdClienteOfficePOS, idNumSerie, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExecutePSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ExecutePSOperationCompleted Is Nothing) Then
                Me.ExecutePSOperationCompleted = AddressOf Me.OnExecutePSOperationCompleted
            End If
            Me.InvokeAsync("ExecutePS", New Object() {IdClienteOfficePOS, idNumSerie, sSQL}, Me.ExecutePSOperationCompleted, userState)
        End Sub
        
        Private Sub OnExecutePSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExecutePSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExecutePSCompleted(Me, New ExecutePSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOrderXMLPS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertOrderXMLPS(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal xmlPedido As String, ByRef sMensajeError As String) As Integer
            Dim results() As Object = Me.Invoke("InsertOrderXMLPS", New Object() {IdClienteOfficePOS, idNumSerie, xmlPedido, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertOrderXMLPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal xmlPedido As String, ByVal sMensajeError As String)
            Me.InsertOrderXMLPSAsync(IdClienteOfficePOS, idNumSerie, xmlPedido, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertOrderXMLPSAsync(ByVal IdClienteOfficePOS As Integer, ByVal idNumSerie As String, ByVal xmlPedido As String, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertOrderXMLPSOperationCompleted Is Nothing) Then
                Me.InsertOrderXMLPSOperationCompleted = AddressOf Me.OnInsertOrderXMLPSOperationCompleted
            End If
            Me.InvokeAsync("InsertOrderXMLPS", New Object() {IdClienteOfficePOS, idNumSerie, xmlPedido, sMensajeError}, Me.InsertOrderXMLPSOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertOrderXMLPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertOrderXMLPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertOrderXMLPSCompleted(Me, New InsertOrderXMLPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerZona", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerZona(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerZona", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerZonaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerZonaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerZonaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerZonaOperationCompleted Is Nothing) Then
                Me.ObtenerZonaOperationCompleted = AddressOf Me.OnObtenerZonaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerZona", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerZonaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerZonaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerZonaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerZonaCompleted(Me, New ObtenerZonaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPerfilesTienda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPerfilesTienda(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPerfilesTienda", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPerfilesTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerPerfilesTiendaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPerfilesTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPerfilesTiendaOperationCompleted Is Nothing) Then
                Me.ObtenerPerfilesTiendaOperationCompleted = AddressOf Me.OnObtenerPerfilesTiendaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPerfilesTienda", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerPerfilesTiendaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPerfilesTiendaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPerfilesTiendaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPerfilesTiendaCompleted(Me, New ObtenerPerfilesTiendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPerfilesCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPerfilesCaja(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPerfilesCaja", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPerfilesCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerPerfilesCajaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPerfilesCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPerfilesCajaOperationCompleted Is Nothing) Then
                Me.ObtenerPerfilesCajaOperationCompleted = AddressOf Me.OnObtenerPerfilesCajaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPerfilesCaja", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerPerfilesCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPerfilesCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPerfilesCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPerfilesCajaCompleted(Me, New ObtenerPerfilesCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvTareas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvTareas(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvTareas", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvTareasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTpvTareasAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvTareasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvTareasOperationCompleted Is Nothing) Then
                Me.ObtenerTpvTareasOperationCompleted = AddressOf Me.OnObtenerTpvTareasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvTareas", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTpvTareasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvTareasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvTareasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvTareasCompleted(Me, New ObtenerTpvTareasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvTareasAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvTareasAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvTareasAlternativos", New Object() {IdClienteOfficePOS, iTienda, iCaja, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvTareasAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTpvTareasAlternativosAsync(IdClienteOfficePOS, iTienda, iCaja, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvTareasAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvTareasAlternativosOperationCompleted Is Nothing) Then
                Me.ObtenerTpvTareasAlternativosOperationCompleted = AddressOf Me.OnObtenerTpvTareasAlternativosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvTareasAlternativos", New Object() {IdClienteOfficePOS, iTienda, iCaja, sCodigo, sMsg}, Me.ObtenerTpvTareasAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvTareasAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvTareasAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvTareasAlternativosCompleted(Me, New ObtenerTpvTareasAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMesas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerMesas(ByVal IdClienteOfficePOS As Integer, ByVal sMesa As String, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sSalon As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerMesas", New Object() {IdClienteOfficePOS, sMesa, iTienda, iCaja, sSalon, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerMesasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sMesa As String, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sSalon As String, ByVal sMsg As String)
            Me.ObtenerMesasAsync(IdClienteOfficePOS, sMesa, iTienda, iCaja, sSalon, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerMesasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sMesa As String, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sSalon As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerMesasOperationCompleted Is Nothing) Then
                Me.ObtenerMesasOperationCompleted = AddressOf Me.OnObtenerMesasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerMesas", New Object() {IdClienteOfficePOS, sMesa, iTienda, iCaja, sSalon, sMsg}, Me.ObtenerMesasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerMesasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerMesasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerMesasCompleted(Me, New ObtenerMesasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerSecciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerSecciones(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerSecciones", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerSeccionesAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerSeccionesAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerSeccionesAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerSeccionesOperationCompleted Is Nothing) Then
                Me.ObtenerSeccionesOperationCompleted = AddressOf Me.OnObtenerSeccionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerSecciones", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerSeccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerSeccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerSeccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerSeccionesCompleted(Me, New ObtenerSeccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTPVPerifericos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTPVPerifericos(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal iPeriferico As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTPVPerifericos", New Object() {IdClienteOfficePOS, iTienda, iCaja, iPeriferico, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal iPeriferico As Integer, ByVal sMsg As String)
            Me.ObtenerTPVPerifericosAsync(IdClienteOfficePOS, iTienda, iCaja, iPeriferico, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal iPeriferico As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTPVPerifericosOperationCompleted Is Nothing) Then
                Me.ObtenerTPVPerifericosOperationCompleted = AddressOf Me.OnObtenerTPVPerifericosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTPVPerifericos", New Object() {IdClienteOfficePOS, iTienda, iCaja, iPeriferico, sMsg}, Me.ObtenerTPVPerifericosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTPVPerifericosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTPVPerifericosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTPVPerifericosCompleted(Me, New ObtenerTPVPerifericosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvArticulosConfiguracion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvArticulosConfiguracion(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal bFamilia As Boolean, ByVal sSeccionId As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvArticulosConfiguracion", New Object() {IdClienteOfficePOS, sCodigo, bFamilia, sSeccionId, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvArticulosConfiguracionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal bFamilia As Boolean, ByVal sSeccionId As String, ByVal sMsg As String)
            Me.ObtenerTpvArticulosConfiguracionAsync(IdClienteOfficePOS, sCodigo, bFamilia, sSeccionId, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvArticulosConfiguracionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal bFamilia As Boolean, ByVal sSeccionId As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvArticulosConfiguracionOperationCompleted Is Nothing) Then
                Me.ObtenerTpvArticulosConfiguracionOperationCompleted = AddressOf Me.OnObtenerTpvArticulosConfiguracionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvArticulosConfiguracion", New Object() {IdClienteOfficePOS, sCodigo, bFamilia, sSeccionId, sMsg}, Me.ObtenerTpvArticulosConfiguracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvArticulosConfiguracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvArticulosConfiguracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvArticulosConfiguracionCompleted(Me, New ObtenerTpvArticulosConfiguracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvCrm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvCrm(ByVal IdClienteOfficePOS As Integer, ByVal sPregunta As String, ByVal sRespuesta As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvCrm", New Object() {IdClienteOfficePOS, sPregunta, sRespuesta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvCrmAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPregunta As String, ByVal sRespuesta As String, ByVal sMsg As String)
            Me.ObtenerTpvCrmAsync(IdClienteOfficePOS, sPregunta, sRespuesta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvCrmAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPregunta As String, ByVal sRespuesta As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvCrmOperationCompleted Is Nothing) Then
                Me.ObtenerTpvCrmOperationCompleted = AddressOf Me.OnObtenerTpvCrmOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvCrm", New Object() {IdClienteOfficePOS, sPregunta, sRespuesta, sMsg}, Me.ObtenerTpvCrmOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvCrmOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvCrmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvCrmCompleted(Me, New ObtenerTpvCrmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerEscandallos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerEscandallos(ByVal IdClienteOfficePOS As Integer, ByVal sCodigoDeArticulo As String, ByVal sArticuloAlQueCompone As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerEscandallos", New Object() {IdClienteOfficePOS, sCodigoDeArticulo, sArticuloAlQueCompone, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerEscandallosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigoDeArticulo As String, ByVal sArticuloAlQueCompone As String, ByVal sMsg As String)
            Me.ObtenerEscandallosAsync(IdClienteOfficePOS, sCodigoDeArticulo, sArticuloAlQueCompone, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerEscandallosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigoDeArticulo As String, ByVal sArticuloAlQueCompone As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerEscandallosOperationCompleted Is Nothing) Then
                Me.ObtenerEscandallosOperationCompleted = AddressOf Me.OnObtenerEscandallosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerEscandallos", New Object() {IdClienteOfficePOS, sCodigoDeArticulo, sArticuloAlQueCompone, sMsg}, Me.ObtenerEscandallosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerEscandallosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerEscandallosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerEscandallosCompleted(Me, New ObtenerEscandallosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvParametros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvParametros(ByVal IdClienteOfficePOS As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvParametros", New Object() {IdClienteOfficePOS, sAmbito, sSeccion, sClave, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvParametrosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByVal sMsg As String)
            Me.ObtenerTpvParametrosAsync(IdClienteOfficePOS, sAmbito, sSeccion, sClave, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvParametrosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvParametrosOperationCompleted Is Nothing) Then
                Me.ObtenerTpvParametrosOperationCompleted = AddressOf Me.OnObtenerTpvParametrosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvParametros", New Object() {IdClienteOfficePOS, sAmbito, sSeccion, sClave, sMsg}, Me.ObtenerTpvParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvParametrosCompleted(Me, New ObtenerTpvParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvParametrosAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvParametrosAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvParametrosAlternativos", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, sAmbito, sSeccion, sClave, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvParametrosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByVal sMsg As String)
            Me.ObtenerTpvParametrosAlternativosAsync(IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, sAmbito, sSeccion, sClave, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvParametrosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal sAmbito As String, ByVal sSeccion As String, ByVal sClave As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvParametrosAlternativosOperationCompleted Is Nothing) Then
                Me.ObtenerTpvParametrosAlternativosOperationCompleted = AddressOf Me.OnObtenerTpvParametrosAlternativosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvParametrosAlternativos", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, sAmbito, sSeccion, sClave, sMsg}, Me.ObtenerTpvParametrosAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvParametrosAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvParametrosAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvParametrosAlternativosCompleted(Me, New ObtenerTpvParametrosAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTpvPermisosVendedores", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTpvPermisosVendedores(ByVal IdClienteOfficePOS As Integer, ByVal iVendedor As Integer, ByVal sTPVTareaID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTpvPermisosVendedores", New Object() {IdClienteOfficePOS, iVendedor, sTPVTareaID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvPermisosVendedoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal iVendedor As Integer, ByVal sTPVTareaID As String, ByVal sMsg As String)
            Me.ObtenerTpvPermisosVendedoresAsync(IdClienteOfficePOS, iVendedor, sTPVTareaID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTpvPermisosVendedoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal iVendedor As Integer, ByVal sTPVTareaID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTpvPermisosVendedoresOperationCompleted Is Nothing) Then
                Me.ObtenerTpvPermisosVendedoresOperationCompleted = AddressOf Me.OnObtenerTpvPermisosVendedoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTpvPermisosVendedores", New Object() {IdClienteOfficePOS, iVendedor, sTPVTareaID, sMsg}, Me.ObtenerTpvPermisosVendedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTpvPermisosVendedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTpvPermisosVendedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTpvPermisosVendedoresCompleted(Me, New ObtenerTpvPermisosVendedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosTienda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosTienda(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sArticulo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosTienda", New Object() {IdClienteOfficePOS, iTienda, sArticulo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sArticulo As String, ByVal sMsg As String)
            Me.ObtenerArticulosTiendaAsync(IdClienteOfficePOS, iTienda, sArticulo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sArticulo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosTiendaOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosTiendaOperationCompleted = AddressOf Me.OnObtenerArticulosTiendaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosTienda", New Object() {IdClienteOfficePOS, iTienda, sArticulo, sMsg}, Me.ObtenerArticulosTiendaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosTiendaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosTiendaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosTiendaCompleted(Me, New ObtenerArticulosTiendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTPVPerifericosCodigosDeControl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTPVPerifericosCodigosDeControl(ByVal IdClienteOfficePOS As Integer, ByVal iControl As Integer, ByVal sMacro As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTPVPerifericosCodigosDeControl", New Object() {IdClienteOfficePOS, iControl, sMacro, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosCodigosDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal iControl As Integer, ByVal sMacro As String, ByVal sMsg As String)
            Me.ObtenerTPVPerifericosCodigosDeControlAsync(IdClienteOfficePOS, iControl, sMacro, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosCodigosDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal iControl As Integer, ByVal sMacro As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTPVPerifericosCodigosDeControlOperationCompleted Is Nothing) Then
                Me.ObtenerTPVPerifericosCodigosDeControlOperationCompleted = AddressOf Me.OnObtenerTPVPerifericosCodigosDeControlOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTPVPerifericosCodigosDeControl", New Object() {IdClienteOfficePOS, iControl, sMacro, sMsg}, Me.ObtenerTPVPerifericosCodigosDeControlOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTPVPerifericosCodigosDeControlOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTPVPerifericosCodigosDeControlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTPVPerifericosCodigosDeControlCompleted(Me, New ObtenerTPVPerifericosCodigosDeControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTiposDeReparto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTiposDeReparto(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTiposDeReparto", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiposDeRepartoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTiposDeRepartoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiposDeRepartoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTiposDeRepartoOperationCompleted Is Nothing) Then
                Me.ObtenerTiposDeRepartoOperationCompleted = AddressOf Me.OnObtenerTiposDeRepartoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTiposDeReparto", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTiposDeRepartoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTiposDeRepartoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTiposDeRepartoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTiposDeRepartoCompleted(Me, New ObtenerTiposDeRepartoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerProveedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerProveedor(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerProveedor", New Object() {IdClienteOfficePOS, CodigoDeProveedor, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerProveedorAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByVal sMsg As String)
            Me.ObtenerProveedorAsync(IdClienteOfficePOS, CodigoDeProveedor, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerProveedorAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerProveedorOperationCompleted Is Nothing) Then
                Me.ObtenerProveedorOperationCompleted = AddressOf Me.OnObtenerProveedorOperationCompleted
            End If
            Me.InvokeAsync("ObtenerProveedor", New Object() {IdClienteOfficePOS, CodigoDeProveedor, sMsg}, Me.ObtenerProveedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerProveedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerProveedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerProveedorCompleted(Me, New ObtenerProveedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerProveedorAlternativo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerProveedorAlternativo(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByVal sArticulo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerProveedorAlternativo", New Object() {IdClienteOfficePOS, CodigoDeProveedor, sArticulo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerProveedorAlternativoAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByVal sArticulo As String, ByVal sMsg As String)
            Me.ObtenerProveedorAlternativoAsync(IdClienteOfficePOS, CodigoDeProveedor, sArticulo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerProveedorAlternativoAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeProveedor As Integer, ByVal sArticulo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerProveedorAlternativoOperationCompleted Is Nothing) Then
                Me.ObtenerProveedorAlternativoOperationCompleted = AddressOf Me.OnObtenerProveedorAlternativoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerProveedorAlternativo", New Object() {IdClienteOfficePOS, CodigoDeProveedor, sArticulo, sMsg}, Me.ObtenerProveedorAlternativoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerProveedorAlternativoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerProveedorAlternativoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerProveedorAlternativoCompleted(Me, New ObtenerProveedorAlternativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerAgenciaDeTransporte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAgenciaDeTransporte(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerAgenciaDeTransporte", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAgenciaDeTransporteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerAgenciaDeTransporteAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAgenciaDeTransporteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerAgenciaDeTransporteOperationCompleted Is Nothing) Then
                Me.ObtenerAgenciaDeTransporteOperationCompleted = AddressOf Me.OnObtenerAgenciaDeTransporteOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAgenciaDeTransporte", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerAgenciaDeTransporteOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAgenciaDeTransporteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAgenciaDeTransporteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAgenciaDeTransporteCompleted(Me, New ObtenerAgenciaDeTransporteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerConceptoCuenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerConceptoCuenta(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerConceptoCuenta", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerConceptoCuentaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerConceptoCuentaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerConceptoCuentaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerConceptoCuentaOperationCompleted Is Nothing) Then
                Me.ObtenerConceptoCuentaOperationCompleted = AddressOf Me.OnObtenerConceptoCuentaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerConceptoCuenta", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerConceptoCuentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerConceptoCuentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerConceptoCuentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerConceptoCuentaCompleted(Me, New ObtenerConceptoCuentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDepartamento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDepartamento(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDepartamento", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDepartamentoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerDepartamentoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDepartamentoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDepartamentoOperationCompleted Is Nothing) Then
                Me.ObtenerDepartamentoOperationCompleted = AddressOf Me.OnObtenerDepartamentoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDepartamento", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerDepartamentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDepartamentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDepartamentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDepartamentoCompleted(Me, New ObtenerDepartamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDivisa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDivisa(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDivisa", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDivisaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerDivisaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDivisaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDivisaOperationCompleted Is Nothing) Then
                Me.ObtenerDivisaOperationCompleted = AddressOf Me.OnObtenerDivisaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDivisa", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerDivisaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDivisaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDivisaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDivisaCompleted(Me, New ObtenerDivisaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerIdioma", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerIdioma(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerIdioma", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerIdiomaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerIdiomaOperationCompleted Is Nothing) Then
                Me.ObtenerIdiomaOperationCompleted = AddressOf Me.OnObtenerIdiomaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerIdioma", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerIdiomaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerIdiomaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerIdiomaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerIdiomaCompleted(Me, New ObtenerIdiomaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerGrupo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerGrupo(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerGrupo", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerGrupoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerGrupoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerGrupoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerGrupoOperationCompleted Is Nothing) Then
                Me.ObtenerGrupoOperationCompleted = AddressOf Me.OnObtenerGrupoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerGrupo", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerGrupoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerGrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerGrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerGrupoCompleted(Me, New ObtenerGrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPais", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPais(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPais", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPaisAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerPaisAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPaisAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPaisOperationCompleted Is Nothing) Then
                Me.ObtenerPaisOperationCompleted = AddressOf Me.OnObtenerPaisOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPais", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerPaisOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPaisOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPaisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPaisCompleted(Me, New ObtenerPaisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerProvincia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerProvincia(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerProvincia", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerProvinciaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerProvinciaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerProvinciaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerProvinciaOperationCompleted Is Nothing) Then
                Me.ObtenerProvinciaOperationCompleted = AddressOf Me.OnObtenerProvinciaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerProvincia", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerProvinciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerProvinciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerProvinciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerProvinciaCompleted(Me, New ObtenerProvinciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerUsuario(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerUsuario", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerUsuarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerUsuarioAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerUsuarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerUsuarioOperationCompleted Is Nothing) Then
                Me.ObtenerUsuarioOperationCompleted = AddressOf Me.OnObtenerUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerUsuario", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerUsuarioCompleted(Me, New ObtenerUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTarea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTarea(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTarea", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTareaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTareaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTareaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTareaOperationCompleted Is Nothing) Then
                Me.ObtenerTareaOperationCompleted = AddressOf Me.OnObtenerTareaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTarea", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTareaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTareaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTareaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTareaCompleted(Me, New ObtenerTareaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerProceso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerProceso(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerProceso", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerProcesoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerProcesoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerProcesoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerProcesoOperationCompleted Is Nothing) Then
                Me.ObtenerProcesoOperationCompleted = AddressOf Me.OnObtenerProcesoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerProceso", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerProcesoCompleted(Me, New ObtenerProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTemporada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTemporada(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTemporada", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTemporadaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTemporadaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTemporadaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTemporadaOperationCompleted Is Nothing) Then
                Me.ObtenerTemporadaOperationCompleted = AddressOf Me.OnObtenerTemporadaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTemporada", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTemporadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTemporadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTemporadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTemporadaCompleted(Me, New ObtenerTemporadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerConceptosCuentasAlternativa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerConceptosCuentasAlternativa(ByVal IdClienteOfficePOS As Integer, ByVal Almacen As Integer, ByVal sConcepto As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerConceptosCuentasAlternativa", New Object() {IdClienteOfficePOS, Almacen, sConcepto, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerConceptosCuentasAlternativaAsync(ByVal IdClienteOfficePOS As Integer, ByVal Almacen As Integer, ByVal sConcepto As String, ByVal sMsg As String)
            Me.ObtenerConceptosCuentasAlternativaAsync(IdClienteOfficePOS, Almacen, sConcepto, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerConceptosCuentasAlternativaAsync(ByVal IdClienteOfficePOS As Integer, ByVal Almacen As Integer, ByVal sConcepto As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerConceptosCuentasAlternativaOperationCompleted Is Nothing) Then
                Me.ObtenerConceptosCuentasAlternativaOperationCompleted = AddressOf Me.OnObtenerConceptosCuentasAlternativaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerConceptosCuentasAlternativa", New Object() {IdClienteOfficePOS, Almacen, sConcepto, sMsg}, Me.ObtenerConceptosCuentasAlternativaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerConceptosCuentasAlternativaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerConceptosCuentasAlternativaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerConceptosCuentasAlternativaCompleted(Me, New ObtenerConceptosCuentasAlternativaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDireccionesEnvioCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDireccionesEnvioCliente(ByVal IdClienteOfficePOS As Integer, ByVal Cliente As Integer, ByVal sCentro As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDireccionesEnvioCliente", New Object() {IdClienteOfficePOS, Cliente, sCentro, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDireccionesEnvioClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Cliente As Integer, ByVal sCentro As String, ByVal sMsg As String)
            Me.ObtenerDireccionesEnvioClienteAsync(IdClienteOfficePOS, Cliente, sCentro, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDireccionesEnvioClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Cliente As Integer, ByVal sCentro As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDireccionesEnvioClienteOperationCompleted Is Nothing) Then
                Me.ObtenerDireccionesEnvioClienteOperationCompleted = AddressOf Me.OnObtenerDireccionesEnvioClienteOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDireccionesEnvioCliente", New Object() {IdClienteOfficePOS, Cliente, sCentro, sMsg}, Me.ObtenerDireccionesEnvioClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDireccionesEnvioClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDireccionesEnvioClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDireccionesEnvioClienteCompleted(Me, New ObtenerDireccionesEnvioClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDescripcionArticulosIdioma", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDescripcionArticulosIdioma(ByVal IdClienteOfficePOS As Integer, ByVal sArticulo As String, ByVal sIdioma As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDescripcionArticulosIdioma", New Object() {IdClienteOfficePOS, sArticulo, sIdioma, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionArticulosIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sArticulo As String, ByVal sIdioma As String, ByVal sMsg As String)
            Me.ObtenerDescripcionArticulosIdiomaAsync(IdClienteOfficePOS, sArticulo, sIdioma, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionArticulosIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sArticulo As String, ByVal sIdioma As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDescripcionArticulosIdiomaOperationCompleted Is Nothing) Then
                Me.ObtenerDescripcionArticulosIdiomaOperationCompleted = AddressOf Me.OnObtenerDescripcionArticulosIdiomaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDescripcionArticulosIdioma", New Object() {IdClienteOfficePOS, sArticulo, sIdioma, sMsg}, Me.ObtenerDescripcionArticulosIdiomaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDescripcionArticulosIdiomaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDescripcionArticulosIdiomaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDescripcionArticulosIdiomaCompleted(Me, New ObtenerDescripcionArticulosIdiomaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDescripcionFamiliasIdiomas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDescripcionFamiliasIdiomas(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sIdioma As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDescripcionFamiliasIdiomas", New Object() {IdClienteOfficePOS, sFamilia, sIdioma, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionFamiliasIdiomasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sIdioma As String, ByVal sMsg As String)
            Me.ObtenerDescripcionFamiliasIdiomasAsync(IdClienteOfficePOS, sFamilia, sIdioma, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionFamiliasIdiomasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sIdioma As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDescripcionFamiliasIdiomasOperationCompleted Is Nothing) Then
                Me.ObtenerDescripcionFamiliasIdiomasOperationCompleted = AddressOf Me.OnObtenerDescripcionFamiliasIdiomasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDescripcionFamiliasIdiomas", New Object() {IdClienteOfficePOS, sFamilia, sIdioma, sMsg}, Me.ObtenerDescripcionFamiliasIdiomasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDescripcionFamiliasIdiomasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDescripcionFamiliasIdiomasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDescripcionFamiliasIdiomasCompleted(Me, New ObtenerDescripcionFamiliasIdiomasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDescripcionSubFamiliasIdiomas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDescripcionSubFamiliasIdiomas(ByVal IdClienteOfficePOS As Integer, ByVal sSubFamilia As String, ByVal sIdioma As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDescripcionSubFamiliasIdiomas", New Object() {IdClienteOfficePOS, sSubFamilia, sIdioma, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionSubFamiliasIdiomasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSubFamilia As String, ByVal sIdioma As String, ByVal sMsg As String)
            Me.ObtenerDescripcionSubFamiliasIdiomasAsync(IdClienteOfficePOS, sSubFamilia, sIdioma, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDescripcionSubFamiliasIdiomasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSubFamilia As String, ByVal sIdioma As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDescripcionSubFamiliasIdiomasOperationCompleted Is Nothing) Then
                Me.ObtenerDescripcionSubFamiliasIdiomasOperationCompleted = AddressOf Me.OnObtenerDescripcionSubFamiliasIdiomasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDescripcionSubFamiliasIdiomas", New Object() {IdClienteOfficePOS, sSubFamilia, sIdioma, sMsg}, Me.ObtenerDescripcionSubFamiliasIdiomasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDescripcionSubFamiliasIdiomasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDescripcionSubFamiliasIdiomasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDescripcionSubFamiliasIdiomasCompleted(Me, New ObtenerDescripcionSubFamiliasIdiomasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDesgloseMonetario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDesgloseMonetario(ByVal IdClienteOfficePOS As Integer, ByVal sFormaPago As String, ByVal dImporte As Double, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDesgloseMonetario", New Object() {IdClienteOfficePOS, sFormaPago, dImporte, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDesgloseMonetarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFormaPago As String, ByVal dImporte As Double, ByVal sMsg As String)
            Me.ObtenerDesgloseMonetarioAsync(IdClienteOfficePOS, sFormaPago, dImporte, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDesgloseMonetarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFormaPago As String, ByVal dImporte As Double, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDesgloseMonetarioOperationCompleted Is Nothing) Then
                Me.ObtenerDesgloseMonetarioOperationCompleted = AddressOf Me.OnObtenerDesgloseMonetarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDesgloseMonetario", New Object() {IdClienteOfficePOS, sFormaPago, dImporte, sMsg}, Me.ObtenerDesgloseMonetarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDesgloseMonetarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDesgloseMonetarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDesgloseMonetarioCompleted(Me, New ObtenerDesgloseMonetarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPoblacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPoblacion(ByVal IdClienteOfficePOS As Integer, ByVal sPais As String, ByVal sCP As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPoblacion", New Object() {IdClienteOfficePOS, sPais, sCP, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPoblacionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPais As String, ByVal sCP As String, ByVal sMsg As String)
            Me.ObtenerPoblacionAsync(IdClienteOfficePOS, sPais, sCP, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPoblacionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPais As String, ByVal sCP As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPoblacionOperationCompleted Is Nothing) Then
                Me.ObtenerPoblacionOperationCompleted = AddressOf Me.OnObtenerPoblacionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPoblacion", New Object() {IdClienteOfficePOS, sPais, sCP, sMsg}, Me.ObtenerPoblacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPoblacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPoblacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPoblacionCompleted(Me, New ObtenerPoblacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPermisosUsuarios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPermisosUsuarios(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPermisosUsuarios", New Object() {IdClienteOfficePOS, sCodigo, sTarea, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPermisosUsuariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByVal sMsg As String)
            Me.ObtenerPermisosUsuariosAsync(IdClienteOfficePOS, sCodigo, sTarea, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPermisosUsuariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPermisosUsuariosOperationCompleted Is Nothing) Then
                Me.ObtenerPermisosUsuariosOperationCompleted = AddressOf Me.OnObtenerPermisosUsuariosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPermisosUsuarios", New Object() {IdClienteOfficePOS, sCodigo, sTarea, sMsg}, Me.ObtenerPermisosUsuariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPermisosUsuariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPermisosUsuariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPermisosUsuariosCompleted(Me, New ObtenerPermisosUsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPermisosGrupos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPermisosGrupos(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPermisosGrupos", New Object() {IdClienteOfficePOS, sCodigo, sTarea, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPermisosGruposAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByVal sMsg As String)
            Me.ObtenerPermisosGruposAsync(IdClienteOfficePOS, sCodigo, sTarea, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPermisosGruposAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sTarea As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPermisosGruposOperationCompleted Is Nothing) Then
                Me.ObtenerPermisosGruposOperationCompleted = AddressOf Me.OnObtenerPermisosGruposOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPermisosGrupos", New Object() {IdClienteOfficePOS, sCodigo, sTarea, sMsg}, Me.ObtenerPermisosGruposOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPermisosGruposOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPermisosGruposCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPermisosGruposCompleted(Me, New ObtenerPermisosGruposCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPuntosDesglose", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPuntosDesglose(ByVal IdClienteOfficePOS As Integer, ByVal sPromocion As String, ByVal sArticulo As String, ByVal EsArticulo As Boolean, ByVal EsTemporada As Boolean, ByVal EsMarca As Boolean, ByVal EsFabricante As Boolean, ByVal EsSubFamilia As Boolean, ByVal EsFamilia As Boolean, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPuntosDesglose", New Object() {IdClienteOfficePOS, sPromocion, sArticulo, EsArticulo, EsTemporada, EsMarca, EsFabricante, EsSubFamilia, EsFamilia, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPuntosDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPromocion As String, ByVal sArticulo As String, ByVal EsArticulo As Boolean, ByVal EsTemporada As Boolean, ByVal EsMarca As Boolean, ByVal EsFabricante As Boolean, ByVal EsSubFamilia As Boolean, ByVal EsFamilia As Boolean, ByVal sMsg As String)
            Me.ObtenerPuntosDesgloseAsync(IdClienteOfficePOS, sPromocion, sArticulo, EsArticulo, EsTemporada, EsMarca, EsFabricante, EsSubFamilia, EsFamilia, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPuntosDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sPromocion As String, ByVal sArticulo As String, ByVal EsArticulo As Boolean, ByVal EsTemporada As Boolean, ByVal EsMarca As Boolean, ByVal EsFabricante As Boolean, ByVal EsSubFamilia As Boolean, ByVal EsFamilia As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPuntosDesgloseOperationCompleted Is Nothing) Then
                Me.ObtenerPuntosDesgloseOperationCompleted = AddressOf Me.OnObtenerPuntosDesgloseOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPuntosDesglose", New Object() {IdClienteOfficePOS, sPromocion, sArticulo, EsArticulo, EsTemporada, EsMarca, EsFabricante, EsSubFamilia, EsFamilia, sMsg}, Me.ObtenerPuntosDesgloseOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPuntosDesgloseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPuntosDesgloseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPuntosDesgloseCompleted(Me, New ObtenerPuntosDesgloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCliente(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer, ByVal sMsg As String)
            Me.ObtenerClienteAsync(IdClienteOfficePOS, CodigoDeCliente, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerClienteOperationCompleted Is Nothing) Then
                Me.ObtenerClienteOperationCompleted = AddressOf Me.OnObtenerClienteOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, sMsg}, Me.ObtenerClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerClienteCompleted(Me, New ObtenerClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAlbaranClienteF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAlbaranClienteF(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByRef NumeroDeAlbaranCentral As Long, ByRef sMensajeError As String, ByRef dttDiarioCaja As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("InsertAlbaranClienteF", New Object() {IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja})
            NumeroDeAlbaranCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            dttDiarioCaja = CType(results(3),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranClienteFAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable)
            Me.InsertAlbaranClienteFAsync(IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranClienteFAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable, ByVal userState As Object)
            If (Me.InsertAlbaranClienteFOperationCompleted Is Nothing) Then
                Me.InsertAlbaranClienteFOperationCompleted = AddressOf Me.OnInsertAlbaranClienteFOperationCompleted
            End If
            Me.InvokeAsync("InsertAlbaranClienteF", New Object() {IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja}, Me.InsertAlbaranClienteFOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAlbaranClienteFOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAlbaranClienteFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAlbaranClienteFCompleted(Me, New InsertAlbaranClienteFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPedidoClienteF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertPedidoClienteF(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByRef NumeroDePedidoCentral As Long, ByRef sMensajeError As String, ByRef dttDiarioCaja As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("InsertPedidoClienteF", New Object() {IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja})
            NumeroDePedidoCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            dttDiarioCaja = CType(results(3),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteFAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByVal NumeroDePedidoCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable)
            Me.InsertPedidoClienteFAsync(IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteFAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByVal NumeroDePedidoCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable, ByVal userState As Object)
            If (Me.InsertPedidoClienteFOperationCompleted Is Nothing) Then
                Me.InsertPedidoClienteFOperationCompleted = AddressOf Me.OnInsertPedidoClienteFOperationCompleted
            End If
            Me.InvokeAsync("InsertPedidoClienteF", New Object() {IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja}, Me.InsertPedidoClienteFOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertPedidoClienteFOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertPedidoClienteFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertPedidoClienteFCompleted(Me, New InsertPedidoClienteFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPedidoClienteXML", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertPedidoClienteXML(ByVal IdClienteOfficePOS As Integer, ByVal xmlPedido As String, ByRef sMensajeError As String) As Integer
            Dim results() As Object = Me.Invoke("InsertPedidoClienteXML", New Object() {IdClienteOfficePOS, xmlPedido, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteXMLAsync(ByVal IdClienteOfficePOS As Integer, ByVal xmlPedido As String, ByVal sMensajeError As String)
            Me.InsertPedidoClienteXMLAsync(IdClienteOfficePOS, xmlPedido, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteXMLAsync(ByVal IdClienteOfficePOS As Integer, ByVal xmlPedido As String, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertPedidoClienteXMLOperationCompleted Is Nothing) Then
                Me.InsertPedidoClienteXMLOperationCompleted = AddressOf Me.OnInsertPedidoClienteXMLOperationCompleted
            End If
            Me.InvokeAsync("InsertPedidoClienteXML", New Object() {IdClienteOfficePOS, xmlPedido, sMensajeError}, Me.InsertPedidoClienteXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertPedidoClienteXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertPedidoClienteXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertPedidoClienteXMLCompleted(Me, New InsertPedidoClienteXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertClienteF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertClienteF( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByRef CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String) As String
            Dim results() As Object = Me.Invoke("InsertClienteF", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma})
            CodigoDeCliente = CType(results(1),Integer)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertClienteFAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String)
            Me.InsertClienteFAsync(IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertClienteFAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal Portes As String,  _
                    ByVal Idioma As String,  _
                    ByVal userState As Object)
            If (Me.InsertClienteFOperationCompleted Is Nothing) Then
                Me.InsertClienteFOperationCompleted = AddressOf Me.OnInsertClienteFOperationCompleted
            End If
            Me.InvokeAsync("InsertClienteF", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Portes, Idioma}, Me.InsertClienteFOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertClienteFOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertClienteFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertClienteFCompleted(Me, New InsertClienteFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerStocksF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerStocksF(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerStocksF", New Object() {IdClienteOfficePOS, NumeroDeAlmacen, Articulo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerStocksFAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String)
            Me.ObtenerStocksFAsync(IdClienteOfficePOS, NumeroDeAlmacen, Articulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerStocksFAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeAlmacen As Integer, ByVal Articulo As String, ByVal userState As Object)
            If (Me.ObtenerStocksFOperationCompleted Is Nothing) Then
                Me.ObtenerStocksFOperationCompleted = AddressOf Me.OnObtenerStocksFOperationCompleted
            End If
            Me.InvokeAsync("ObtenerStocksF", New Object() {IdClienteOfficePOS, NumeroDeAlmacen, Articulo}, Me.ObtenerStocksFOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerStocksFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerStocksFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerStocksFCompleted(Me, New ObtenerStocksFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDatosF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDatosF(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDatosF", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.ObtenerDatosFAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ObtenerDatosFOperationCompleted Is Nothing) Then
                Me.ObtenerDatosFOperationCompleted = AddressOf Me.OnObtenerDatosFOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDatosF", New Object() {IdClienteOfficePOS, sSQL}, Me.ObtenerDatosFOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDatosFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDatosFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDatosFCompleted(Me, New ObtenerDatosFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDatosXML", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDatosXML(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As String
            Dim results() As Object = Me.Invoke("ObtenerDatosXML", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosXMLAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.ObtenerDatosXMLAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosXMLAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ObtenerDatosXMLOperationCompleted Is Nothing) Then
                Me.ObtenerDatosXMLOperationCompleted = AddressOf Me.OnObtenerDatosXMLOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDatosXML", New Object() {IdClienteOfficePOS, sSQL}, Me.ObtenerDatosXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDatosXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDatosXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDatosXMLCompleted(Me, New ObtenerDatosXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerValorF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerValorF(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As String
            Dim results() As Object = Me.Invoke("ObtenerValorF", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerValorFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.ObtenerValorFAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerValorFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ObtenerValorFOperationCompleted Is Nothing) Then
                Me.ObtenerValorFOperationCompleted = AddressOf Me.OnObtenerValorFOperationCompleted
            End If
            Me.InvokeAsync("ObtenerValorF", New Object() {IdClienteOfficePOS, sSQL}, Me.ObtenerValorFOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerValorFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerValorFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerValorFCompleted(Me, New ObtenerValorFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EjecutarF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EjecutarF(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As String
            Dim results() As Object = Me.Invoke("EjecutarF", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EjecutarFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.EjecutarFAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutarFAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.EjecutarFOperationCompleted Is Nothing) Then
                Me.EjecutarFOperationCompleted = AddressOf Me.OnEjecutarFOperationCompleted
            End If
            Me.InvokeAsync("EjecutarF", New Object() {IdClienteOfficePOS, sSQL}, Me.EjecutarFOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjecutarFOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjecutarFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjecutarFCompleted(Me, New EjecutarFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListadoDeExistenciasEnFecha", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListadoDeExistenciasEnFecha(ByVal IdClienteOfficePOS As Integer, ByVal lAlmacen As Integer, ByVal tFecha As Date, ByVal SoloConStock As Boolean, ByVal IncluirObsoletos As Boolean) As String
            Dim results() As Object = Me.Invoke("ListadoDeExistenciasEnFecha", New Object() {IdClienteOfficePOS, lAlmacen, tFecha, SoloConStock, IncluirObsoletos})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListadoDeExistenciasEnFechaAsync(ByVal IdClienteOfficePOS As Integer, ByVal lAlmacen As Integer, ByVal tFecha As Date, ByVal SoloConStock As Boolean, ByVal IncluirObsoletos As Boolean)
            Me.ListadoDeExistenciasEnFechaAsync(IdClienteOfficePOS, lAlmacen, tFecha, SoloConStock, IncluirObsoletos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListadoDeExistenciasEnFechaAsync(ByVal IdClienteOfficePOS As Integer, ByVal lAlmacen As Integer, ByVal tFecha As Date, ByVal SoloConStock As Boolean, ByVal IncluirObsoletos As Boolean, ByVal userState As Object)
            If (Me.ListadoDeExistenciasEnFechaOperationCompleted Is Nothing) Then
                Me.ListadoDeExistenciasEnFechaOperationCompleted = AddressOf Me.OnListadoDeExistenciasEnFechaOperationCompleted
            End If
            Me.InvokeAsync("ListadoDeExistenciasEnFecha", New Object() {IdClienteOfficePOS, lAlmacen, tFecha, SoloConStock, IncluirObsoletos}, Me.ListadoDeExistenciasEnFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnListadoDeExistenciasEnFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListadoDeExistenciasEnFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListadoDeExistenciasEnFechaCompleted(Me, New ListadoDeExistenciasEnFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarLineaInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLineaInventario(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByRef lPos As Integer, ByRef sFecha As String, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarLineaInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, lPos, sFecha, sMensajeError})
            lPos = CType(results(1),Integer)
            sFecha = CType(results(2),String)
            sMensajeError = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLineaInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByVal lPos As Integer, ByVal sFecha As String, ByVal sMensajeError As String)
            Me.InsertarLineaInventarioAsync(IdClienteOfficePOS, CodigoInventario, sArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, lPos, sFecha, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLineaInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByVal lPos As Integer, ByVal sFecha As String, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertarLineaInventarioOperationCompleted Is Nothing) Then
                Me.InsertarLineaInventarioOperationCompleted = AddressOf Me.OnInsertarLineaInventarioOperationCompleted
            End If
            Me.InvokeAsync("InsertarLineaInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, lPos, sFecha, sMensajeError}, Me.InsertarLineaInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLineaInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLineaInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLineaInventarioCompleted(Me, New InsertarLineaInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearInventario(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sListadoArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByRef dttInventario As System.Data.DataTable, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("CrearInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sListadoArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, dttInventario, sMensajeError})
            dttInventario = CType(results(1),System.Data.DataTable)
            sMensajeError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sListadoArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByVal dttInventario As System.Data.DataTable, ByVal sMensajeError As String)
            Me.CrearInventarioAsync(IdClienteOfficePOS, CodigoInventario, sListadoArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, dttInventario, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sListadoArticulo As String, ByVal iAlmacen As Integer, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal Referencia As String, ByVal dCantidad As Double, ByVal dttInventario As System.Data.DataTable, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.CrearInventarioOperationCompleted Is Nothing) Then
                Me.CrearInventarioOperationCompleted = AddressOf Me.OnCrearInventarioOperationCompleted
            End If
            Me.InvokeAsync("CrearInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sListadoArticulo, iAlmacen, sTipo_Inv, Fecha, Referencia, dCantidad, dttInventario, sMensajeError}, Me.CrearInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearInventarioCompleted(Me, New CrearInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarInventario(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal bEliminarMov As Boolean, ByVal bEliminarInv As Boolean, ByVal iAlmacen As Integer, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sTipo_Inv, Fecha, bEliminarMov, bEliminarInv, iAlmacen, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal bEliminarMov As Boolean, ByVal bEliminarInv As Boolean, ByVal iAlmacen As Integer, ByVal sMensajeError As String)
            Me.ActualizarInventarioAsync(IdClienteOfficePOS, CodigoInventario, sTipo_Inv, Fecha, bEliminarMov, bEliminarInv, iAlmacen, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarInventarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoInventario As String, ByVal sTipo_Inv As String, ByVal Fecha As String, ByVal bEliminarMov As Boolean, ByVal bEliminarInv As Boolean, ByVal iAlmacen As Integer, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.ActualizarInventarioOperationCompleted Is Nothing) Then
                Me.ActualizarInventarioOperationCompleted = AddressOf Me.OnActualizarInventarioOperationCompleted
            End If
            Me.InvokeAsync("ActualizarInventario", New Object() {IdClienteOfficePOS, CodigoInventario, sTipo_Inv, Fecha, bEliminarMov, bEliminarInv, iAlmacen, sMensajeError}, Me.ActualizarInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarInventarioCompleted(Me, New ActualizarInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSLogin(ByVal data As String)
            Me.Invoke("POSLogin", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSLoginAsync(ByVal data As String)
            Me.POSLoginAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSLoginAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSLoginOperationCompleted Is Nothing) Then
                Me.POSLoginOperationCompleted = AddressOf Me.OnPOSLoginOperationCompleted
            End If
            Me.InvokeAsync("POSLogin", New Object() {data}, Me.POSLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSLoginCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSLoginCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSLoginCaja(ByVal data As String)
            Me.Invoke("POSLoginCaja", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSLoginCajaAsync(ByVal data As String)
            Me.POSLoginCajaAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSLoginCajaAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSLoginCajaOperationCompleted Is Nothing) Then
                Me.POSLoginCajaOperationCompleted = AddressOf Me.OnPOSLoginCajaOperationCompleted
            End If
            Me.InvokeAsync("POSLoginCaja", New Object() {data}, Me.POSLoginCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSLoginCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSLoginCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSLoginCajaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSArticulos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSArticulos(ByVal data As String)
            Me.Invoke("POSArticulos", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArticulosAsync(ByVal data As String)
            Me.POSArticulosAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArticulosAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSArticulosOperationCompleted Is Nothing) Then
                Me.POSArticulosOperationCompleted = AddressOf Me.OnPOSArticulosOperationCompleted
            End If
            Me.InvokeAsync("POSArticulos", New Object() {data}, Me.POSArticulosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSArticulosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSArticulosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSArticulosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSValidateEmployee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSValidateEmployee(ByVal data As String)
            Me.Invoke("POSValidateEmployee", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSValidateEmployeeAsync(ByVal data As String)
            Me.POSValidateEmployeeAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSValidateEmployeeAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSValidateEmployeeOperationCompleted Is Nothing) Then
                Me.POSValidateEmployeeOperationCompleted = AddressOf Me.OnPOSValidateEmployeeOperationCompleted
            End If
            Me.InvokeAsync("POSValidateEmployee", New Object() {data}, Me.POSValidateEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSValidateEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSValidateEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSValidateEmployeeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSClientes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSClientes(ByVal data As String)
            Me.Invoke("POSClientes", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSClientesAsync(ByVal data As String)
            Me.POSClientesAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSClientesAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSClientesOperationCompleted Is Nothing) Then
                Me.POSClientesOperationCompleted = AddressOf Me.OnPOSClientesOperationCompleted
            End If
            Me.InvokeAsync("POSClientes", New Object() {data}, Me.POSClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSClientesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSGuardarVenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSGuardarVenta(ByVal data As String)
            Me.Invoke("POSGuardarVenta", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSGuardarVentaAsync(ByVal data As String)
            Me.POSGuardarVentaAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSGuardarVentaAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSGuardarVentaOperationCompleted Is Nothing) Then
                Me.POSGuardarVentaOperationCompleted = AddressOf Me.OnPOSGuardarVentaOperationCompleted
            End If
            Me.InvokeAsync("POSGuardarVenta", New Object() {data}, Me.POSGuardarVentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSGuardarVentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSGuardarVentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSGuardarVentaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSCobrarVenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSCobrarVenta(ByVal data As String)
            Me.Invoke("POSCobrarVenta", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCobrarVentaAsync(ByVal data As String)
            Me.POSCobrarVentaAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCobrarVentaAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSCobrarVentaOperationCompleted Is Nothing) Then
                Me.POSCobrarVentaOperationCompleted = AddressOf Me.OnPOSCobrarVentaOperationCompleted
            End If
            Me.InvokeAsync("POSCobrarVenta", New Object() {data}, Me.POSCobrarVentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSCobrarVentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSCobrarVentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSCobrarVentaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSInicioDia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSInicioDia(ByVal data As String)
            Me.Invoke("POSInicioDia", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSInicioDiaAsync(ByVal data As String)
            Me.POSInicioDiaAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSInicioDiaAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSInicioDiaOperationCompleted Is Nothing) Then
                Me.POSInicioDiaOperationCompleted = AddressOf Me.OnPOSInicioDiaOperationCompleted
            End If
            Me.InvokeAsync("POSInicioDia", New Object() {data}, Me.POSInicioDiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSInicioDiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSInicioDiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSInicioDiaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSArqueoDiferencias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSArqueoDiferencias(ByVal data As String)
            Me.Invoke("POSArqueoDiferencias", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArqueoDiferenciasAsync(ByVal data As String)
            Me.POSArqueoDiferenciasAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArqueoDiferenciasAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSArqueoDiferenciasOperationCompleted Is Nothing) Then
                Me.POSArqueoDiferenciasOperationCompleted = AddressOf Me.OnPOSArqueoDiferenciasOperationCompleted
            End If
            Me.InvokeAsync("POSArqueoDiferencias", New Object() {data}, Me.POSArqueoDiferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSArqueoDiferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSArqueoDiferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSArqueoDiferenciasCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSArqueoEjecucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSArqueoEjecucion(ByVal data As String)
            Me.Invoke("POSArqueoEjecucion", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArqueoEjecucionAsync(ByVal data As String)
            Me.POSArqueoEjecucionAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSArqueoEjecucionAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSArqueoEjecucionOperationCompleted Is Nothing) Then
                Me.POSArqueoEjecucionOperationCompleted = AddressOf Me.OnPOSArqueoEjecucionOperationCompleted
            End If
            Me.InvokeAsync("POSArqueoEjecucion", New Object() {data}, Me.POSArqueoEjecucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSArqueoEjecucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSArqueoEjecucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSArqueoEjecucionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSCobrosPagos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSCobrosPagos(ByVal data As String)
            Me.Invoke("POSCobrosPagos", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCobrosPagosAsync(ByVal data As String)
            Me.POSCobrosPagosAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCobrosPagosAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSCobrosPagosOperationCompleted Is Nothing) Then
                Me.POSCobrosPagosOperationCompleted = AddressOf Me.OnPOSCobrosPagosOperationCompleted
            End If
            Me.InvokeAsync("POSCobrosPagos", New Object() {data}, Me.POSCobrosPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSCobrosPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSCobrosPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSCobrosPagosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSUltimoTicket", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSUltimoTicket(ByVal data As String)
            Me.Invoke("POSUltimoTicket", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSUltimoTicketAsync(ByVal data As String)
            Me.POSUltimoTicketAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSUltimoTicketAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSUltimoTicketOperationCompleted Is Nothing) Then
                Me.POSUltimoTicketOperationCompleted = AddressOf Me.OnPOSUltimoTicketOperationCompleted
            End If
            Me.InvokeAsync("POSUltimoTicket", New Object() {data}, Me.POSUltimoTicketOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSUltimoTicketOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSUltimoTicketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSUltimoTicketCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSSesionActiva", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSSesionActiva(ByVal data As String)
            Me.Invoke("POSSesionActiva", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSSesionActivaAsync(ByVal data As String)
            Me.POSSesionActivaAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSSesionActivaAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSSesionActivaOperationCompleted Is Nothing) Then
                Me.POSSesionActivaOperationCompleted = AddressOf Me.OnPOSSesionActivaOperationCompleted
            End If
            Me.InvokeAsync("POSSesionActiva", New Object() {data}, Me.POSSesionActivaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSSesionActivaOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSSesionActivaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSSesionActivaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSCerrarSesion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSCerrarSesion(ByVal data As String)
            Me.Invoke("POSCerrarSesion", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCerrarSesionAsync(ByVal data As String)
            Me.POSCerrarSesionAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSCerrarSesionAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSCerrarSesionOperationCompleted Is Nothing) Then
                Me.POSCerrarSesionOperationCompleted = AddressOf Me.OnPOSCerrarSesionOperationCompleted
            End If
            Me.InvokeAsync("POSCerrarSesion", New Object() {data}, Me.POSCerrarSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSCerrarSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSCerrarSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSCerrarSesionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSEliminarImagenesDirectorio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub POSEliminarImagenesDirectorio(ByVal data As String)
            Me.Invoke("POSEliminarImagenesDirectorio", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSEliminarImagenesDirectorioAsync(ByVal data As String)
            Me.POSEliminarImagenesDirectorioAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub POSEliminarImagenesDirectorioAsync(ByVal data As String, ByVal userState As Object)
            If (Me.POSEliminarImagenesDirectorioOperationCompleted Is Nothing) Then
                Me.POSEliminarImagenesDirectorioOperationCompleted = AddressOf Me.OnPOSEliminarImagenesDirectorioOperationCompleted
            End If
            Me.InvokeAsync("POSEliminarImagenesDirectorio", New Object() {data}, Me.POSEliminarImagenesDirectorioOperationCompleted, userState)
        End Sub
        
        Private Sub OnPOSEliminarImagenesDirectorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.POSEliminarImagenesDirectorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent POSEliminarImagenesDirectorioCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarBackUpBaseDeDatos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBackUpBaseDeDatos(ByVal iCliente As Integer, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBackUpBaseDeDatos", New Object() {iCliente, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBackUpBaseDeDatosAsync(ByVal iCliente As Integer, ByVal sMsg As String)
            Me.EliminarBackUpBaseDeDatosAsync(iCliente, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBackUpBaseDeDatosAsync(ByVal iCliente As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.EliminarBackUpBaseDeDatosOperationCompleted Is Nothing) Then
                Me.EliminarBackUpBaseDeDatosOperationCompleted = AddressOf Me.OnEliminarBackUpBaseDeDatosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBackUpBaseDeDatos", New Object() {iCliente, sMsg}, Me.EliminarBackUpBaseDeDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBackUpBaseDeDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBackUpBaseDeDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBackUpBaseDeDatosCompleted(Me, New EliminarBackUpBaseDeDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearBaseDeDatos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearBaseDeDatos(ByVal IdClienteOfficePOS As Long, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CrearBaseDeDatos", New Object() {IdClienteOfficePOS, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearBaseDeDatosAsync(ByVal IdClienteOfficePOS As Long, ByVal sMsg As String)
            Me.CrearBaseDeDatosAsync(IdClienteOfficePOS, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearBaseDeDatosAsync(ByVal IdClienteOfficePOS As Long, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CrearBaseDeDatosOperationCompleted Is Nothing) Then
                Me.CrearBaseDeDatosOperationCompleted = AddressOf Me.OnCrearBaseDeDatosOperationCompleted
            End If
            Me.InvokeAsync("CrearBaseDeDatos", New Object() {IdClienteOfficePOS, sMsg}, Me.CrearBaseDeDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearBaseDeDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearBaseDeDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearBaseDeDatosCompleted(Me, New CrearBaseDeDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ComprobarBaseDastosCreadaOfficePosEnServidor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ComprobarBaseDastosCreadaOfficePosEnServidor(ByVal IdClienteOfficePOS As Long, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("ComprobarBaseDastosCreadaOfficePosEnServidor", New Object() {IdClienteOfficePOS, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ComprobarBaseDastosCreadaOfficePosEnServidorAsync(ByVal IdClienteOfficePOS As Long, ByVal sMsg As String)
            Me.ComprobarBaseDastosCreadaOfficePosEnServidorAsync(IdClienteOfficePOS, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ComprobarBaseDastosCreadaOfficePosEnServidorAsync(ByVal IdClienteOfficePOS As Long, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted Is Nothing) Then
                Me.ComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted = AddressOf Me.OnComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted
            End If
            Me.InvokeAsync("ComprobarBaseDastosCreadaOfficePosEnServidor", New Object() {IdClienteOfficePOS, sMsg}, Me.ComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted, userState)
        End Sub
        
        Private Sub OnComprobarBaseDastosCreadaOfficePosEnServidorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ComprobarBaseDastosCreadaOfficePosEnServidorCompleted(Me, New ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InicializarBaseDeDatos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InicializarBaseDeDatos(ByVal IdClienteOfficePOS As Long) As String
            Dim results() As Object = Me.Invoke("InicializarBaseDeDatos", New Object() {IdClienteOfficePOS})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InicializarBaseDeDatosAsync(ByVal IdClienteOfficePOS As Long)
            Me.InicializarBaseDeDatosAsync(IdClienteOfficePOS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InicializarBaseDeDatosAsync(ByVal IdClienteOfficePOS As Long, ByVal userState As Object)
            If (Me.InicializarBaseDeDatosOperationCompleted Is Nothing) Then
                Me.InicializarBaseDeDatosOperationCompleted = AddressOf Me.OnInicializarBaseDeDatosOperationCompleted
            End If
            Me.InvokeAsync("InicializarBaseDeDatos", New Object() {IdClienteOfficePOS}, Me.InicializarBaseDeDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInicializarBaseDeDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InicializarBaseDeDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InicializarBaseDeDatosCompleted(Me, New InicializarBaseDeDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerFiltroUsuarioOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ObtenerFiltroUsuarioOfficePos(ByVal strUsuario As String, ByVal strSessionID As String, ByRef sTipoFiltro As String, ByRef sFiltro As String)
            Dim results() As Object = Me.Invoke("ObtenerFiltroUsuarioOfficePos", New Object() {strUsuario, strSessionID, sTipoFiltro, sFiltro})
            sTipoFiltro = CType(results(0),String)
            sFiltro = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFiltroUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sTipoFiltro As String, ByVal sFiltro As String)
            Me.ObtenerFiltroUsuarioOfficePosAsync(strUsuario, strSessionID, sTipoFiltro, sFiltro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFiltroUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sTipoFiltro As String, ByVal sFiltro As String, ByVal userState As Object)
            If (Me.ObtenerFiltroUsuarioOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerFiltroUsuarioOfficePosOperationCompleted = AddressOf Me.OnObtenerFiltroUsuarioOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFiltroUsuarioOfficePos", New Object() {strUsuario, strSessionID, sTipoFiltro, sFiltro}, Me.ObtenerFiltroUsuarioOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFiltroUsuarioOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFiltroUsuarioOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFiltroUsuarioOfficePosCompleted(Me, New ObtenerFiltroUsuarioOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDatoUsuarioOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDatoUsuarioOfficePos(ByVal strUsuario As String, ByVal sCampo As String) As Object
            Dim results() As Object = Me.Invoke("ObtenerDatoUsuarioOfficePos", New Object() {strUsuario, sCampo})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatoUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal sCampo As String)
            Me.ObtenerDatoUsuarioOfficePosAsync(strUsuario, sCampo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatoUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal sCampo As String, ByVal userState As Object)
            If (Me.ObtenerDatoUsuarioOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerDatoUsuarioOfficePosOperationCompleted = AddressOf Me.OnObtenerDatoUsuarioOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDatoUsuarioOfficePos", New Object() {strUsuario, sCampo}, Me.ObtenerDatoUsuarioOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDatoUsuarioOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDatoUsuarioOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDatoUsuarioOfficePosCompleted(Me, New ObtenerDatoUsuarioOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivarFiltro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActivarFiltro(ByVal strUsuario As String, ByVal strSessionID As String, ByVal TipoFiltro As String, ByVal Filtro As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("ActivarFiltro", New Object() {strUsuario, strSessionID, TipoFiltro, Filtro, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActivarFiltroAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal TipoFiltro As String, ByVal Filtro As String, ByVal sMsg As String)
            Me.ActivarFiltroAsync(strUsuario, strSessionID, TipoFiltro, Filtro, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivarFiltroAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal TipoFiltro As String, ByVal Filtro As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ActivarFiltroOperationCompleted Is Nothing) Then
                Me.ActivarFiltroOperationCompleted = AddressOf Me.OnActivarFiltroOperationCompleted
            End If
            Me.InvokeAsync("ActivarFiltro", New Object() {strUsuario, strSessionID, TipoFiltro, Filtro, sMsg}, Me.ActivarFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivarFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivarFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivarFiltroCompleted(Me, New ActivarFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DesActivarFiltro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DesActivarFiltro(ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("DesActivarFiltro", New Object() {strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DesActivarFiltroAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.DesActivarFiltroAsync(strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesActivarFiltroAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.DesActivarFiltroOperationCompleted Is Nothing) Then
                Me.DesActivarFiltroOperationCompleted = AddressOf Me.OnDesActivarFiltroOperationCompleted
            End If
            Me.InvokeAsync("DesActivarFiltro", New Object() {strUsuario, strSessionID, sMsg}, Me.DesActivarFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesActivarFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesActivarFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesActivarFiltroCompleted(Me, New DesActivarFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VentasPorTienda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VentasPorTienda(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByRef sFechas As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VentasPorTienda", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg})
            sFechas = CType(results(1),String)
            sMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VentasPorTiendaAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String)
            Me.VentasPorTiendaAsync(IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VentasPorTiendaAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.VentasPorTiendaOperationCompleted Is Nothing) Then
                Me.VentasPorTiendaOperationCompleted = AddressOf Me.OnVentasPorTiendaOperationCompleted
            End If
            Me.InvokeAsync("VentasPorTienda", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg}, Me.VentasPorTiendaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVentasPorTiendaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VentasPorTiendaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VentasPorTiendaCompleted(Me, New VentasPorTiendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResumenVentas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResumenVentas(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByRef sFechas As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ResumenVentas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg})
            sFechas = CType(results(1),String)
            sMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ResumenVentasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String)
            Me.ResumenVentasAsync(IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumenVentasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ResumenVentasOperationCompleted Is Nothing) Then
                Me.ResumenVentasOperationCompleted = AddressOf Me.OnResumenVentasOperationCompleted
            End If
            Me.InvokeAsync("ResumenVentas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg}, Me.ResumenVentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumenVentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumenVentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumenVentasCompleted(Me, New ResumenVentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UltimasVentas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UltimasVentas(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("UltimasVentas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UltimasVentasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.UltimasVentasAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UltimasVentasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.UltimasVentasOperationCompleted Is Nothing) Then
                Me.UltimasVentasOperationCompleted = AddressOf Me.OnUltimasVentasOperationCompleted
            End If
            Me.InvokeAsync("UltimasVentas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.UltimasVentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnUltimasVentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.UltimasVentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UltimasVentasCompleted(Me, New UltimasVentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VentasPorFamilias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VentasPorFamilias(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByRef sFechas As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VentasPorFamilias", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg})
            sFechas = CType(results(1),String)
            sMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VentasPorFamiliasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String)
            Me.VentasPorFamiliasAsync(IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VentasPorFamiliasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal iPeriodo As Integer, ByVal sFechas As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.VentasPorFamiliasOperationCompleted Is Nothing) Then
                Me.VentasPorFamiliasOperationCompleted = AddressOf Me.OnVentasPorFamiliasOperationCompleted
            End If
            Me.InvokeAsync("VentasPorFamilias", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, iPeriodo, sFechas, sMsg}, Me.VentasPorFamiliasOperationCompleted, userState)
        End Sub
        
        Private Sub OnVentasPorFamiliasOperationCompleted(ByVal arg As Object)
            If (Not (Me.VentasPorFamiliasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VentasPorFamiliasCompleted(Me, New VentasPorFamiliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SituacionActualTiendas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SituacionActualTiendas(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SituacionActualTiendas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SituacionActualTiendasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.SituacionActualTiendasAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SituacionActualTiendasAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.SituacionActualTiendasOperationCompleted Is Nothing) Then
                Me.SituacionActualTiendasOperationCompleted = AddressOf Me.OnSituacionActualTiendasOperationCompleted
            End If
            Me.InvokeAsync("SituacionActualTiendas", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.SituacionActualTiendasOperationCompleted, userState)
        End Sub
        
        Private Sub OnSituacionActualTiendasOperationCompleted(ByVal arg As Object)
            If (Not (Me.SituacionActualTiendasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SituacionActualTiendasCompleted(Me, New SituacionActualTiendasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VentasPorMeses", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VentasPorMeses(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VentasPorMeses", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VentasPorMesesAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.VentasPorMesesAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VentasPorMesesAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.VentasPorMesesOperationCompleted Is Nothing) Then
                Me.VentasPorMesesOperationCompleted = AddressOf Me.OnVentasPorMesesOperationCompleted
            End If
            Me.InvokeAsync("VentasPorMeses", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.VentasPorMesesOperationCompleted, userState)
        End Sub
        
        Private Sub OnVentasPorMesesOperationCompleted(ByVal arg As Object)
            If (Not (Me.VentasPorMesesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VentasPorMesesCompleted(Me, New VentasPorMesesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PedidosPendientes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PedidosPendientes(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("PedidosPendientes", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PedidosPendientesAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.PedidosPendientesAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PedidosPendientesAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.PedidosPendientesOperationCompleted Is Nothing) Then
                Me.PedidosPendientesOperationCompleted = AddressOf Me.OnPedidosPendientesOperationCompleted
            End If
            Me.InvokeAsync("PedidosPendientes", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.PedidosPendientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPedidosPendientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.PedidosPendientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PedidosPendientesCompleted(Me, New PedidosPendientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FichaArticuloStock", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FichaArticuloStock(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FichaArticuloStock", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FichaArticuloStockAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.FichaArticuloStockAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FichaArticuloStockAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.FichaArticuloStockOperationCompleted Is Nothing) Then
                Me.FichaArticuloStockOperationCompleted = AddressOf Me.OnFichaArticuloStockOperationCompleted
            End If
            Me.InvokeAsync("FichaArticuloStock", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.FichaArticuloStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnFichaArticuloStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.FichaArticuloStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FichaArticuloStockCompleted(Me, New FichaArticuloStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buscar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Buscar(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strBuscar As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Buscar", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, strBuscar, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strBuscar As String, ByVal sMsg As String)
            Me.BuscarAsync(IdClienteOfficePOS, strUsuario, strSessionID, strBuscar, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strBuscar As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.BuscarOperationCompleted Is Nothing) Then
                Me.BuscarOperationCompleted = AddressOf Me.OnBuscarOperationCompleted
            End If
            Me.InvokeAsync("Buscar", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, strBuscar, sMsg}, Me.BuscarOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarCompleted(Me, New BuscarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarMensajeOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarMensajeOfficePos(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strMensaje As String, ByVal iTienda As Integer, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("EnviarMensajeOfficePos", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, strMensaje, iTienda, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarMensajeOfficePosAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strMensaje As String, ByVal iTienda As Integer, ByVal sMsg As String)
            Me.EnviarMensajeOfficePosAsync(IdClienteOfficePOS, strUsuario, strSessionID, strMensaje, iTienda, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarMensajeOfficePosAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal strMensaje As String, ByVal iTienda As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.EnviarMensajeOfficePosOperationCompleted Is Nothing) Then
                Me.EnviarMensajeOfficePosOperationCompleted = AddressOf Me.OnEnviarMensajeOfficePosOperationCompleted
            End If
            Me.InvokeAsync("EnviarMensajeOfficePos", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, strMensaje, iTienda, sMsg}, Me.EnviarMensajeOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarMensajeOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarMensajeOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarMensajeOfficePosCompleted(Me, New EnviarMensajeOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MisDatos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MisDatos(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("MisDatos", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MisDatosAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.MisDatosAsync(IdClienteOfficePOS, strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MisDatosAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.MisDatosOperationCompleted Is Nothing) Then
                Me.MisDatosOperationCompleted = AddressOf Me.OnMisDatosOperationCompleted
            End If
            Me.InvokeAsync("MisDatos", New Object() {IdClienteOfficePOS, strUsuario, strSessionID, sMsg}, Me.MisDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnMisDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.MisDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MisDatosCompleted(Me, New MisDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarPasswordPorMail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarPasswordPorMail(ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("EnviarPasswordPorMail", New Object() {strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarPasswordPorMailAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.EnviarPasswordPorMailAsync(strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarPasswordPorMailAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.EnviarPasswordPorMailOperationCompleted Is Nothing) Then
                Me.EnviarPasswordPorMailOperationCompleted = AddressOf Me.OnEnviarPasswordPorMailOperationCompleted
            End If
            Me.InvokeAsync("EnviarPasswordPorMail", New Object() {strUsuario, strSessionID, sMsg}, Me.EnviarPasswordPorMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarPasswordPorMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarPasswordPorMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarPasswordPorMailCompleted(Me, New EnviarPasswordPorMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Banner", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Banner(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Banner", New Object() {IdClienteOfficePOS, strUsuario, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BannerAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal sMsg As String)
            Me.BannerAsync(IdClienteOfficePOS, strUsuario, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BannerAsync(ByVal IdClienteOfficePOS As Long, ByVal strUsuario As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.BannerOperationCompleted Is Nothing) Then
                Me.BannerOperationCompleted = AddressOf Me.OnBannerOperationCompleted
            End If
            Me.InvokeAsync("Banner", New Object() {IdClienteOfficePOS, strUsuario, sMsg}, Me.BannerOperationCompleted, userState)
        End Sub
        
        Private Sub OnBannerOperationCompleted(ByVal arg As Object)
            If (Not (Me.BannerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BannerCompleted(Me, New BannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPeriodo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ObtenerPeriodo(ByVal IdClienteOfficePOS As Long, ByVal iPeriodo As Integer, ByRef sFechaDesde As String, ByRef sFechaHasta As String, ByRef sFechas As String)
            Dim results() As Object = Me.Invoke("ObtenerPeriodo", New Object() {IdClienteOfficePOS, iPeriodo, sFechaDesde, sFechaHasta, sFechas})
            sFechaDesde = CType(results(0),String)
            sFechaHasta = CType(results(1),String)
            sFechas = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPeriodoAsync(ByVal IdClienteOfficePOS As Long, ByVal iPeriodo As Integer, ByVal sFechaDesde As String, ByVal sFechaHasta As String, ByVal sFechas As String)
            Me.ObtenerPeriodoAsync(IdClienteOfficePOS, iPeriodo, sFechaDesde, sFechaHasta, sFechas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPeriodoAsync(ByVal IdClienteOfficePOS As Long, ByVal iPeriodo As Integer, ByVal sFechaDesde As String, ByVal sFechaHasta As String, ByVal sFechas As String, ByVal userState As Object)
            If (Me.ObtenerPeriodoOperationCompleted Is Nothing) Then
                Me.ObtenerPeriodoOperationCompleted = AddressOf Me.OnObtenerPeriodoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPeriodo", New Object() {IdClienteOfficePOS, iPeriodo, sFechaDesde, sFechaHasta, sFechas}, Me.ObtenerPeriodoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPeriodoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPeriodoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPeriodoCompleted(Me, New ObtenerPeriodoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerUsuarioOfficePosDEMO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerUsuarioOfficePosDEMO(ByVal strIdioma As String, ByRef sMsg As String) As String
            Dim results() As Object = Me.Invoke("ObtenerUsuarioOfficePosDEMO", New Object() {strIdioma, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerUsuarioOfficePosDEMOAsync(ByVal strIdioma As String, ByVal sMsg As String)
            Me.ObtenerUsuarioOfficePosDEMOAsync(strIdioma, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerUsuarioOfficePosDEMOAsync(ByVal strIdioma As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerUsuarioOfficePosDEMOOperationCompleted Is Nothing) Then
                Me.ObtenerUsuarioOfficePosDEMOOperationCompleted = AddressOf Me.OnObtenerUsuarioOfficePosDEMOOperationCompleted
            End If
            Me.InvokeAsync("ObtenerUsuarioOfficePosDEMO", New Object() {strIdioma, sMsg}, Me.ObtenerUsuarioOfficePosDEMOOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerUsuarioOfficePosDEMOOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerUsuarioOfficePosDEMOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerUsuarioOfficePosDEMOCompleted(Me, New ObtenerUsuarioOfficePosDEMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccederOficina", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AccederOficina(ByVal strUsuario As String, ByRef sMsg As String) As String
            Dim results() As Object = Me.Invoke("AccederOficina", New Object() {strUsuario, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AccederOficinaAsync(ByVal strUsuario As String, ByVal sMsg As String)
            Me.AccederOficinaAsync(strUsuario, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AccederOficinaAsync(ByVal strUsuario As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.AccederOficinaOperationCompleted Is Nothing) Then
                Me.AccederOficinaOperationCompleted = AddressOf Me.OnAccederOficinaOperationCompleted
            End If
            Me.InvokeAsync("AccederOficina", New Object() {strUsuario, sMsg}, Me.AccederOficinaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAccederOficinaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AccederOficinaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AccederOficinaCompleted(Me, New AccederOficinaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccederRegistro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AccederRegistro(ByRef sMsg As String) As String
            Dim results() As Object = Me.Invoke("AccederRegistro", New Object() {sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AccederRegistroAsync(ByVal sMsg As String)
            Me.AccederRegistroAsync(sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AccederRegistroAsync(ByVal sMsg As String, ByVal userState As Object)
            If (Me.AccederRegistroOperationCompleted Is Nothing) Then
                Me.AccederRegistroOperationCompleted = AddressOf Me.OnAccederRegistroOperationCompleted
            End If
            Me.InvokeAsync("AccederRegistro", New Object() {sMsg}, Me.AccederRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnAccederRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.AccederRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AccederRegistroCompleted(Me, New AccederRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BannerLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BannerLogin(ByVal sApp As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BannerLogin", New Object() {sApp, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BannerLoginAsync(ByVal sApp As String, ByVal sMsg As String)
            Me.BannerLoginAsync(sApp, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BannerLoginAsync(ByVal sApp As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.BannerLoginOperationCompleted Is Nothing) Then
                Me.BannerLoginOperationCompleted = AddressOf Me.OnBannerLoginOperationCompleted
            End If
            Me.InvokeAsync("BannerLogin", New Object() {sApp, sMsg}, Me.BannerLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnBannerLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.BannerLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BannerLoginCompleted(Me, New BannerLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarComunicacionesTienda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarComunicacionesTienda(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sTabla As String, ByVal sFecha As String) As String
            Dim results() As Object = Me.Invoke("ActualizarComunicacionesTienda", New Object() {IdClienteOfficePOS, iTienda, sTabla, sFecha})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarComunicacionesTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sTabla As String, ByVal sFecha As String)
            Me.ActualizarComunicacionesTiendaAsync(IdClienteOfficePOS, iTienda, sTabla, sFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarComunicacionesTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal sTabla As String, ByVal sFecha As String, ByVal userState As Object)
            If (Me.ActualizarComunicacionesTiendaOperationCompleted Is Nothing) Then
                Me.ActualizarComunicacionesTiendaOperationCompleted = AddressOf Me.OnActualizarComunicacionesTiendaOperationCompleted
            End If
            Me.InvokeAsync("ActualizarComunicacionesTienda", New Object() {IdClienteOfficePOS, iTienda, sTabla, sFecha}, Me.ActualizarComunicacionesTiendaOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarComunicacionesTiendaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarComunicacionesTiendaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarComunicacionesTiendaCompleted(Me, New ActualizarComunicacionesTiendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ErroresSincronizacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ErroresSincronizacion(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal dtt As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("ErroresSincronizacion", New Object() {IdClienteOfficePOS, iTienda, dtt})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ErroresSincronizacionAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal dtt As System.Data.DataTable)
            Me.ErroresSincronizacionAsync(IdClienteOfficePOS, iTienda, dtt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ErroresSincronizacionAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal dtt As System.Data.DataTable, ByVal userState As Object)
            If (Me.ErroresSincronizacionOperationCompleted Is Nothing) Then
                Me.ErroresSincronizacionOperationCompleted = AddressOf Me.OnErroresSincronizacionOperationCompleted
            End If
            Me.InvokeAsync("ErroresSincronizacion", New Object() {IdClienteOfficePOS, iTienda, dtt}, Me.ErroresSincronizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnErroresSincronizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ErroresSincronizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ErroresSincronizacionCompleted(Me, New ErroresSincronizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionMesas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionMesas(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionMesas", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionMesasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionMesasAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionMesasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionMesasOperationCompleted Is Nothing) Then
                Me.AltaModificacionMesasOperationCompleted = AddressOf Me.OnAltaModificacionMesasOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionMesas", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionMesasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionMesasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionMesasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionMesasCompleted(Me, New AltaModificacionMesasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaInventarioFisico", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaInventarioFisico(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaInventarioFisico", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaInventarioFisicoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaInventarioFisicoAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaInventarioFisicoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaInventarioFisicoOperationCompleted Is Nothing) Then
                Me.AltaInventarioFisicoOperationCompleted = AddressOf Me.OnAltaInventarioFisicoOperationCompleted
            End If
            Me.InvokeAsync("AltaInventarioFisico", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaInventarioFisicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaInventarioFisicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaInventarioFisicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaInventarioFisicoCompleted(Me, New AltaInventarioFisicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionSecciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionSecciones(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionSecciones", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionSeccionesAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionSeccionesAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionSeccionesAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionSeccionesOperationCompleted Is Nothing) Then
                Me.AltaModificacionSeccionesOperationCompleted = AddressOf Me.OnAltaModificacionSeccionesOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionSecciones", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionSeccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionSeccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionSeccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionSeccionesCompleted(Me, New AltaModificacionSeccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTPVCrmEstadistica", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTPVCrmEstadistica(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTPVCrmEstadistica", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVCrmEstadisticaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTPVCrmEstadisticaAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVCrmEstadisticaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTPVCrmEstadisticaOperationCompleted Is Nothing) Then
                Me.AltaModificacionTPVCrmEstadisticaOperationCompleted = AddressOf Me.OnAltaModificacionTPVCrmEstadisticaOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTPVCrmEstadistica", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTPVCrmEstadisticaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTPVCrmEstadisticaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTPVCrmEstadisticaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTPVCrmEstadisticaCompleted(Me, New AltaModificacionTPVCrmEstadisticaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTPVPerifericos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTPVPerifericos(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTPVPerifericos", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTPVPerifericosAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTPVPerifericosOperationCompleted Is Nothing) Then
                Me.AltaModificacionTPVPerifericosOperationCompleted = AddressOf Me.OnAltaModificacionTPVPerifericosOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTPVPerifericos", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTPVPerifericosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTPVPerifericosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTPVPerifericosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTPVPerifericosCompleted(Me, New AltaModificacionTPVPerifericosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTPVPerifericosCharset", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTPVPerifericosCharset(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTPVPerifericosCharset", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosCharsetAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTPVPerifericosCharsetAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosCharsetAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTPVPerifericosCharsetOperationCompleted Is Nothing) Then
                Me.AltaModificacionTPVPerifericosCharsetOperationCompleted = AddressOf Me.OnAltaModificacionTPVPerifericosCharsetOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTPVPerifericosCharset", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTPVPerifericosCharsetOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTPVPerifericosCharsetOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTPVPerifericosCharsetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTPVPerifericosCharsetCompleted(Me, New AltaModificacionTPVPerifericosCharsetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTPVPerifericosCodigosDeControl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTPVPerifericosCodigosDeControl(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTPVPerifericosCodigosDeControl", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosCodigosDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTPVPerifericosCodigosDeControlAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTPVPerifericosCodigosDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTPVPerifericosCodigosDeControlOperationCompleted Is Nothing) Then
                Me.AltaModificacionTPVPerifericosCodigosDeControlOperationCompleted = AddressOf Me.OnAltaModificacionTPVPerifericosCodigosDeControlOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTPVPerifericosCodigosDeControl", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTPVPerifericosCodigosDeControlOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTPVPerifericosCodigosDeControlOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTPVPerifericosCodigosDeControlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTPVPerifericosCodigosDeControlCompleted(Me, New AltaModificacionTPVPerifericosCodigosDeControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTpvParametrosAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTpvParametrosAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTpvParametrosAlternativos", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvParametrosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTpvParametrosAlternativosAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvParametrosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTpvParametrosAlternativosOperationCompleted Is Nothing) Then
                Me.AltaModificacionTpvParametrosAlternativosOperationCompleted = AddressOf Me.OnAltaModificacionTpvParametrosAlternativosOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTpvParametrosAlternativos", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTpvParametrosAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTpvParametrosAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTpvParametrosAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTpvParametrosAlternativosCompleted(Me, New AltaModificacionTpvParametrosAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTpvTareasAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTpvTareasAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTpvTareasAlternativos", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvTareasAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTpvTareasAlternativosAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvTareasAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTpvTareasAlternativosOperationCompleted Is Nothing) Then
                Me.AltaModificacionTpvTareasAlternativosOperationCompleted = AddressOf Me.OnAltaModificacionTpvTareasAlternativosOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTpvTareasAlternativos", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTpvTareasAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTpvTareasAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTpvTareasAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTpvTareasAlternativosCompleted(Me, New AltaModificacionTpvTareasAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTpvArticulosConfiguracion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTpvArticulosConfiguracion(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTpvArticulosConfiguracion", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvArticulosConfiguracionAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTpvArticulosConfiguracionAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTpvArticulosConfiguracionAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTpvArticulosConfiguracionOperationCompleted Is Nothing) Then
                Me.AltaModificacionTpvArticulosConfiguracionOperationCompleted = AddressOf Me.OnAltaModificacionTpvArticulosConfiguracionOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTpvArticulosConfiguracion", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTpvArticulosConfiguracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTpvArticulosConfiguracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTpvArticulosConfiguracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTpvArticulosConfiguracionCompleted(Me, New AltaModificacionTpvArticulosConfiguracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionCajas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionCajas(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionCajas", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionCajasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionCajasAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionCajasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionCajasOperationCompleted Is Nothing) Then
                Me.AltaModificacionCajasOperationCompleted = AddressOf Me.OnAltaModificacionCajasOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionCajas", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionCajasCompleted(Me, New AltaModificacionCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AltaModificacionTiendas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AltaModificacionTiendas(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable) As String
            Dim results() As Object = Me.Invoke("AltaModificacionTiendas", New Object() {IdClienteOfficePOS, dttRegistro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTiendasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable)
            Me.AltaModificacionTiendasAsync(IdClienteOfficePOS, dttRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AltaModificacionTiendasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttRegistro As System.Data.DataTable, ByVal userState As Object)
            If (Me.AltaModificacionTiendasOperationCompleted Is Nothing) Then
                Me.AltaModificacionTiendasOperationCompleted = AddressOf Me.OnAltaModificacionTiendasOperationCompleted
            End If
            Me.InvokeAsync("AltaModificacionTiendas", New Object() {IdClienteOfficePOS, dttRegistro}, Me.AltaModificacionTiendasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAltaModificacionTiendasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AltaModificacionTiendasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AltaModificacionTiendasCompleted(Me, New AltaModificacionTiendasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDatosSincronizar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDatosSincronizar(ByVal IdClienteOfficePOS As Integer, ByVal sFechaUltimaSincronizacion As String, ByVal iTienda As Integer, ByRef sSQL As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDatosSincronizar", New Object() {IdClienteOfficePOS, sFechaUltimaSincronizacion, iTienda, sSQL, sMsg})
            sSQL = CType(results(1),String)
            sMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosSincronizarAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFechaUltimaSincronizacion As String, ByVal iTienda As Integer, ByVal sSQL As String, ByVal sMsg As String)
            Me.ObtenerDatosSincronizarAsync(IdClienteOfficePOS, sFechaUltimaSincronizacion, iTienda, sSQL, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosSincronizarAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFechaUltimaSincronizacion As String, ByVal iTienda As Integer, ByVal sSQL As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDatosSincronizarOperationCompleted Is Nothing) Then
                Me.ObtenerDatosSincronizarOperationCompleted = AddressOf Me.OnObtenerDatosSincronizarOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDatosSincronizar", New Object() {IdClienteOfficePOS, sFechaUltimaSincronizacion, iTienda, sSQL, sMsg}, Me.ObtenerDatosSincronizarOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDatosSincronizarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDatosSincronizarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDatosSincronizarCompleted(Me, New ObtenerDatosSincronizarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosModelo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosModelo(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosModelo", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerArticulosModeloAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosModeloOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosModeloOperationCompleted = AddressOf Me.OnObtenerArticulosModeloOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosModelo", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerArticulosModeloOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosModeloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosModeloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosModeloCompleted(Me, New ObtenerArticulosModeloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulos(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulos", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerArticulosAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosOperationCompleted = AddressOf Me.OnObtenerArticulosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulos", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerArticulosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosCompleted(Me, New ObtenerArticulosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosDescripcionIdioma", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosDescripcionIdioma(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sIdiomaTienda As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosDescripcionIdioma", New Object() {IdClienteOfficePOS, sCodigo, sIdiomaTienda, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosDescripcionIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sIdiomaTienda As String, ByVal sMsg As String)
            Me.ObtenerArticulosDescripcionIdiomaAsync(IdClienteOfficePOS, sCodigo, sIdiomaTienda, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosDescripcionIdiomaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sIdiomaTienda As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosDescripcionIdiomaOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosDescripcionIdiomaOperationCompleted = AddressOf Me.OnObtenerArticulosDescripcionIdiomaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosDescripcionIdioma", New Object() {IdClienteOfficePOS, sCodigo, sIdiomaTienda, sMsg}, Me.ObtenerArticulosDescripcionIdiomaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosDescripcionIdiomaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosDescripcionIdiomaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosDescripcionIdiomaCompleted(Me, New ObtenerArticulosDescripcionIdiomaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCodigosDeBarras", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCodigosDeBarras(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCodigosDeBarras", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCodigosDeBarrasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerCodigosDeBarrasAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCodigosDeBarrasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerCodigosDeBarrasOperationCompleted Is Nothing) Then
                Me.ObtenerCodigosDeBarrasOperationCompleted = AddressOf Me.OnObtenerCodigosDeBarrasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCodigosDeBarras", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerCodigosDeBarrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCodigosDeBarrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCodigosDeBarrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCodigosDeBarrasCompleted(Me, New ObtenerCodigosDeBarrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerVendedores", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerVendedores(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerVendedores", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerVendedoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerVendedoresAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerVendedoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerVendedoresOperationCompleted Is Nothing) Then
                Me.ObtenerVendedoresOperationCompleted = AddressOf Me.OnObtenerVendedoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerVendedores", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerVendedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerVendedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerVendedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerVendedoresCompleted(Me, New ObtenerVendedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerEmpresa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerEmpresa(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerEmpresa", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerEmpresaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerEmpresaAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerEmpresaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerEmpresaOperationCompleted Is Nothing) Then
                Me.ObtenerEmpresaOperationCompleted = AddressOf Me.OnObtenerEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerEmpresa", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerEmpresaCompleted(Me, New ObtenerEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerBanco", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerBanco(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerBanco", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerBancoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerBancoAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerBancoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerBancoOperationCompleted Is Nothing) Then
                Me.ObtenerBancoOperationCompleted = AddressOf Me.OnObtenerBancoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerBanco", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerBancoCompleted(Me, New ObtenerBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDireccionesVarias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDireccionesVarias(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDireccionesVarias", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDireccionesVariasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerDireccionesVariasAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDireccionesVariasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerDireccionesVariasOperationCompleted Is Nothing) Then
                Me.ObtenerDireccionesVariasOperationCompleted = AddressOf Me.OnObtenerDireccionesVariasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDireccionesVarias", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerDireccionesVariasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDireccionesVariasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDireccionesVariasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDireccionesVariasCompleted(Me, New ObtenerDireccionesVariasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTiendas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTiendas(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTiendas", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerTiendasAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTiendasOperationCompleted Is Nothing) Then
                Me.ObtenerTiendasOperationCompleted = AddressOf Me.OnObtenerTiendasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTiendas", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerTiendasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTiendasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTiendasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTiendasCompleted(Me, New ObtenerTiendasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCajas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCajas(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCajas", New Object() {IdClienteOfficePOS, iTienda, iCaja, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sMsg As String)
            Me.ObtenerCajasAsync(IdClienteOfficePOS, iTienda, iCaja, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajasAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTienda As Integer, ByVal iCaja As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerCajasOperationCompleted Is Nothing) Then
                Me.ObtenerCajasOperationCompleted = AddressOf Me.OnObtenerCajasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCajas", New Object() {IdClienteOfficePOS, iTienda, iCaja, sMsg}, Me.ObtenerCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCajasCompleted(Me, New ObtenerCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTiendasGrupo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTiendasGrupo(ByVal IdClienteOfficePOS As Integer, ByVal iTiendaMaster As Integer, ByVal iTienda As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTiendasGrupo", New Object() {IdClienteOfficePOS, iTiendaMaster, iTienda, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasGrupoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTiendaMaster As Integer, ByVal iTienda As Integer, ByVal sMsg As String)
            Me.ObtenerTiendasGrupoAsync(IdClienteOfficePOS, iTiendaMaster, iTienda, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasGrupoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iTiendaMaster As Integer, ByVal iTienda As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTiendasGrupoOperationCompleted Is Nothing) Then
                Me.ObtenerTiendasGrupoOperationCompleted = AddressOf Me.OnObtenerTiendasGrupoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTiendasGrupo", New Object() {IdClienteOfficePOS, iTiendaMaster, iTienda, sMsg}, Me.ObtenerTiendasGrupoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTiendasGrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTiendasGrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTiendasGrupoCompleted(Me, New ObtenerTiendasGrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTPVPerifericosCharset", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTPVPerifericosCharset(ByVal IdClienteOfficePOS As Integer, ByVal iCharset As Integer, ByVal sSecuenciaEntrada As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTPVPerifericosCharset", New Object() {IdClienteOfficePOS, iCharset, sSecuenciaEntrada, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosCharsetAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCharset As Integer, ByVal sSecuenciaEntrada As String, ByVal sMsg As String)
            Me.ObtenerTPVPerifericosCharsetAsync(IdClienteOfficePOS, iCharset, sSecuenciaEntrada, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTPVPerifericosCharsetAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCharset As Integer, ByVal sSecuenciaEntrada As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTPVPerifericosCharsetOperationCompleted Is Nothing) Then
                Me.ObtenerTPVPerifericosCharsetOperationCompleted = AddressOf Me.OnObtenerTPVPerifericosCharsetOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTPVPerifericosCharset", New Object() {IdClienteOfficePOS, iCharset, sSecuenciaEntrada, sMsg}, Me.ObtenerTPVPerifericosCharsetOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTPVPerifericosCharsetOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTPVPerifericosCharsetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTPVPerifericosCharsetCompleted(Me, New ObtenerTPVPerifericosCharsetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoTarifa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoTarifa(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoTarifa", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoTarifaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTipoTarifaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoTarifaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTipoTarifaOperationCompleted Is Nothing) Then
                Me.ObtenerTipoTarifaOperationCompleted = AddressOf Me.OnObtenerTipoTarifaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoTarifa", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTipoTarifaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoTarifaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoTarifaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoTarifaCompleted(Me, New ObtenerTipoTarifaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTarifa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTarifa(ByVal IdClienteOfficePOS As Integer, ByVal sTarifa As String, ByVal sArticulo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTarifa", New Object() {IdClienteOfficePOS, sTarifa, sArticulo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTarifaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sTarifa As String, ByVal sArticulo As String, ByVal sMsg As String)
            Me.ObtenerTarifaAsync(IdClienteOfficePOS, sTarifa, sArticulo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTarifaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sTarifa As String, ByVal sArticulo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTarifaOperationCompleted Is Nothing) Then
                Me.ObtenerTarifaOperationCompleted = AddressOf Me.OnObtenerTarifaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTarifa", New Object() {IdClienteOfficePOS, sTarifa, sArticulo, sMsg}, Me.ObtenerTarifaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTarifaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTarifaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTarifaCompleted(Me, New ObtenerTarifaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPromocion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPromocion(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPromocion", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPromocionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerPromocionAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPromocionAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPromocionOperationCompleted Is Nothing) Then
                Me.ObtenerPromocionOperationCompleted = AddressOf Me.OnObtenerPromocionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPromocion", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerPromocionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPromocionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPromocionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPromocionCompleted(Me, New ObtenerPromocionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPromocionEscalado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPromocionEscalado(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPromocionEscalado", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPromocionEscaladoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerPromocionEscaladoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPromocionEscaladoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPromocionEscaladoOperationCompleted Is Nothing) Then
                Me.ObtenerPromocionEscaladoOperationCompleted = AddressOf Me.OnObtenerPromocionEscaladoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPromocionEscalado", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerPromocionEscaladoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPromocionEscaladoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPromocionEscaladoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPromocionEscaladoCompleted(Me, New ObtenerPromocionEscaladoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerClientesPreciosEscalado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerClientesPreciosEscalado(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerClientesPreciosEscalado", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerClientesPreciosEscaladoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerClientesPreciosEscaladoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerClientesPreciosEscaladoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerClientesPreciosEscaladoOperationCompleted Is Nothing) Then
                Me.ObtenerClientesPreciosEscaladoOperationCompleted = AddressOf Me.OnObtenerClientesPreciosEscaladoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerClientesPreciosEscalado", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerClientesPreciosEscaladoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerClientesPreciosEscaladoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerClientesPreciosEscaladoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerClientesPreciosEscaladoCompleted(Me, New ObtenerClientesPreciosEscaladoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosAlternativos", New Object() {IdClienteOfficePOS, sCodigo, sAlternativo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByVal sMsg As String)
            Me.ObtenerArticulosAlternativosAsync(IdClienteOfficePOS, sCodigo, sAlternativo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosAlternativosOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosAlternativosOperationCompleted = AddressOf Me.OnObtenerArticulosAlternativosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosAlternativos", New Object() {IdClienteOfficePOS, sCodigo, sAlternativo, sMsg}, Me.ObtenerArticulosAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosAlternativosCompleted(Me, New ObtenerArticulosAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosModeloAlternativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosModeloAlternativos(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosModeloAlternativos", New Object() {IdClienteOfficePOS, sCodigo, sAlternativo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByVal sMsg As String)
            Me.ObtenerArticulosModeloAlternativosAsync(IdClienteOfficePOS, sCodigo, sAlternativo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloAlternativosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sAlternativo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosModeloAlternativosOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosModeloAlternativosOperationCompleted = AddressOf Me.OnObtenerArticulosModeloAlternativosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosModeloAlternativos", New Object() {IdClienteOfficePOS, sCodigo, sAlternativo, sMsg}, Me.ObtenerArticulosModeloAlternativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosModeloAlternativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosModeloAlternativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosModeloAlternativosCompleted(Me, New ObtenerArticulosModeloAlternativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosComplementarios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosComplementarios(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosComplementarios", New Object() {IdClienteOfficePOS, sCodigo, sComplementario, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosComplementariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByVal sMsg As String)
            Me.ObtenerArticulosComplementariosAsync(IdClienteOfficePOS, sCodigo, sComplementario, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosComplementariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosComplementariosOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosComplementariosOperationCompleted = AddressOf Me.OnObtenerArticulosComplementariosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosComplementarios", New Object() {IdClienteOfficePOS, sCodigo, sComplementario, sMsg}, Me.ObtenerArticulosComplementariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosComplementariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosComplementariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosComplementariosCompleted(Me, New ObtenerArticulosComplementariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerArticulosModeloComplementarios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerArticulosModeloComplementarios(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerArticulosModeloComplementarios", New Object() {IdClienteOfficePOS, sCodigo, sComplementario, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloComplementariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByVal sMsg As String)
            Me.ObtenerArticulosModeloComplementariosAsync(IdClienteOfficePOS, sCodigo, sComplementario, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerArticulosModeloComplementariosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sComplementario As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerArticulosModeloComplementariosOperationCompleted Is Nothing) Then
                Me.ObtenerArticulosModeloComplementariosOperationCompleted = AddressOf Me.OnObtenerArticulosModeloComplementariosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerArticulosModeloComplementarios", New Object() {IdClienteOfficePOS, sCodigo, sComplementario, sMsg}, Me.ObtenerArticulosModeloComplementariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerArticulosModeloComplementariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerArticulosModeloComplementariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerArticulosModeloComplementariosCompleted(Me, New ObtenerArticulosModeloComplementariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerColores", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerColores(ByVal IdClienteOfficePOS As Integer, ByVal sIdColor As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerColores", New Object() {IdClienteOfficePOS, sIdColor, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerColoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdColor As String, ByVal sMsg As String)
            Me.ObtenerColoresAsync(IdClienteOfficePOS, sIdColor, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerColoresAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdColor As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerColoresOperationCompleted Is Nothing) Then
                Me.ObtenerColoresOperationCompleted = AddressOf Me.OnObtenerColoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerColores", New Object() {IdClienteOfficePOS, sIdColor, sMsg}, Me.ObtenerColoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerColoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerColoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerColoresCompleted(Me, New ObtenerColoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerColoresDesglose", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerColoresDesglose(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sIdColor As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerColoresDesglose", New Object() {IdClienteOfficePOS, sIdMatriz, sIdColor, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerColoresDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sIdColor As String, ByVal sMsg As String)
            Me.ObtenerColoresDesgloseAsync(IdClienteOfficePOS, sIdMatriz, sIdColor, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerColoresDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sIdColor As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerColoresDesgloseOperationCompleted Is Nothing) Then
                Me.ObtenerColoresDesgloseOperationCompleted = AddressOf Me.OnObtenerColoresDesgloseOperationCompleted
            End If
            Me.InvokeAsync("ObtenerColoresDesglose", New Object() {IdClienteOfficePOS, sIdMatriz, sIdColor, sMsg}, Me.ObtenerColoresDesgloseOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerColoresDesgloseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerColoresDesgloseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerColoresDesgloseCompleted(Me, New ObtenerColoresDesgloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerFabricante", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFabricante(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerFabricante", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFabricanteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerFabricanteAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFabricanteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerFabricanteOperationCompleted Is Nothing) Then
                Me.ObtenerFabricanteOperationCompleted = AddressOf Me.OnObtenerFabricanteOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFabricante", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerFabricanteOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFabricanteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFabricanteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFabricanteCompleted(Me, New ObtenerFabricanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerFamilia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFamilia(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerFamilia", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFamiliaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerFamiliaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFamiliaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerFamiliaOperationCompleted Is Nothing) Then
                Me.ObtenerFamiliaOperationCompleted = AddressOf Me.OnObtenerFamiliaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFamilia", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerFamiliaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFamiliaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFamiliaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFamiliaCompleted(Me, New ObtenerFamiliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerFormaDePago", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFormaDePago(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerFormaDePago", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFormaDePagoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerFormaDePagoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFormaDePagoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerFormaDePagoOperationCompleted Is Nothing) Then
                Me.ObtenerFormaDePagoOperationCompleted = AddressOf Me.OnObtenerFormaDePagoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFormaDePago", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerFormaDePagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFormaDePagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFormaDePagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFormaDePagoCompleted(Me, New ObtenerFormaDePagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerIvaEmpresa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerIvaEmpresa(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerIvaEmpresa", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerIvaEmpresaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerIvaEmpresaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerIvaEmpresaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerIvaEmpresaOperationCompleted Is Nothing) Then
                Me.ObtenerIvaEmpresaOperationCompleted = AddressOf Me.OnObtenerIvaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerIvaEmpresa", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerIvaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerIvaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerIvaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerIvaEmpresaCompleted(Me, New ObtenerIvaEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMarca", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerMarca(ByVal IdClienteOfficePOS As Integer, ByVal sFabricante As String, ByVal sMarca As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerMarca", New Object() {IdClienteOfficePOS, sFabricante, sMarca, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerMarcaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFabricante As String, ByVal sMarca As String, ByVal sMsg As String)
            Me.ObtenerMarcaAsync(IdClienteOfficePOS, sFabricante, sMarca, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerMarcaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFabricante As String, ByVal sMarca As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerMarcaOperationCompleted Is Nothing) Then
                Me.ObtenerMarcaOperationCompleted = AddressOf Me.OnObtenerMarcaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerMarca", New Object() {IdClienteOfficePOS, sFabricante, sMarca, sMsg}, Me.ObtenerMarcaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerMarcaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerMarcaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerMarcaCompleted(Me, New ObtenerMarcaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerModista", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerModista(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerModista", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerModistaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerModistaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerModistaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerModistaOperationCompleted Is Nothing) Then
                Me.ObtenerModistaOperationCompleted = AddressOf Me.OnObtenerModistaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerModista", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerModistaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerModistaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerModistaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerModistaCompleted(Me, New ObtenerModistaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerSerie", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerSerie(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerSerie", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerSerieAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerSerieAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerSerieAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerSerieOperationCompleted Is Nothing) Then
                Me.ObtenerSerieOperationCompleted = AddressOf Me.OnObtenerSerieOperationCompleted
            End If
            Me.InvokeAsync("ObtenerSerie", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerSerieOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerSerieOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerSerieCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerSerieCompleted(Me, New ObtenerSerieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerSubFamilia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerSubFamilia(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sSubFamilia As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerSubFamilia", New Object() {IdClienteOfficePOS, sFamilia, sSubFamilia, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerSubFamiliaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sSubFamilia As String, ByVal sMsg As String)
            Me.ObtenerSubFamiliaAsync(IdClienteOfficePOS, sFamilia, sSubFamilia, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerSubFamiliaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sFamilia As String, ByVal sSubFamilia As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerSubFamiliaOperationCompleted Is Nothing) Then
                Me.ObtenerSubFamiliaOperationCompleted = AddressOf Me.OnObtenerSubFamiliaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerSubFamilia", New Object() {IdClienteOfficePOS, sFamilia, sSubFamilia, sMsg}, Me.ObtenerSubFamiliaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerSubFamiliaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerSubFamiliaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerSubFamiliaCompleted(Me, New ObtenerSubFamiliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTalla", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTalla(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTalla", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTallaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTallaAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTallaAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTallaOperationCompleted Is Nothing) Then
                Me.ObtenerTallaOperationCompleted = AddressOf Me.OnObtenerTallaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTalla", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTallaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTallaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTallaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTallaCompleted(Me, New ObtenerTallaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTallasDesglose", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTallasDesglose(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sTalla As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTallasDesglose", New Object() {IdClienteOfficePOS, sIdMatriz, sTalla, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTallasDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sTalla As String, ByVal sMsg As String)
            Me.ObtenerTallasDesgloseAsync(IdClienteOfficePOS, sIdMatriz, sTalla, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTallasDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sIdMatriz As String, ByVal sTalla As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTallasDesgloseOperationCompleted Is Nothing) Then
                Me.ObtenerTallasDesgloseOperationCompleted = AddressOf Me.OnObtenerTallasDesgloseOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTallasDesglose", New Object() {IdClienteOfficePOS, sIdMatriz, sTalla, sMsg}, Me.ObtenerTallasDesgloseOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTallasDesgloseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTallasDesgloseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTallasDesgloseCompleted(Me, New ObtenerTallasDesgloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoDeDocumento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoDeDocumento(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoDeDocumento", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeDocumentoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTipoDeDocumentoAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeDocumentoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTipoDeDocumentoOperationCompleted Is Nothing) Then
                Me.ObtenerTipoDeDocumentoOperationCompleted = AddressOf Me.OnObtenerTipoDeDocumentoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoDeDocumento", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTipoDeDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoDeDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoDeDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoDeDocumentoCompleted(Me, New ObtenerTipoDeDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoDeCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoDeCliente(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoDeCliente", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTipoDeClienteAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTipoDeClienteOperationCompleted Is Nothing) Then
                Me.ObtenerTipoDeClienteOperationCompleted = AddressOf Me.OnObtenerTipoDeClienteOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoDeCliente", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTipoDeClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoDeClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoDeClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoDeClienteCompleted(Me, New ObtenerTipoDeClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoDeDesglose", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoDeDesglose(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoDeDesglose", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTipoDeDesgloseAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoDeDesgloseAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTipoDeDesgloseOperationCompleted Is Nothing) Then
                Me.ObtenerTipoDeDesgloseOperationCompleted = AddressOf Me.OnObtenerTipoDeDesgloseOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoDeDesglose", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTipoDeDesgloseOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoDeDesgloseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoDeDesgloseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoDeDesgloseCompleted(Me, New ObtenerTipoDeDesgloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTiposMovimientoAlmacen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTiposMovimientoAlmacen(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTiposMovimientoAlmacen", New Object() {IdClienteOfficePOS, sCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiposMovimientoAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String)
            Me.ObtenerTiposMovimientoAlmacenAsync(IdClienteOfficePOS, sCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiposMovimientoAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal sCodigo As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTiposMovimientoAlmacenOperationCompleted Is Nothing) Then
                Me.ObtenerTiposMovimientoAlmacenOperationCompleted = AddressOf Me.OnObtenerTiposMovimientoAlmacenOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTiposMovimientoAlmacen", New Object() {IdClienteOfficePOS, sCodigo, sMsg}, Me.ObtenerTiposMovimientoAlmacenOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTiposMovimientoAlmacenOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTiposMovimientoAlmacenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTiposMovimientoAlmacenCompleted(Me, New ObtenerTiposMovimientoAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerAlmacen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAlmacen(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerAlmacen", New Object() {IdClienteOfficePOS, iCodigo, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String)
            Me.ObtenerAlmacenAsync(IdClienteOfficePOS, iCodigo, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal iCodigo As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerAlmacenOperationCompleted Is Nothing) Then
                Me.ObtenerAlmacenOperationCompleted = AddressOf Me.OnObtenerAlmacenOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAlmacen", New Object() {IdClienteOfficePOS, iCodigo, sMsg}, Me.ObtenerAlmacenOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAlmacenOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAlmacenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAlmacenCompleted(Me, New ObtenerAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumeroFilasClientesDireccionesVarias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NumeroFilasClientesDireccionesVarias(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String) As Long
            Dim results() As Object = Me.Invoke("NumeroFilasClientesDireccionesVarias", New Object() {IdClienteOfficePOS, sWHERE})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasClientesDireccionesVariasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String)
            Me.NumeroFilasClientesDireccionesVariasAsync(IdClienteOfficePOS, sWHERE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasClientesDireccionesVariasAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String, ByVal userState As Object)
            If (Me.NumeroFilasClientesDireccionesVariasOperationCompleted Is Nothing) Then
                Me.NumeroFilasClientesDireccionesVariasOperationCompleted = AddressOf Me.OnNumeroFilasClientesDireccionesVariasOperationCompleted
            End If
            Me.InvokeAsync("NumeroFilasClientesDireccionesVarias", New Object() {IdClienteOfficePOS, sWHERE}, Me.NumeroFilasClientesDireccionesVariasOperationCompleted, userState)
        End Sub
        
        Private Sub OnNumeroFilasClientesDireccionesVariasOperationCompleted(ByVal arg As Object)
            If (Not (Me.NumeroFilasClientesDireccionesVariasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NumeroFilasClientesDireccionesVariasCompleted(Me, New NumeroFilasClientesDireccionesVariasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumeroFilasClientes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NumeroFilasClientes(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String) As Long
            Dim results() As Object = Me.Invoke("NumeroFilasClientes", New Object() {IdClienteOfficePOS, sWHERE})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasClientesAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String)
            Me.NumeroFilasClientesAsync(IdClienteOfficePOS, sWHERE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasClientesAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String, ByVal userState As Object)
            If (Me.NumeroFilasClientesOperationCompleted Is Nothing) Then
                Me.NumeroFilasClientesOperationCompleted = AddressOf Me.OnNumeroFilasClientesOperationCompleted
            End If
            Me.InvokeAsync("NumeroFilasClientes", New Object() {IdClienteOfficePOS, sWHERE}, Me.NumeroFilasClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnNumeroFilasClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.NumeroFilasClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NumeroFilasClientesCompleted(Me, New NumeroFilasClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PuntosClientes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PuntosClientes(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long) As Long
            Dim results() As Object = Me.Invoke("PuntosClientes", New Object() {IdClienteOfficePOS, lCliente})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PuntosClientesAsync(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long)
            Me.PuntosClientesAsync(IdClienteOfficePOS, lCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PuntosClientesAsync(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long, ByVal userState As Object)
            If (Me.PuntosClientesOperationCompleted Is Nothing) Then
                Me.PuntosClientesOperationCompleted = AddressOf Me.OnPuntosClientesOperationCompleted
            End If
            Me.InvokeAsync("PuntosClientes", New Object() {IdClienteOfficePOS, lCliente}, Me.PuntosClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnPuntosClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.PuntosClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PuntosClientesCompleted(Me, New PuntosClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PuntosClientesImporte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PuntosClientesImporte(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long) As Double
            Dim results() As Object = Me.Invoke("PuntosClientesImporte", New Object() {IdClienteOfficePOS, lCliente})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PuntosClientesImporteAsync(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long)
            Me.PuntosClientesImporteAsync(IdClienteOfficePOS, lCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PuntosClientesImporteAsync(ByVal IdClienteOfficePOS As Integer, ByVal lCliente As Long, ByVal userState As Object)
            If (Me.PuntosClientesImporteOperationCompleted Is Nothing) Then
                Me.PuntosClientesImporteOperationCompleted = AddressOf Me.OnPuntosClientesImporteOperationCompleted
            End If
            Me.InvokeAsync("PuntosClientesImporte", New Object() {IdClienteOfficePOS, lCliente}, Me.PuntosClientesImporteOperationCompleted, userState)
        End Sub
        
        Private Sub OnPuntosClientesImporteOperationCompleted(ByVal arg As Object)
            If (Not (Me.PuntosClientesImporteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PuntosClientesImporteCompleted(Me, New PuntosClientesImporteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExisteCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExisteCliente(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ExisteCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExisteClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer)
            Me.ExisteClienteAsync(IdClienteOfficePOS, CodigoDeCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExisteClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoDeCliente As Integer, ByVal userState As Object)
            If (Me.ExisteClienteOperationCompleted Is Nothing) Then
                Me.ExisteClienteOperationCompleted = AddressOf Me.OnExisteClienteOperationCompleted
            End If
            Me.InvokeAsync("ExisteCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente}, Me.ExisteClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnExisteClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExisteClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExisteClienteCompleted(Me, New ExisteClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarCliente(ByVal CodigoDeCliente As Integer, ByVal IdClienteOfficePOS As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarCliente", New Object() {CodigoDeCliente, IdClienteOfficePOS})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarClienteAsync(ByVal CodigoDeCliente As Integer, ByVal IdClienteOfficePOS As Integer)
            Me.CargarClienteAsync(CodigoDeCliente, IdClienteOfficePOS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarClienteAsync(ByVal CodigoDeCliente As Integer, ByVal IdClienteOfficePOS As Integer, ByVal userState As Object)
            If (Me.CargarClienteOperationCompleted Is Nothing) Then
                Me.CargarClienteOperationCompleted = AddressOf Me.OnCargarClienteOperationCompleted
            End If
            Me.InvokeAsync("CargarCliente", New Object() {CodigoDeCliente, IdClienteOfficePOS}, Me.CargarClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarClienteCompleted(Me, New CargarClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCliente( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal TipoDeCliente As String) As String
            Dim results() As Object = Me.Invoke("UpdateCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, TarjetaFidelizacion, TipoDeCliente})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal TipoDeCliente As String)
            Me.UpdateClienteAsync(IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, TarjetaFidelizacion, TipoDeCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal userState As Object)
            If (Me.UpdateClienteOperationCompleted Is Nothing) Then
                Me.UpdateClienteOperationCompleted = AddressOf Me.OnUpdateClienteOperationCompleted
            End If
            Me.InvokeAsync("UpdateCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, TarjetaFidelizacion, TipoDeCliente}, Me.UpdateClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateClienteCompleted(Me, New UpdateClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCliente( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String) As String
            Dim results() As Object = Me.Invoke("InsertCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String)
            Me.InsertClienteAsync(IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal Nombre As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Domicilio As String,  _
                    ByVal CP As String,  _
                    ByVal Poblacion As String,  _
                    ByVal CIF As String,  _
                    ByVal Exportacion As Integer,  _
                    ByVal Telf1 As String,  _
                    ByVal Telf2 As String,  _
                    ByVal Fax As String,  _
                    ByVal Tarifa As String,  _
                    ByVal RecargoEnIva As Integer,  _
                    ByVal ExentoDeIva As Integer,  _
                    ByVal VentasConIva As Integer,  _
                    ByVal Descuento1 As Double,  _
                    ByVal Pais As String,  _
                    ByVal ClienteObsoleto As Integer,  _
                    ByVal AlbaranValorado As Integer,  _
                    ByVal FacturaPorAlbaran As Integer,  _
                    ByVal FacturacionPorCentros As Integer,  _
                    ByVal SuministroTotal As Integer,  _
                    ByVal CodArtSegunCli As Integer,  _
                    ByVal Intracomunitario As Integer,  _
                    ByVal Nacional As Integer,  _
                    ByVal EsGrupo As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Serie As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Email1 As String,  _
                    ByVal Email2 As String,  _
                    ByVal CuentaContable As String,  _
                    ByVal TarjetaFidelizacion As String,  _
                    ByVal Tienda As Integer,  _
                    ByVal TipoDeCliente As String,  _
                    ByVal CuentaContableVentas As String,  _
                    ByVal CentroCoste As String,  _
                    ByVal userState As Object)
            If (Me.InsertClienteOperationCompleted Is Nothing) Then
                Me.InsertClienteOperationCompleted = AddressOf Me.OnInsertClienteOperationCompleted
            End If
            Me.InvokeAsync("InsertCliente", New Object() {IdClienteOfficePOS, CodigoDeCliente, Nombre, RazonSocial, Domicilio, CP, Poblacion, CIF, Exportacion, Telf1, Telf2, Fax, Tarifa, RecargoEnIva, ExentoDeIva, VentasConIva, Descuento1, Pais, ClienteObsoleto, AlbaranValorado, FacturaPorAlbaran, FacturacionPorCentros, SuministroTotal, CodArtSegunCli, Intracomunitario, Nacional, EsGrupo, FormaDePago, Serie, Observaciones, Email1, Email2, CuentaContable, TarjetaFidelizacion, Tienda, TipoDeCliente, CuentaContableVentas, CentroCoste}, Me.InsertClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertClienteCompleted(Me, New InsertClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Saldo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Saldo(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As Double
            Dim results() As Object = Me.Invoke("Saldo", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaldoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.SaldoAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaldoAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.SaldoOperationCompleted Is Nothing) Then
                Me.SaldoOperationCompleted = AddressOf Me.OnSaldoOperationCompleted
            End If
            Me.InvokeAsync("Saldo", New Object() {IdClienteOfficePOS, sSQL}, Me.SaldoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaldoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaldoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaldoCompleted(Me, New SaldoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumeroFilasArticulos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NumeroFilasArticulos(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String, ByVal NumeroDeTienda As Long, ByVal bModelo As Boolean, ByRef sMensajeError As String) As Long
            Dim results() As Object = Me.Invoke("NumeroFilasArticulos", New Object() {IdClienteOfficePOS, sWHERE, NumeroDeTienda, bModelo, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasArticulosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String, ByVal NumeroDeTienda As Long, ByVal bModelo As Boolean, ByVal sMensajeError As String)
            Me.NumeroFilasArticulosAsync(IdClienteOfficePOS, sWHERE, NumeroDeTienda, bModelo, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NumeroFilasArticulosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sWHERE As String, ByVal NumeroDeTienda As Long, ByVal bModelo As Boolean, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.NumeroFilasArticulosOperationCompleted Is Nothing) Then
                Me.NumeroFilasArticulosOperationCompleted = AddressOf Me.OnNumeroFilasArticulosOperationCompleted
            End If
            Me.InvokeAsync("NumeroFilasArticulos", New Object() {IdClienteOfficePOS, sWHERE, NumeroDeTienda, bModelo, sMensajeError}, Me.NumeroFilasArticulosOperationCompleted, userState)
        End Sub
        
        Private Sub OnNumeroFilasArticulosOperationCompleted(ByVal arg As Object)
            If (Not (Me.NumeroFilasArticulosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NumeroFilasArticulosCompleted(Me, New NumeroFilasArticulosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaStocks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaStocks(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal NumeroDeTienda As Integer, ByVal Articulo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaStocks", New Object() {IdClienteOfficePOS, sSQL, NumeroDeTienda, Articulo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaStocksAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal NumeroDeTienda As Integer, ByVal Articulo As String)
            Me.ConsultaStocksAsync(IdClienteOfficePOS, sSQL, NumeroDeTienda, Articulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaStocksAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal NumeroDeTienda As Integer, ByVal Articulo As String, ByVal userState As Object)
            If (Me.ConsultaStocksOperationCompleted Is Nothing) Then
                Me.ConsultaStocksOperationCompleted = AddressOf Me.OnConsultaStocksOperationCompleted
            End If
            Me.InvokeAsync("ConsultaStocks", New Object() {IdClienteOfficePOS, sSQL, NumeroDeTienda, Articulo}, Me.ConsultaStocksOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaStocksOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaStocksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaStocksCompleted(Me, New ConsultaStocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateIP(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateIP", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, IP})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateIPAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal IP As String)
            Me.UpdateIPAsync(IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, IP, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateIPAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal IP As String, ByVal userState As Object)
            If (Me.UpdateIPOperationCompleted Is Nothing) Then
                Me.UpdateIPOperationCompleted = AddressOf Me.OnUpdateIPOperationCompleted
            End If
            Me.InvokeAsync("UpdateIP", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, IP}, Me.UpdateIPOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateIPOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateIPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateIPCompleted(Me, New UpdateIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerIP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerIP(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer) As String
            Dim results() As Object = Me.Invoke("ObtenerIP", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerIPAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer)
            Me.ObtenerIPAsync(IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerIPAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroDeTienda As Integer, ByVal NumeroDeCaja As Integer, ByVal userState As Object)
            If (Me.ObtenerIPOperationCompleted Is Nothing) Then
                Me.ObtenerIPOperationCompleted = AddressOf Me.OnObtenerIPOperationCompleted
            End If
            Me.InvokeAsync("ObtenerIP", New Object() {IdClienteOfficePOS, NumeroDeTienda, NumeroDeCaja}, Me.ObtenerIPOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerIPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerIPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerIPCompleted(Me, New ObtenerIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTesoreria", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertTesoreria( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByRef strPosicionMov As String,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumentoRecibo As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal ImporteRecibo As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal SerieRecibo As String,  _
                    ByVal JustificanteRecibo As String,  _
                    ByVal NumeroDeTiendaRecibo As Integer,  _
                    ByVal TipoDocumentoRecibo As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByVal bNuevoRecibo As Boolean,  _
                    ByVal sVariosRecibos As String,  _
                    ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertTesoreria", New Object() {IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, NumeroRecibo, FechaExpedicion, NumeroDocumentoRecibo, FechaDocumento, FechaVencimiento, ImporteRecibo, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, SerieRecibo, JustificanteRecibo, NumeroDeTiendaRecibo, TipoDocumentoRecibo, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, bNuevoRecibo, sVariosRecibos, sMensajeError})
            strPosicionMov = CType(results(1),String)
            sMensajeError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertTesoreriaAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByVal strPosicionMov As String,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumentoRecibo As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal ImporteRecibo As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal SerieRecibo As String,  _
                    ByVal JustificanteRecibo As String,  _
                    ByVal NumeroDeTiendaRecibo As Integer,  _
                    ByVal TipoDocumentoRecibo As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByVal bNuevoRecibo As Boolean,  _
                    ByVal sVariosRecibos As String,  _
                    ByVal sMensajeError As String)
            Me.InsertTesoreriaAsync(IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, NumeroRecibo, FechaExpedicion, NumeroDocumentoRecibo, FechaDocumento, FechaVencimiento, ImporteRecibo, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, SerieRecibo, JustificanteRecibo, NumeroDeTiendaRecibo, TipoDocumentoRecibo, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, bNuevoRecibo, sVariosRecibos, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTesoreriaAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByVal strPosicionMov As String,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumentoRecibo As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal ImporteRecibo As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal SerieRecibo As String,  _
                    ByVal JustificanteRecibo As String,  _
                    ByVal NumeroDeTiendaRecibo As Integer,  _
                    ByVal TipoDocumentoRecibo As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByVal bNuevoRecibo As Boolean,  _
                    ByVal sVariosRecibos As String,  _
                    ByVal sMensajeError As String,  _
                    ByVal userState As Object)
            If (Me.InsertTesoreriaOperationCompleted Is Nothing) Then
                Me.InsertTesoreriaOperationCompleted = AddressOf Me.OnInsertTesoreriaOperationCompleted
            End If
            Me.InvokeAsync("InsertTesoreria", New Object() {IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, NumeroRecibo, FechaExpedicion, NumeroDocumentoRecibo, FechaDocumento, FechaVencimiento, ImporteRecibo, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, SerieRecibo, JustificanteRecibo, NumeroDeTiendaRecibo, TipoDocumentoRecibo, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, bNuevoRecibo, sVariosRecibos, sMensajeError}, Me.InsertTesoreriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertTesoreriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertTesoreriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertTesoreriaCompleted(Me, New InsertTesoreriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMovCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertMovCliente( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByRef strPosicionMov As String,  _
                    ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertMovCliente", New Object() {IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, sMensajeError})
            strPosicionMov = CType(results(1),String)
            sMensajeError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertMovClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByVal strPosicionMov As String,  _
                    ByVal sMensajeError As String)
            Me.InsertMovClienteAsync(IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertMovClienteAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal CodigoCliente As Integer,  _
                    ByVal Cuenta As String,  _
                    ByVal Fecha As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal Serie As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal Importe As Double,  _
                    ByVal DH As String,  _
                    ByVal Justificante As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal sTipoTiendas As String,  _
                    ByVal strPosicionMov As String,  _
                    ByVal sMensajeError As String,  _
                    ByVal userState As Object)
            If (Me.InsertMovClienteOperationCompleted Is Nothing) Then
                Me.InsertMovClienteOperationCompleted = AddressOf Me.OnInsertMovClienteOperationCompleted
            End If
            Me.InvokeAsync("InsertMovCliente", New Object() {IdClienteOfficePOS, CodigoCliente, Cuenta, Fecha, CodigoConcepto, DescripcionConcepto, Serie, NumeroDocumento, Importe, DH, Justificante, TipoDocumento, NumeroDeTienda, sTipoTiendas, strPosicionMov, sMensajeError}, Me.InsertMovClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertMovClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertMovClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertMovClienteCompleted(Me, New InsertMovClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarRecibo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarRecibo(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarReciboAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Long)
            Me.CargarReciboAsync(IdClienteOfficePOS, NumeroRecibo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarReciboAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Long, ByVal userState As Object)
            If (Me.CargarReciboOperationCompleted Is Nothing) Then
                Me.CargarReciboOperationCompleted = AddressOf Me.OnCargarReciboOperationCompleted
            End If
            Me.InvokeAsync("CargarRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo}, Me.CargarReciboOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarReciboOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarReciboCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarReciboCompleted(Me, New CargarReciboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRecibo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertRecibo( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal Importe As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal Serie As String,  _
                    ByVal Justificante As String,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal TipoDocumento As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo, FechaExpedicion, NumeroDocumento, FechaDocumento, FechaVencimiento, Importe, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, Serie, Justificante, NumeroDeTienda, TipoDocumento, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertReciboAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal Importe As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal Serie As String,  _
                    ByVal Justificante As String,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal TipoDocumento As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByVal sMensajeError As String)
            Me.InsertReciboAsync(IdClienteOfficePOS, NumeroRecibo, FechaExpedicion, NumeroDocumento, FechaDocumento, FechaVencimiento, Importe, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, Serie, Justificante, NumeroDeTienda, TipoDocumento, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertReciboAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal NumeroRecibo As Integer,  _
                    ByVal FechaExpedicion As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal FechaDocumento As String,  _
                    ByVal FechaVencimiento As String,  _
                    ByVal Importe As Double,  _
                    ByVal CodigoDeCliente As Integer,  _
                    ByVal FormaDePago As String,  _
                    ByVal Impreso As Integer,  _
                    ByVal UltimaImpresion As Integer,  _
                    ByVal Contabilizado As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal Situacion As String,  _
                    ByVal Divisa1 As String,  _
                    ByVal Importe1 As Double,  _
                    ByVal Divisa2 As String,  _
                    ByVal Importe2 As Double,  _
                    ByVal Serie As String,  _
                    ByVal Justificante As String,  _
                    ByVal NumeroDeTienda As Integer,  _
                    ByVal TipoDocumento As String,  _
                    ByVal AñoDocumentoOrigen As Integer,  _
                    ByVal SerieDocumentoOrigen As String,  _
                    ByVal NumeroDocumentoOrigen As Long,  _
                    ByVal EsAcuenta As Integer,  _
                    ByVal sMensajeError As String,  _
                    ByVal userState As Object)
            If (Me.InsertReciboOperationCompleted Is Nothing) Then
                Me.InsertReciboOperationCompleted = AddressOf Me.OnInsertReciboOperationCompleted
            End If
            Me.InvokeAsync("InsertRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo, FechaExpedicion, NumeroDocumento, FechaDocumento, FechaVencimiento, Importe, CodigoDeCliente, FormaDePago, Impreso, UltimaImpresion, Contabilizado, Vendedor, Situacion, Divisa1, Importe1, Divisa2, Importe2, Serie, Justificante, NumeroDeTienda, TipoDocumento, AñoDocumentoOrigen, SerieDocumentoOrigen, NumeroDocumentoOrigen, EsAcuenta, sMensajeError}, Me.InsertReciboOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertReciboOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertReciboCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertReciboCompleted(Me, New InsertReciboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRecibo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRecibo(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Integer, ByVal Situacion As String, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo, Situacion, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateReciboAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Integer, ByVal Situacion As String, ByVal sMensajeError As String)
            Me.UpdateReciboAsync(IdClienteOfficePOS, NumeroRecibo, Situacion, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateReciboAsync(ByVal IdClienteOfficePOS As Integer, ByVal NumeroRecibo As Integer, ByVal Situacion As String, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.UpdateReciboOperationCompleted Is Nothing) Then
                Me.UpdateReciboOperationCompleted = AddressOf Me.OnUpdateReciboOperationCompleted
            End If
            Me.InvokeAsync("UpdateRecibo", New Object() {IdClienteOfficePOS, NumeroRecibo, Situacion, sMensajeError}, Me.UpdateReciboOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateReciboOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateReciboCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateReciboCompleted(Me, New UpdateReciboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAlbaranTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAlbaranTraspaso(ByVal IdClienteOfficePOS As Integer, ByRef dttCabecera As System.Data.DataTable, ByVal dttDetalles As System.Data.DataTable, ByVal NumeroDeTienda As Long, ByRef NumeroDeAlbaranCentral As Long, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertAlbaranTraspaso", New Object() {IdClienteOfficePOS, dttCabecera, dttDetalles, NumeroDeTienda, NumeroDeAlbaranCentral, sMensajeError})
            dttCabecera = CType(results(1),System.Data.DataTable)
            NumeroDeAlbaranCentral = CType(results(2),Long)
            sMensajeError = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranTraspasoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttCabecera As System.Data.DataTable, ByVal dttDetalles As System.Data.DataTable, ByVal NumeroDeTienda As Long, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String)
            Me.InsertAlbaranTraspasoAsync(IdClienteOfficePOS, dttCabecera, dttDetalles, NumeroDeTienda, NumeroDeAlbaranCentral, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranTraspasoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttCabecera As System.Data.DataTable, ByVal dttDetalles As System.Data.DataTable, ByVal NumeroDeTienda As Long, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertAlbaranTraspasoOperationCompleted Is Nothing) Then
                Me.InsertAlbaranTraspasoOperationCompleted = AddressOf Me.OnInsertAlbaranTraspasoOperationCompleted
            End If
            Me.InvokeAsync("InsertAlbaranTraspaso", New Object() {IdClienteOfficePOS, dttCabecera, dttDetalles, NumeroDeTienda, NumeroDeAlbaranCentral, sMensajeError}, Me.InsertAlbaranTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAlbaranTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAlbaranTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAlbaranTraspasoCompleted(Me, New InsertAlbaranTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelarAlbaranTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelarAlbaranTraspaso(ByVal IdClienteOfficePOS As Integer, ByVal Serie As String, ByVal Numero As Long, ByVal Año As Integer, ByVal NumeroDeTienda As Long, ByVal dttLineasRecepcionadas As System.Data.DataTable, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("CancelarAlbaranTraspaso", New Object() {IdClienteOfficePOS, Serie, Numero, Año, NumeroDeTienda, dttLineasRecepcionadas, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelarAlbaranTraspasoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Serie As String, ByVal Numero As Long, ByVal Año As Integer, ByVal NumeroDeTienda As Long, ByVal dttLineasRecepcionadas As System.Data.DataTable, ByVal sMensajeError As String)
            Me.CancelarAlbaranTraspasoAsync(IdClienteOfficePOS, Serie, Numero, Año, NumeroDeTienda, dttLineasRecepcionadas, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelarAlbaranTraspasoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Serie As String, ByVal Numero As Long, ByVal Año As Integer, ByVal NumeroDeTienda As Long, ByVal dttLineasRecepcionadas As System.Data.DataTable, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.CancelarAlbaranTraspasoOperationCompleted Is Nothing) Then
                Me.CancelarAlbaranTraspasoOperationCompleted = AddressOf Me.OnCancelarAlbaranTraspasoOperationCompleted
            End If
            Me.InvokeAsync("CancelarAlbaranTraspaso", New Object() {IdClienteOfficePOS, Serie, Numero, Año, NumeroDeTienda, dttLineasRecepcionadas, sMensajeError}, Me.CancelarAlbaranTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelarAlbaranTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelarAlbaranTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelarAlbaranTraspasoCompleted(Me, New CancelarAlbaranTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarAlbaranCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarAlbaranCliente(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarAlbaranCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarAlbaranClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long)
            Me.CargarAlbaranClienteAsync(IdClienteOfficePOS, Año, Serie, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarAlbaranClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long, ByVal userState As Object)
            If (Me.CargarAlbaranClienteOperationCompleted Is Nothing) Then
                Me.CargarAlbaranClienteOperationCompleted = AddressOf Me.OnCargarAlbaranClienteOperationCompleted
            End If
            Me.InvokeAsync("CargarAlbaranCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero}, Me.CargarAlbaranClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarAlbaranClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarAlbaranClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarAlbaranClienteCompleted(Me, New CargarAlbaranClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAlbaranCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAlbaranCliente(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByRef NumeroDeAlbaranCentral As Long, ByRef sMensajeError As String, ByRef dttDiarioCaja As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("InsertAlbaranCliente", New Object() {IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja})
            NumeroDeAlbaranCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            dttDiarioCaja = CType(results(3),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable)
            Me.InsertAlbaranClienteAsync(IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAlbaranClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAlbaran As System.Data.DataSet, ByVal NumeroDeAlbaranCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable, ByVal userState As Object)
            If (Me.InsertAlbaranClienteOperationCompleted Is Nothing) Then
                Me.InsertAlbaranClienteOperationCompleted = AddressOf Me.OnInsertAlbaranClienteOperationCompleted
            End If
            Me.InvokeAsync("InsertAlbaranCliente", New Object() {IdClienteOfficePOS, dsAlbaran, NumeroDeAlbaranCentral, sMensajeError, dttDiarioCaja}, Me.InsertAlbaranClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAlbaranClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAlbaranClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAlbaranClienteCompleted(Me, New InsertAlbaranClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarFacturaCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarFacturaCliente(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarFacturaCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarFacturaClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long)
            Me.CargarFacturaClienteAsync(IdClienteOfficePOS, Año, Serie, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarFacturaClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long, ByVal userState As Object)
            If (Me.CargarFacturaClienteOperationCompleted Is Nothing) Then
                Me.CargarFacturaClienteOperationCompleted = AddressOf Me.OnCargarFacturaClienteOperationCompleted
            End If
            Me.InvokeAsync("CargarFacturaCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero}, Me.CargarFacturaClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarFacturaClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarFacturaClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarFacturaClienteCompleted(Me, New CargarFacturaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFacturaCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertFacturaCliente(ByVal IdClienteOfficePOS As Integer, ByVal dsFactura As System.Data.DataSet, ByRef NumeroDeFacturaCentral As Long, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertFacturaCliente", New Object() {IdClienteOfficePOS, dsFactura, NumeroDeFacturaCentral, sMensajeError})
            NumeroDeFacturaCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertFacturaClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsFactura As System.Data.DataSet, ByVal NumeroDeFacturaCentral As Long, ByVal sMensajeError As String)
            Me.InsertFacturaClienteAsync(IdClienteOfficePOS, dsFactura, NumeroDeFacturaCentral, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertFacturaClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsFactura As System.Data.DataSet, ByVal NumeroDeFacturaCentral As Long, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertFacturaClienteOperationCompleted Is Nothing) Then
                Me.InsertFacturaClienteOperationCompleted = AddressOf Me.OnInsertFacturaClienteOperationCompleted
            End If
            Me.InvokeAsync("InsertFacturaCliente", New Object() {IdClienteOfficePOS, dsFactura, NumeroDeFacturaCentral, sMensajeError}, Me.InsertFacturaClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertFacturaClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertFacturaClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertFacturaClienteCompleted(Me, New InsertFacturaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarPedidoCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarPedidoCliente(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarPedidoCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarPedidoClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long)
            Me.CargarPedidoClienteAsync(IdClienteOfficePOS, Año, Serie, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarPedidoClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long, ByVal userState As Object)
            If (Me.CargarPedidoClienteOperationCompleted Is Nothing) Then
                Me.CargarPedidoClienteOperationCompleted = AddressOf Me.OnCargarPedidoClienteOperationCompleted
            End If
            Me.InvokeAsync("CargarPedidoCliente", New Object() {IdClienteOfficePOS, Año, Serie, Numero}, Me.CargarPedidoClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarPedidoClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarPedidoClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarPedidoClienteCompleted(Me, New CargarPedidoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPedidoCliente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertPedidoCliente(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByRef NumeroDePedidoCentral As Long, ByRef sMensajeError As String, ByRef dttDiarioCaja As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("InsertPedidoCliente", New Object() {IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja})
            NumeroDePedidoCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            dttDiarioCaja = CType(results(3),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByVal NumeroDePedidoCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable)
            Me.InsertPedidoClienteAsync(IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertPedidoClienteAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPedido As System.Data.DataSet, ByVal NumeroDePedidoCentral As Long, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable, ByVal userState As Object)
            If (Me.InsertPedidoClienteOperationCompleted Is Nothing) Then
                Me.InsertPedidoClienteOperationCompleted = AddressOf Me.OnInsertPedidoClienteOperationCompleted
            End If
            Me.InvokeAsync("InsertPedidoCliente", New Object() {IdClienteOfficePOS, dsPedido, NumeroDePedidoCentral, sMensajeError, dttDiarioCaja}, Me.InsertPedidoClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertPedidoClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertPedidoClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertPedidoClienteCompleted(Me, New InsertPedidoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPedido( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal Numero As Long,  _
                    ByVal Serie As String,  _
                    ByVal Año As Integer,  _
                    ByVal intNumeroDeTienda As Integer,  _
                    ByVal dACuentaACancelar As Double,  _
                    ByVal bDevolverEfectivo As Boolean,  _
                    ByVal iClienteNuevoVale As Long,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal sDescripcionConcepto As String,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal SerieFacturas As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByRef dttDiarioCaja As System.Data.DataTable,  _
                    ByRef dttVale As System.Data.DataTable,  _
                    ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPedido", New Object() {IdClienteOfficePOS, Numero, Serie, Año, intNumeroDeTienda, dACuentaACancelar, bDevolverEfectivo, iClienteNuevoVale, strCodigoDevolucionACuenta, sDescripcionConcepto, strCodigoValeEmitido, strDivisa, strDivisa1, strCodigoAnticipo, SerieFacturas, strDescripcionAnticipo, dttDiarioCaja, dttVale, sMensajeError})
            dttDiarioCaja = CType(results(1),System.Data.DataTable)
            dttVale = CType(results(2),System.Data.DataTable)
            sMensajeError = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPedidoAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal Numero As Long,  _
                    ByVal Serie As String,  _
                    ByVal Año As Integer,  _
                    ByVal intNumeroDeTienda As Integer,  _
                    ByVal dACuentaACancelar As Double,  _
                    ByVal bDevolverEfectivo As Boolean,  _
                    ByVal iClienteNuevoVale As Long,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal sDescripcionConcepto As String,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal SerieFacturas As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByVal dttDiarioCaja As System.Data.DataTable,  _
                    ByVal dttVale As System.Data.DataTable,  _
                    ByVal sMensajeError As String)
            Me.EliminarPedidoAsync(IdClienteOfficePOS, Numero, Serie, Año, intNumeroDeTienda, dACuentaACancelar, bDevolverEfectivo, iClienteNuevoVale, strCodigoDevolucionACuenta, sDescripcionConcepto, strCodigoValeEmitido, strDivisa, strDivisa1, strCodigoAnticipo, SerieFacturas, strDescripcionAnticipo, dttDiarioCaja, dttVale, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPedidoAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal Numero As Long,  _
                    ByVal Serie As String,  _
                    ByVal Año As Integer,  _
                    ByVal intNumeroDeTienda As Integer,  _
                    ByVal dACuentaACancelar As Double,  _
                    ByVal bDevolverEfectivo As Boolean,  _
                    ByVal iClienteNuevoVale As Long,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal sDescripcionConcepto As String,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal SerieFacturas As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByVal dttDiarioCaja As System.Data.DataTable,  _
                    ByVal dttVale As System.Data.DataTable,  _
                    ByVal sMensajeError As String,  _
                    ByVal userState As Object)
            If (Me.EliminarPedidoOperationCompleted Is Nothing) Then
                Me.EliminarPedidoOperationCompleted = AddressOf Me.OnEliminarPedidoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPedido", New Object() {IdClienteOfficePOS, Numero, Serie, Año, intNumeroDeTienda, dACuentaACancelar, bDevolverEfectivo, iClienteNuevoVale, strCodigoDevolucionACuenta, sDescripcionConcepto, strCodigoValeEmitido, strDivisa, strDivisa1, strCodigoAnticipo, SerieFacturas, strDescripcionAnticipo, dttDiarioCaja, dttVale, sMensajeError}, Me.EliminarPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPedidoCompleted(Me, New EliminarPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarPedido(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByVal dttLineas As System.Data.DataTable, ByVal dttIVAEmpresa As System.Data.DataTable, ByVal Impuestos As System.Data.DataTable, ByVal DecimalesImporte As Integer, ByVal blnCobrarEncargoTotal As Boolean, ByVal CodigoDeAlmacen As Integer, ByVal EntradaACuenta As Double, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarPedido", New Object() {IdClienteOfficePOS, Numero, Serie, Año, dttLineas, dttIVAEmpresa, Impuestos, DecimalesImporte, blnCobrarEncargoTotal, CodigoDeAlmacen, EntradaACuenta, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarPedidoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByVal dttLineas As System.Data.DataTable, ByVal dttIVAEmpresa As System.Data.DataTable, ByVal Impuestos As System.Data.DataTable, ByVal DecimalesImporte As Integer, ByVal blnCobrarEncargoTotal As Boolean, ByVal CodigoDeAlmacen As Integer, ByVal EntradaACuenta As Double, ByVal sMensajeError As String)
            Me.ActualizarPedidoAsync(IdClienteOfficePOS, Numero, Serie, Año, dttLineas, dttIVAEmpresa, Impuestos, DecimalesImporte, blnCobrarEncargoTotal, CodigoDeAlmacen, EntradaACuenta, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarPedidoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByVal dttLineas As System.Data.DataTable, ByVal dttIVAEmpresa As System.Data.DataTable, ByVal Impuestos As System.Data.DataTable, ByVal DecimalesImporte As Integer, ByVal blnCobrarEncargoTotal As Boolean, ByVal CodigoDeAlmacen As Integer, ByVal EntradaACuenta As Double, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.ActualizarPedidoOperationCompleted Is Nothing) Then
                Me.ActualizarPedidoOperationCompleted = AddressOf Me.OnActualizarPedidoOperationCompleted
            End If
            Me.InvokeAsync("ActualizarPedido", New Object() {IdClienteOfficePOS, Numero, Serie, Año, dttLineas, dttIVAEmpresa, Impuestos, DecimalesImporte, blnCobrarEncargoTotal, CodigoDeAlmacen, EntradaACuenta, sMensajeError}, Me.ActualizarPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarPedidoCompleted(Me, New ActualizarPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarCabeceraPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarCabeceraPedido(ByVal IdClienteOfficePOS As Integer, ByVal dttPedido As System.Data.DataTable, ByRef sMensajeError As String, ByRef dttDiarioCaja As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarCabeceraPedido", New Object() {IdClienteOfficePOS, dttPedido, sMensajeError, dttDiarioCaja})
            sMensajeError = CType(results(1),String)
            dttDiarioCaja = CType(results(2),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarCabeceraPedidoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttPedido As System.Data.DataTable, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable)
            Me.ActualizarCabeceraPedidoAsync(IdClienteOfficePOS, dttPedido, sMensajeError, dttDiarioCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarCabeceraPedidoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttPedido As System.Data.DataTable, ByVal sMensajeError As String, ByVal dttDiarioCaja As System.Data.DataTable, ByVal userState As Object)
            If (Me.ActualizarCabeceraPedidoOperationCompleted Is Nothing) Then
                Me.ActualizarCabeceraPedidoOperationCompleted = AddressOf Me.OnActualizarCabeceraPedidoOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCabeceraPedido", New Object() {IdClienteOfficePOS, dttPedido, sMensajeError, dttDiarioCaja}, Me.ActualizarCabeceraPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarCabeceraPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCabeceraPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCabeceraPedidoCompleted(Me, New ActualizarCabeceraPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarPresupuesto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarPresupuesto(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarPresupuesto", New Object() {IdClienteOfficePOS, Año, Serie, Numero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long)
            Me.CargarPresupuestoAsync(IdClienteOfficePOS, Año, Serie, Numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Año As Long, ByVal Serie As String, ByVal Numero As Long, ByVal userState As Object)
            If (Me.CargarPresupuestoOperationCompleted Is Nothing) Then
                Me.CargarPresupuestoOperationCompleted = AddressOf Me.OnCargarPresupuestoOperationCompleted
            End If
            Me.InvokeAsync("CargarPresupuesto", New Object() {IdClienteOfficePOS, Año, Serie, Numero}, Me.CargarPresupuestoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarPresupuestoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarPresupuestoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarPresupuestoCompleted(Me, New CargarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPresupuesto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertPresupuesto(ByVal IdClienteOfficePOS As Integer, ByVal dsPresupuesto As System.Data.DataSet, ByRef NumeroDePresupuestoCentral As Long, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertPresupuesto", New Object() {IdClienteOfficePOS, dsPresupuesto, NumeroDePresupuestoCentral, sMensajeError})
            NumeroDePresupuestoCentral = CType(results(1),Long)
            sMensajeError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPresupuesto As System.Data.DataSet, ByVal NumeroDePresupuestoCentral As Long, ByVal sMensajeError As String)
            Me.InsertPresupuestoAsync(IdClienteOfficePOS, dsPresupuesto, NumeroDePresupuestoCentral, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPresupuesto As System.Data.DataSet, ByVal NumeroDePresupuestoCentral As Long, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.InsertPresupuestoOperationCompleted Is Nothing) Then
                Me.InsertPresupuestoOperationCompleted = AddressOf Me.OnInsertPresupuestoOperationCompleted
            End If
            Me.InvokeAsync("InsertPresupuesto", New Object() {IdClienteOfficePOS, dsPresupuesto, NumeroDePresupuestoCentral, sMensajeError}, Me.InsertPresupuestoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertPresupuestoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertPresupuestoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertPresupuestoCompleted(Me, New InsertPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarCabeceraPresupuesto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarCabeceraPresupuesto(ByVal IdClienteOfficePOS As Integer, ByVal dttPresupuesto As System.Data.DataTable, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarCabeceraPresupuesto", New Object() {IdClienteOfficePOS, dttPresupuesto, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarCabeceraPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttPresupuesto As System.Data.DataTable, ByVal sMensajeError As String)
            Me.ActualizarCabeceraPresupuestoAsync(IdClienteOfficePOS, dttPresupuesto, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarCabeceraPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal dttPresupuesto As System.Data.DataTable, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.ActualizarCabeceraPresupuestoOperationCompleted Is Nothing) Then
                Me.ActualizarCabeceraPresupuestoOperationCompleted = AddressOf Me.OnActualizarCabeceraPresupuestoOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCabeceraPresupuesto", New Object() {IdClienteOfficePOS, dttPresupuesto, sMensajeError}, Me.ActualizarCabeceraPresupuestoOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarCabeceraPresupuestoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCabeceraPresupuestoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCabeceraPresupuestoCompleted(Me, New ActualizarCabeceraPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarPresupuesto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPresupuesto(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPresupuesto", New Object() {IdClienteOfficePOS, Numero, Serie, Año, sMensajeError})
            sMensajeError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByVal sMensajeError As String)
            Me.EliminarPresupuestoAsync(IdClienteOfficePOS, Numero, Serie, Año, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPresupuestoAsync(ByVal IdClienteOfficePOS As Integer, ByVal Numero As Long, ByVal Serie As String, ByVal Año As Integer, ByVal sMensajeError As String, ByVal userState As Object)
            If (Me.EliminarPresupuestoOperationCompleted Is Nothing) Then
                Me.EliminarPresupuestoOperationCompleted = AddressOf Me.OnEliminarPresupuestoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPresupuesto", New Object() {IdClienteOfficePOS, Numero, Serie, Año, sMensajeError}, Me.EliminarPresupuestoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPresupuestoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPresupuestoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPresupuestoCompleted(Me, New EliminarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcesoCobrarOnline", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoCobrarOnline( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal ValeRecibido As Boolean,  _
                    ByVal RecibosACancelar As System.Data.DataTable,  _
                    ByVal CodigoDeCliente As Long,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal TipoDeDocumento As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal FechaOperacion As Date,  _
                    ByVal SerieFacturas As String,  _
                    ByRef NumeroDocumento As Long,  _
                    ByVal intDecimalesDivisa As Integer,  _
                    ByVal strCodigoDevolucionAnticipo As String,  _
                    ByVal strDescripcionDevolucionAnticipo As String,  _
                    ByVal NumeroDeTienda As Long,  _
                    ByVal NumeroDeCaja As Long,  _
                    ByVal sTipoTienda As String,  _
                    ByVal ImporteTotalVenta As Double,  _
                    ByVal ImporteVales As Double,  _
                    ByVal ImporteCambioVales As Double,  _
                    ByVal ImporteACredito As Double,  _
                    ByVal ACredito As Boolean,  _
                    ByVal ValeEmitido As Boolean,  _
                    ByVal TipoDeDocumentoOrigen As String,  _
                    ByVal SerieDocumento As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByVal strCodigoNuestraFactura As String,  _
                    ByVal strDescripcionNuestraFactura As String,  _
                    ByVal strCodigoCredito As String,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal strDescripcionDevolucionACuenta As String,  _
                    ByVal strCodigoNuestroCobro As String,  _
                    ByVal strDescripcionNuestroCobro As String,  _
                    ByVal strFormaDePagoHabitual As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal dblFactorCambioDeDivisaADivisa1 As Double,  _
                    ByVal intDecimalesDivisa1 As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal strCodigoValeRecibido As String,  _
                    ByVal dsFactura As System.Data.DataSet,  _
                    ByVal PagadoACuenta As Double,  _
                    ByVal PedidoSerie As String,  _
                    ByVal PedidoNumero As Long,  _
                    ByVal PedidoAño As Integer,  _
                    ByVal iDocOrigen As Integer,  _
                    ByVal bIgnorarCartera As Boolean,  _
                    ByRef dsTablasRef As System.Data.DataSet,  _
                    ByRef dttValeAImprimir As System.Data.DataTable,  _
                    ByRef sMensajeError As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesoCobrarOnline", New Object() {IdClienteOfficePOS, ValeRecibido, RecibosACancelar, CodigoDeCliente, strCodigoValeEmitido, TipoDeDocumento, TipoDocumento, FechaOperacion, SerieFacturas, NumeroDocumento, intDecimalesDivisa, strCodigoDevolucionAnticipo, strDescripcionDevolucionAnticipo, NumeroDeTienda, NumeroDeCaja, sTipoTienda, ImporteTotalVenta, ImporteVales, ImporteCambioVales, ImporteACredito, ACredito, ValeEmitido, TipoDeDocumentoOrigen, SerieDocumento, strCodigoAnticipo, strDescripcionAnticipo, strCodigoNuestraFactura, strDescripcionNuestraFactura, strCodigoCredito, strCodigoDevolucionACuenta, strDescripcionDevolucionACuenta, strCodigoNuestroCobro, strDescripcionNuestroCobro, strFormaDePagoHabitual, strDivisa, strDivisa1, dblFactorCambioDeDivisaADivisa1, intDecimalesDivisa1, Vendedor, strCodigoValeRecibido, dsFactura, PagadoACuenta, PedidoSerie, PedidoNumero, PedidoAño, iDocOrigen, bIgnorarCartera, dsTablasRef, dttValeAImprimir, sMensajeError})
            NumeroDocumento = CType(results(1),Long)
            dsTablasRef = CType(results(2),System.Data.DataSet)
            dttValeAImprimir = CType(results(3),System.Data.DataTable)
            sMensajeError = CType(results(4),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoCobrarOnlineAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal ValeRecibido As Boolean,  _
                    ByVal RecibosACancelar As System.Data.DataTable,  _
                    ByVal CodigoDeCliente As Long,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal TipoDeDocumento As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal FechaOperacion As Date,  _
                    ByVal SerieFacturas As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal intDecimalesDivisa As Integer,  _
                    ByVal strCodigoDevolucionAnticipo As String,  _
                    ByVal strDescripcionDevolucionAnticipo As String,  _
                    ByVal NumeroDeTienda As Long,  _
                    ByVal NumeroDeCaja As Long,  _
                    ByVal sTipoTienda As String,  _
                    ByVal ImporteTotalVenta As Double,  _
                    ByVal ImporteVales As Double,  _
                    ByVal ImporteCambioVales As Double,  _
                    ByVal ImporteACredito As Double,  _
                    ByVal ACredito As Boolean,  _
                    ByVal ValeEmitido As Boolean,  _
                    ByVal TipoDeDocumentoOrigen As String,  _
                    ByVal SerieDocumento As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByVal strCodigoNuestraFactura As String,  _
                    ByVal strDescripcionNuestraFactura As String,  _
                    ByVal strCodigoCredito As String,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal strDescripcionDevolucionACuenta As String,  _
                    ByVal strCodigoNuestroCobro As String,  _
                    ByVal strDescripcionNuestroCobro As String,  _
                    ByVal strFormaDePagoHabitual As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal dblFactorCambioDeDivisaADivisa1 As Double,  _
                    ByVal intDecimalesDivisa1 As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal strCodigoValeRecibido As String,  _
                    ByVal dsFactura As System.Data.DataSet,  _
                    ByVal PagadoACuenta As Double,  _
                    ByVal PedidoSerie As String,  _
                    ByVal PedidoNumero As Long,  _
                    ByVal PedidoAño As Integer,  _
                    ByVal iDocOrigen As Integer,  _
                    ByVal bIgnorarCartera As Boolean,  _
                    ByVal dsTablasRef As System.Data.DataSet,  _
                    ByVal dttValeAImprimir As System.Data.DataTable,  _
                    ByVal sMensajeError As String)
            Me.ProcesoCobrarOnlineAsync(IdClienteOfficePOS, ValeRecibido, RecibosACancelar, CodigoDeCliente, strCodigoValeEmitido, TipoDeDocumento, TipoDocumento, FechaOperacion, SerieFacturas, NumeroDocumento, intDecimalesDivisa, strCodigoDevolucionAnticipo, strDescripcionDevolucionAnticipo, NumeroDeTienda, NumeroDeCaja, sTipoTienda, ImporteTotalVenta, ImporteVales, ImporteCambioVales, ImporteACredito, ACredito, ValeEmitido, TipoDeDocumentoOrigen, SerieDocumento, strCodigoAnticipo, strDescripcionAnticipo, strCodigoNuestraFactura, strDescripcionNuestraFactura, strCodigoCredito, strCodigoDevolucionACuenta, strDescripcionDevolucionACuenta, strCodigoNuestroCobro, strDescripcionNuestroCobro, strFormaDePagoHabitual, strDivisa, strDivisa1, dblFactorCambioDeDivisaADivisa1, intDecimalesDivisa1, Vendedor, strCodigoValeRecibido, dsFactura, PagadoACuenta, PedidoSerie, PedidoNumero, PedidoAño, iDocOrigen, bIgnorarCartera, dsTablasRef, dttValeAImprimir, sMensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoCobrarOnlineAsync( _
                    ByVal IdClienteOfficePOS As Integer,  _
                    ByVal ValeRecibido As Boolean,  _
                    ByVal RecibosACancelar As System.Data.DataTable,  _
                    ByVal CodigoDeCliente As Long,  _
                    ByVal strCodigoValeEmitido As String,  _
                    ByVal TipoDeDocumento As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal FechaOperacion As Date,  _
                    ByVal SerieFacturas As String,  _
                    ByVal NumeroDocumento As Long,  _
                    ByVal intDecimalesDivisa As Integer,  _
                    ByVal strCodigoDevolucionAnticipo As String,  _
                    ByVal strDescripcionDevolucionAnticipo As String,  _
                    ByVal NumeroDeTienda As Long,  _
                    ByVal NumeroDeCaja As Long,  _
                    ByVal sTipoTienda As String,  _
                    ByVal ImporteTotalVenta As Double,  _
                    ByVal ImporteVales As Double,  _
                    ByVal ImporteCambioVales As Double,  _
                    ByVal ImporteACredito As Double,  _
                    ByVal ACredito As Boolean,  _
                    ByVal ValeEmitido As Boolean,  _
                    ByVal TipoDeDocumentoOrigen As String,  _
                    ByVal SerieDocumento As String,  _
                    ByVal strCodigoAnticipo As String,  _
                    ByVal strDescripcionAnticipo As String,  _
                    ByVal strCodigoNuestraFactura As String,  _
                    ByVal strDescripcionNuestraFactura As String,  _
                    ByVal strCodigoCredito As String,  _
                    ByVal strCodigoDevolucionACuenta As String,  _
                    ByVal strDescripcionDevolucionACuenta As String,  _
                    ByVal strCodigoNuestroCobro As String,  _
                    ByVal strDescripcionNuestroCobro As String,  _
                    ByVal strFormaDePagoHabitual As String,  _
                    ByVal strDivisa As String,  _
                    ByVal strDivisa1 As String,  _
                    ByVal dblFactorCambioDeDivisaADivisa1 As Double,  _
                    ByVal intDecimalesDivisa1 As Integer,  _
                    ByVal Vendedor As Integer,  _
                    ByVal strCodigoValeRecibido As String,  _
                    ByVal dsFactura As System.Data.DataSet,  _
                    ByVal PagadoACuenta As Double,  _
                    ByVal PedidoSerie As String,  _
                    ByVal PedidoNumero As Long,  _
                    ByVal PedidoAño As Integer,  _
                    ByVal iDocOrigen As Integer,  _
                    ByVal bIgnorarCartera As Boolean,  _
                    ByVal dsTablasRef As System.Data.DataSet,  _
                    ByVal dttValeAImprimir As System.Data.DataTable,  _
                    ByVal sMensajeError As String,  _
                    ByVal userState As Object)
            If (Me.ProcesoCobrarOnlineOperationCompleted Is Nothing) Then
                Me.ProcesoCobrarOnlineOperationCompleted = AddressOf Me.OnProcesoCobrarOnlineOperationCompleted
            End If
            Me.InvokeAsync("ProcesoCobrarOnline", New Object() {IdClienteOfficePOS, ValeRecibido, RecibosACancelar, CodigoDeCliente, strCodigoValeEmitido, TipoDeDocumento, TipoDocumento, FechaOperacion, SerieFacturas, NumeroDocumento, intDecimalesDivisa, strCodigoDevolucionAnticipo, strDescripcionDevolucionAnticipo, NumeroDeTienda, NumeroDeCaja, sTipoTienda, ImporteTotalVenta, ImporteVales, ImporteCambioVales, ImporteACredito, ACredito, ValeEmitido, TipoDeDocumentoOrigen, SerieDocumento, strCodigoAnticipo, strDescripcionAnticipo, strCodigoNuestraFactura, strDescripcionNuestraFactura, strCodigoCredito, strCodigoDevolucionACuenta, strDescripcionDevolucionACuenta, strCodigoNuestroCobro, strDescripcionNuestroCobro, strFormaDePagoHabitual, strDivisa, strDivisa1, dblFactorCambioDeDivisaADivisa1, intDecimalesDivisa1, Vendedor, strCodigoValeRecibido, dsFactura, PagadoACuenta, PedidoSerie, PedidoNumero, PedidoAño, iDocOrigen, bIgnorarCartera, dsTablasRef, dttValeAImprimir, sMensajeError}, Me.ProcesoCobrarOnlineOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoCobrarOnlineOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoCobrarOnlineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoCobrarOnlineCompleted(Me, New ProcesoCobrarOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmarMensajeRecibidoEnTienda", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConfirmarMensajeRecibidoEnTienda(ByVal IdClienteOfficePOS As Integer, ByVal iPos As Long) As String
            Dim results() As Object = Me.Invoke("ConfirmarMensajeRecibidoEnTienda", New Object() {IdClienteOfficePOS, iPos})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConfirmarMensajeRecibidoEnTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iPos As Long)
            Me.ConfirmarMensajeRecibidoEnTiendaAsync(IdClienteOfficePOS, iPos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConfirmarMensajeRecibidoEnTiendaAsync(ByVal IdClienteOfficePOS As Integer, ByVal iPos As Long, ByVal userState As Object)
            If (Me.ConfirmarMensajeRecibidoEnTiendaOperationCompleted Is Nothing) Then
                Me.ConfirmarMensajeRecibidoEnTiendaOperationCompleted = AddressOf Me.OnConfirmarMensajeRecibidoEnTiendaOperationCompleted
            End If
            Me.InvokeAsync("ConfirmarMensajeRecibidoEnTienda", New Object() {IdClienteOfficePOS, iPos}, Me.ConfirmarMensajeRecibidoEnTiendaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConfirmarMensajeRecibidoEnTiendaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConfirmarMensajeRecibidoEnTiendaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConfirmarMensajeRecibidoEnTiendaCompleted(Me, New ConfirmarMensajeRecibidoEnTiendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirMensajes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirMensajes(ByVal IdClienteOfficePOS As Integer, ByVal dsMensaje As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirMensajes", New Object() {IdClienteOfficePOS, dsMensaje})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirMensajesAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsMensaje As System.Data.DataSet)
            Me.TransferirMensajesAsync(IdClienteOfficePOS, dsMensaje, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirMensajesAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsMensaje As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirMensajesOperationCompleted Is Nothing) Then
                Me.TransferirMensajesOperationCompleted = AddressOf Me.OnTransferirMensajesOperationCompleted
            End If
            Me.InvokeAsync("TransferirMensajes", New Object() {IdClienteOfficePOS, dsMensaje}, Me.TransferirMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirMensajesCompleted(Me, New TransferirMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirMovimientosAlmacen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirMovimientosAlmacen(ByVal IdClienteOfficePOS As Integer, ByVal dsMov As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirMovimientosAlmacen", New Object() {IdClienteOfficePOS, dsMov})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirMovimientosAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsMov As System.Data.DataSet)
            Me.TransferirMovimientosAlmacenAsync(IdClienteOfficePOS, dsMov, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirMovimientosAlmacenAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsMov As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirMovimientosAlmacenOperationCompleted Is Nothing) Then
                Me.TransferirMovimientosAlmacenOperationCompleted = AddressOf Me.OnTransferirMovimientosAlmacenOperationCompleted
            End If
            Me.InvokeAsync("TransferirMovimientosAlmacen", New Object() {IdClienteOfficePOS, dsMov}, Me.TransferirMovimientosAlmacenOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirMovimientosAlmacenOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirMovimientosAlmacenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirMovimientosAlmacenCompleted(Me, New TransferirMovimientosAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirEstadisticaVentas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirEstadisticaVentas(ByVal IdClienteOfficePOS As Integer, ByVal dsEsta As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirEstadisticaVentas", New Object() {IdClienteOfficePOS, dsEsta})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirEstadisticaVentasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsEsta As System.Data.DataSet)
            Me.TransferirEstadisticaVentasAsync(IdClienteOfficePOS, dsEsta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirEstadisticaVentasAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsEsta As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirEstadisticaVentasOperationCompleted Is Nothing) Then
                Me.TransferirEstadisticaVentasOperationCompleted = AddressOf Me.OnTransferirEstadisticaVentasOperationCompleted
            End If
            Me.InvokeAsync("TransferirEstadisticaVentas", New Object() {IdClienteOfficePOS, dsEsta}, Me.TransferirEstadisticaVentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirEstadisticaVentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirEstadisticaVentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirEstadisticaVentasCompleted(Me, New TransferirEstadisticaVentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirDiarioCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirDiarioCaja(ByVal IdClienteOfficePOS As Integer, ByVal dsCaja As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirDiarioCaja", New Object() {IdClienteOfficePOS, dsCaja})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirDiarioCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsCaja As System.Data.DataSet)
            Me.TransferirDiarioCajaAsync(IdClienteOfficePOS, dsCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirDiarioCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsCaja As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirDiarioCajaOperationCompleted Is Nothing) Then
                Me.TransferirDiarioCajaOperationCompleted = AddressOf Me.OnTransferirDiarioCajaOperationCompleted
            End If
            Me.InvokeAsync("TransferirDiarioCaja", New Object() {IdClienteOfficePOS, dsCaja}, Me.TransferirDiarioCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirDiarioCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirDiarioCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirDiarioCajaCompleted(Me, New TransferirDiarioCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirInformacionAdicional", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirInformacionAdicional(ByVal IdClienteOfficePOS As Integer, ByVal dsInf As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirInformacionAdicional", New Object() {IdClienteOfficePOS, dsInf})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirInformacionAdicionalAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsInf As System.Data.DataSet)
            Me.TransferirInformacionAdicionalAsync(IdClienteOfficePOS, dsInf, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirInformacionAdicionalAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsInf As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirInformacionAdicionalOperationCompleted Is Nothing) Then
                Me.TransferirInformacionAdicionalOperationCompleted = AddressOf Me.OnTransferirInformacionAdicionalOperationCompleted
            End If
            Me.InvokeAsync("TransferirInformacionAdicional", New Object() {IdClienteOfficePOS, dsInf}, Me.TransferirInformacionAdicionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirInformacionAdicionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirInformacionAdicionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirInformacionAdicionalCompleted(Me, New TransferirInformacionAdicionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirMovimientosPuntos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirMovimientosPuntos(ByVal IdClienteOfficePOS As Integer, ByVal dsPuntos As System.Data.DataSet, ByVal FechaCaducidad As String) As String
            Dim results() As Object = Me.Invoke("TransferirMovimientosPuntos", New Object() {IdClienteOfficePOS, dsPuntos, FechaCaducidad})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirMovimientosPuntosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPuntos As System.Data.DataSet, ByVal FechaCaducidad As String)
            Me.TransferirMovimientosPuntosAsync(IdClienteOfficePOS, dsPuntos, FechaCaducidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirMovimientosPuntosAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsPuntos As System.Data.DataSet, ByVal FechaCaducidad As String, ByVal userState As Object)
            If (Me.TransferirMovimientosPuntosOperationCompleted Is Nothing) Then
                Me.TransferirMovimientosPuntosOperationCompleted = AddressOf Me.OnTransferirMovimientosPuntosOperationCompleted
            End If
            Me.InvokeAsync("TransferirMovimientosPuntos", New Object() {IdClienteOfficePOS, dsPuntos, FechaCaducidad}, Me.TransferirMovimientosPuntosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirMovimientosPuntosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirMovimientosPuntosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirMovimientosPuntosCompleted(Me, New TransferirMovimientosPuntosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirCintaDeControl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirCintaDeControl(ByVal IdClienteOfficePOS As Integer, ByVal dsCinta As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirCintaDeControl", New Object() {IdClienteOfficePOS, dsCinta})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirCintaDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsCinta As System.Data.DataSet)
            Me.TransferirCintaDeControlAsync(IdClienteOfficePOS, dsCinta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirCintaDeControlAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsCinta As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirCintaDeControlOperationCompleted Is Nothing) Then
                Me.TransferirCintaDeControlOperationCompleted = AddressOf Me.OnTransferirCintaDeControlOperationCompleted
            End If
            Me.InvokeAsync("TransferirCintaDeControl", New Object() {IdClienteOfficePOS, dsCinta}, Me.TransferirCintaDeControlOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirCintaDeControlOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirCintaDeControlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirCintaDeControlCompleted(Me, New TransferirCintaDeControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirControlHorario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirControlHorario(ByVal IdClienteOfficePOS As Integer, ByVal dsControl As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirControlHorario", New Object() {IdClienteOfficePOS, dsControl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirControlHorarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsControl As System.Data.DataSet)
            Me.TransferirControlHorarioAsync(IdClienteOfficePOS, dsControl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirControlHorarioAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsControl As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirControlHorarioOperationCompleted Is Nothing) Then
                Me.TransferirControlHorarioOperationCompleted = AddressOf Me.OnTransferirControlHorarioOperationCompleted
            End If
            Me.InvokeAsync("TransferirControlHorario", New Object() {IdClienteOfficePOS, dsControl}, Me.TransferirControlHorarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirControlHorarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirControlHorarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirControlHorarioCompleted(Me, New TransferirControlHorarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferirAuditoria", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferirAuditoria(ByVal IdClienteOfficePOS As Integer, ByVal dsAud As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("TransferirAuditoria", New Object() {IdClienteOfficePOS, dsAud})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferirAuditoriaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAud As System.Data.DataSet)
            Me.TransferirAuditoriaAsync(IdClienteOfficePOS, dsAud, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferirAuditoriaAsync(ByVal IdClienteOfficePOS As Integer, ByVal dsAud As System.Data.DataSet, ByVal userState As Object)
            If (Me.TransferirAuditoriaOperationCompleted Is Nothing) Then
                Me.TransferirAuditoriaOperationCompleted = AddressOf Me.OnTransferirAuditoriaOperationCompleted
            End If
            Me.InvokeAsync("TransferirAuditoria", New Object() {IdClienteOfficePOS, dsAud}, Me.TransferirAuditoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferirAuditoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferirAuditoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferirAuditoriaCompleted(Me, New TransferirAuditoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VersionWS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VersionWS() As Integer
            Dim results() As Object = Me.Invoke("VersionWS", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VersionWSAsync()
            Me.VersionWSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VersionWSAsync(ByVal userState As Object)
            If (Me.VersionWSOperationCompleted Is Nothing) Then
                Me.VersionWSOperationCompleted = AddressOf Me.OnVersionWSOperationCompleted
            End If
            Me.InvokeAsync("VersionWS", New Object(-1) {}, Me.VersionWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnVersionWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.VersionWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VersionWSCompleted(Me, New VersionWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FactorCambioDeDivisa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FactorCambioDeDivisa(ByVal IdClienteOfficePOS As Integer, ByVal DivisaOrigen As String, ByVal DivisaDestino As String) As Double
            Dim results() As Object = Me.Invoke("FactorCambioDeDivisa", New Object() {IdClienteOfficePOS, DivisaOrigen, DivisaDestino})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FactorCambioDeDivisaAsync(ByVal IdClienteOfficePOS As Integer, ByVal DivisaOrigen As String, ByVal DivisaDestino As String)
            Me.FactorCambioDeDivisaAsync(IdClienteOfficePOS, DivisaOrigen, DivisaDestino, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FactorCambioDeDivisaAsync(ByVal IdClienteOfficePOS As Integer, ByVal DivisaOrigen As String, ByVal DivisaDestino As String, ByVal userState As Object)
            If (Me.FactorCambioDeDivisaOperationCompleted Is Nothing) Then
                Me.FactorCambioDeDivisaOperationCompleted = AddressOf Me.OnFactorCambioDeDivisaOperationCompleted
            End If
            Me.InvokeAsync("FactorCambioDeDivisa", New Object() {IdClienteOfficePOS, DivisaOrigen, DivisaDestino}, Me.FactorCambioDeDivisaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFactorCambioDeDivisaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FactorCambioDeDivisaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FactorCambioDeDivisaCompleted(Me, New FactorCambioDeDivisaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerAlmacenTransitoSiTengoTratamiento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAlmacenTransitoSiTengoTratamiento(ByVal IdClienteOfficePOS As Integer, ByVal iAlmacen As Integer) As Integer
            Dim results() As Object = Me.Invoke("ObtenerAlmacenTransitoSiTengoTratamiento", New Object() {IdClienteOfficePOS, iAlmacen})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAlmacenTransitoSiTengoTratamientoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iAlmacen As Integer)
            Me.ObtenerAlmacenTransitoSiTengoTratamientoAsync(IdClienteOfficePOS, iAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAlmacenTransitoSiTengoTratamientoAsync(ByVal IdClienteOfficePOS As Integer, ByVal iAlmacen As Integer, ByVal userState As Object)
            If (Me.ObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted Is Nothing) Then
                Me.ObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted = AddressOf Me.OnObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAlmacenTransitoSiTengoTratamiento", New Object() {IdClienteOfficePOS, iAlmacen}, Me.ObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAlmacenTransitoSiTengoTratamientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAlmacenTransitoSiTengoTratamientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAlmacenTransitoSiTengoTratamientoCompleted(Me, New ObtenerAlmacenTransitoSiTengoTratamientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ComprobarCredenciales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ComprobarCredenciales(ByVal IdClienteOfficePOS As Integer) As String
            Dim results() As Object = Me.Invoke("ComprobarCredenciales", New Object() {IdClienteOfficePOS})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ComprobarCredencialesAsync(ByVal IdClienteOfficePOS As Integer)
            Me.ComprobarCredencialesAsync(IdClienteOfficePOS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ComprobarCredencialesAsync(ByVal IdClienteOfficePOS As Integer, ByVal userState As Object)
            If (Me.ComprobarCredencialesOperationCompleted Is Nothing) Then
                Me.ComprobarCredencialesOperationCompleted = AddressOf Me.OnComprobarCredencialesOperationCompleted
            End If
            Me.InvokeAsync("ComprobarCredenciales", New Object() {IdClienteOfficePOS}, Me.ComprobarCredencialesOperationCompleted, userState)
        End Sub
        
        Private Sub OnComprobarCredencialesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ComprobarCredencialesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ComprobarCredencialesCompleted(Me, New ComprobarCredencialesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerValor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerValor(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As String
            Dim results() As Object = Me.Invoke("ObtenerValor", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerValorAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.ObtenerValorAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerValorAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ObtenerValorOperationCompleted Is Nothing) Then
                Me.ObtenerValorOperationCompleted = AddressOf Me.OnObtenerValorOperationCompleted
            End If
            Me.InvokeAsync("ObtenerValor", New Object() {IdClienteOfficePOS, sSQL}, Me.ObtenerValorOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerValorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerValorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerValorCompleted(Me, New ObtenerValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EjecutarQuery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EjecutarQuery(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.Invoke("EjecutarQuery", New Object() {IdClienteOfficePOS, sSQL})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutarQueryAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.EjecutarQueryAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutarQueryAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.EjecutarQueryOperationCompleted Is Nothing) Then
                Me.EjecutarQueryOperationCompleted = AddressOf Me.OnEjecutarQueryOperationCompleted
            End If
            Me.InvokeAsync("EjecutarQuery", New Object() {IdClienteOfficePOS, sSQL}, Me.EjecutarQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjecutarQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjecutarQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjecutarQueryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EjecutarQueryParam", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EjecutarQueryParam(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal param1 As SqlParameter)
            Me.Invoke("EjecutarQueryParam", New Object() {IdClienteOfficePOS, sSQL, param1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutarQueryParamAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal param1 As SqlParameter)
            Me.EjecutarQueryParamAsync(IdClienteOfficePOS, sSQL, param1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutarQueryParamAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal param1 As SqlParameter, ByVal userState As Object)
            If (Me.EjecutarQueryParamOperationCompleted Is Nothing) Then
                Me.EjecutarQueryParamOperationCompleted = AddressOf Me.OnEjecutarQueryParamOperationCompleted
            End If
            Me.InvokeAsync("EjecutarQueryParam", New Object() {IdClienteOfficePOS, sSQL, param1}, Me.EjecutarQueryParamOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjecutarQueryParamOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjecutarQueryParamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjecutarQueryParamCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Obtener", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Obtener(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Obtener", New Object() {IdClienteOfficePOS, sSQL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String)
            Me.ObtenerAsync(IdClienteOfficePOS, sSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAsync(ByVal IdClienteOfficePOS As Integer, ByVal sSQL As String, ByVal userState As Object)
            If (Me.ObtenerOperationCompleted Is Nothing) Then
                Me.ObtenerOperationCompleted = AddressOf Me.OnObtenerOperationCompleted
            End If
            Me.InvokeAsync("Obtener", New Object() {IdClienteOfficePOS, sSQL}, Me.ObtenerOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCompleted(Me, New ObtenerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPLS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ObtenerPLS(ByVal IdClienteOfficePOS As Integer, ByVal CodigoCliente As Integer, ByRef dtt As System.Data.DataTable)
            Dim results() As Object = Me.Invoke("ObtenerPLS", New Object() {IdClienteOfficePOS, CodigoCliente, dtt})
            dtt = CType(results(0),System.Data.DataTable)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPLSAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoCliente As Integer, ByVal dtt As System.Data.DataTable)
            Me.ObtenerPLSAsync(IdClienteOfficePOS, CodigoCliente, dtt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPLSAsync(ByVal IdClienteOfficePOS As Integer, ByVal CodigoCliente As Integer, ByVal dtt As System.Data.DataTable, ByVal userState As Object)
            If (Me.ObtenerPLSOperationCompleted Is Nothing) Then
                Me.ObtenerPLSOperationCompleted = AddressOf Me.OnObtenerPLSOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPLS", New Object() {IdClienteOfficePOS, CodigoCliente, dtt}, Me.ObtenerPLSOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPLSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPLSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPLSCompleted(Me, New ObtenerPLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MatarCola", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MatarCola()
            Me.Invoke("MatarCola", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MatarColaAsync()
            Me.MatarColaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MatarColaAsync(ByVal userState As Object)
            If (Me.MatarColaOperationCompleted Is Nothing) Then
                Me.MatarColaOperationCompleted = AddressOf Me.OnMatarColaOperationCompleted
            End If
            Me.InvokeAsync("MatarCola", New Object(-1) {}, Me.MatarColaOperationCompleted, userState)
        End Sub
        
        Private Sub OnMatarColaOperationCompleted(ByVal arg As Object)
            If (Not (Me.MatarColaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MatarColaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarMailDesdeOfficePOS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarMailDesdeOfficePOS(ByVal sPara As String, ByVal sAsunto As String, ByVal sBody As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("EnviarMailDesdeOfficePOS", New Object() {sPara, sAsunto, sBody, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarMailDesdeOfficePOSAsync(ByVal sPara As String, ByVal sAsunto As String, ByVal sBody As String, ByVal sMsg As String)
            Me.EnviarMailDesdeOfficePOSAsync(sPara, sAsunto, sBody, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarMailDesdeOfficePOSAsync(ByVal sPara As String, ByVal sAsunto As String, ByVal sBody As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.EnviarMailDesdeOfficePOSOperationCompleted Is Nothing) Then
                Me.EnviarMailDesdeOfficePOSOperationCompleted = AddressOf Me.OnEnviarMailDesdeOfficePOSOperationCompleted
            End If
            Me.InvokeAsync("EnviarMailDesdeOfficePOS", New Object() {sPara, sAsunto, sBody, sMsg}, Me.EnviarMailDesdeOfficePOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarMailDesdeOfficePOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarMailDesdeOfficePOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarMailDesdeOfficePOSCompleted(Me, New EnviarMailDesdeOfficePOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPasswordOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ObtenerPasswordOfficePos(ByVal strUsuario As String, ByRef sMail As String, ByRef sClave As String, ByRef sMsg As String)
            Dim results() As Object = Me.Invoke("ObtenerPasswordOfficePos", New Object() {strUsuario, sMail, sClave, sMsg})
            sMail = CType(results(0),String)
            sClave = CType(results(1),String)
            sMsg = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPasswordOfficePosAsync(ByVal strUsuario As String, ByVal sMail As String, ByVal sClave As String, ByVal sMsg As String)
            Me.ObtenerPasswordOfficePosAsync(strUsuario, sMail, sClave, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPasswordOfficePosAsync(ByVal strUsuario As String, ByVal sMail As String, ByVal sClave As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerPasswordOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerPasswordOfficePosOperationCompleted = AddressOf Me.OnObtenerPasswordOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPasswordOfficePos", New Object() {strUsuario, sMail, sClave, sMsg}, Me.ObtenerPasswordOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPasswordOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPasswordOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPasswordOfficePosCompleted(Me, New ObtenerPasswordOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("VgeCredencialesUsuarioValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CambioDeAño", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambioDeAño(ByVal IdClienteOfficePOS As Integer, ByVal bNuevaNumeracion As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CambioDeAño", New Object() {IdClienteOfficePOS, bNuevaNumeracion, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambioDeAñoAsync(ByVal IdClienteOfficePOS As Integer, ByVal bNuevaNumeracion As Boolean, ByVal sMsg As String)
            Me.CambioDeAñoAsync(IdClienteOfficePOS, bNuevaNumeracion, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambioDeAñoAsync(ByVal IdClienteOfficePOS As Integer, ByVal bNuevaNumeracion As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CambioDeAñoOperationCompleted Is Nothing) Then
                Me.CambioDeAñoOperationCompleted = AddressOf Me.OnCambioDeAñoOperationCompleted
            End If
            Me.InvokeAsync("CambioDeAño", New Object() {IdClienteOfficePOS, bNuevaNumeracion, sMsg}, Me.CambioDeAñoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambioDeAñoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambioDeAñoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambioDeAñoCompleted(Me, New CambioDeAñoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivarTiendaCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActivarTiendaCaja(ByVal IdClienteOfficePOS As Integer, ByVal idTienda As Integer, ByVal IdCaja As Integer, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("ActivarTiendaCaja", New Object() {IdClienteOfficePOS, idTienda, IdCaja, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActivarTiendaCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal idTienda As Integer, ByVal IdCaja As Integer, ByVal sMsg As String)
            Me.ActivarTiendaCajaAsync(IdClienteOfficePOS, idTienda, IdCaja, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivarTiendaCajaAsync(ByVal IdClienteOfficePOS As Integer, ByVal idTienda As Integer, ByVal IdCaja As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ActivarTiendaCajaOperationCompleted Is Nothing) Then
                Me.ActivarTiendaCajaOperationCompleted = AddressOf Me.OnActivarTiendaCajaOperationCompleted
            End If
            Me.InvokeAsync("ActivarTiendaCaja", New Object() {IdClienteOfficePOS, idTienda, IdCaja, sMsg}, Me.ActivarTiendaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivarTiendaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivarTiendaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivarTiendaCajaCompleted(Me, New ActivarTiendaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTiendasLibresOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTiendasLibresOfficePos(ByVal IdClienteOfficePOS As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTiendasLibresOfficePos", New Object() {IdClienteOfficePOS, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasLibresOfficePosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sMsg As String)
            Me.ObtenerTiendasLibresOfficePosAsync(IdClienteOfficePOS, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTiendasLibresOfficePosAsync(ByVal IdClienteOfficePOS As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerTiendasLibresOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerTiendasLibresOfficePosOperationCompleted = AddressOf Me.OnObtenerTiendasLibresOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTiendasLibresOfficePos", New Object() {IdClienteOfficePOS, sMsg}, Me.ObtenerTiendasLibresOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTiendasLibresOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTiendasLibresOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTiendasLibresOfficePosCompleted(Me, New ObtenerTiendasLibresOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCajasLibresOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCajasLibresOfficePos(ByVal IdClienteOfficePOS As Integer, ByVal IdTienda As Integer, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCajasLibresOfficePos", New Object() {IdClienteOfficePOS, IdTienda, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajasLibresOfficePosAsync(ByVal IdClienteOfficePOS As Integer, ByVal IdTienda As Integer, ByVal sMsg As String)
            Me.ObtenerCajasLibresOfficePosAsync(IdClienteOfficePOS, IdTienda, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajasLibresOfficePosAsync(ByVal IdClienteOfficePOS As Integer, ByVal IdTienda As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.ObtenerCajasLibresOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerCajasLibresOfficePosOperationCompleted = AddressOf Me.OnObtenerCajasLibresOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCajasLibresOfficePos", New Object() {IdClienteOfficePOS, IdTienda, sMsg}, Me.ObtenerCajasLibresOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCajasLibresOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCajasLibresOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCajasLibresOfficePosCompleted(Me, New ObtenerCajasLibresOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutentificacionUsuarioOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutentificacionUsuarioOfficePos(ByVal strUsuario As String, ByVal strClave As String, ByVal IP As String, ByRef SessionID As String, ByRef iCliente As Integer, ByRef sNombreUsuario As String, ByRef sMsg As String) As Integer
            Dim results() As Object = Me.Invoke("AutentificacionUsuarioOfficePos", New Object() {strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sMsg})
            SessionID = CType(results(1),String)
            iCliente = CType(results(2),Integer)
            sNombreUsuario = CType(results(3),String)
            sMsg = CType(results(4),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutentificacionUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal IP As String, ByVal SessionID As String, ByVal iCliente As Integer, ByVal sNombreUsuario As String, ByVal sMsg As String)
            Me.AutentificacionUsuarioOfficePosAsync(strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutentificacionUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal IP As String, ByVal SessionID As String, ByVal iCliente As Integer, ByVal sNombreUsuario As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.AutentificacionUsuarioOfficePosOperationCompleted Is Nothing) Then
                Me.AutentificacionUsuarioOfficePosOperationCompleted = AddressOf Me.OnAutentificacionUsuarioOfficePosOperationCompleted
            End If
            Me.InvokeAsync("AutentificacionUsuarioOfficePos", New Object() {strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sMsg}, Me.AutentificacionUsuarioOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutentificacionUsuarioOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutentificacionUsuarioOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutentificacionUsuarioOfficePosCompleted(Me, New AutentificacionUsuarioOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PermisosUsuarioOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PermisosUsuarioOfficePos(ByVal strUsuario As String, ByVal strClave As String, ByRef sMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("PermisosUsuarioOfficePos", New Object() {strUsuario, strClave, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PermisosUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sMsg As String)
            Me.PermisosUsuarioOfficePosAsync(strUsuario, strClave, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PermisosUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.PermisosUsuarioOfficePosOperationCompleted Is Nothing) Then
                Me.PermisosUsuarioOfficePosOperationCompleted = AddressOf Me.OnPermisosUsuarioOfficePosOperationCompleted
            End If
            Me.InvokeAsync("PermisosUsuarioOfficePos", New Object() {strUsuario, strClave, sMsg}, Me.PermisosUsuarioOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPermisosUsuarioOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.PermisosUsuarioOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PermisosUsuarioOfficePosCompleted(Me, New PermisosUsuarioOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarObservacionesUsuarioOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarObservacionesUsuarioOfficePos(ByVal strUsuario As String, ByVal strClave As String, ByVal sObs As String) As String
            Dim results() As Object = Me.Invoke("ActualizarObservacionesUsuarioOfficePos", New Object() {strUsuario, strClave, sObs})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarObservacionesUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sObs As String)
            Me.ActualizarObservacionesUsuarioOfficePosAsync(strUsuario, strClave, sObs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarObservacionesUsuarioOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sObs As String, ByVal userState As Object)
            If (Me.ActualizarObservacionesUsuarioOfficePosOperationCompleted Is Nothing) Then
                Me.ActualizarObservacionesUsuarioOfficePosOperationCompleted = AddressOf Me.OnActualizarObservacionesUsuarioOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ActualizarObservacionesUsuarioOfficePos", New Object() {strUsuario, strClave, sObs}, Me.ActualizarObservacionesUsuarioOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarObservacionesUsuarioOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarObservacionesUsuarioOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarObservacionesUsuarioOfficePosCompleted(Me, New ActualizarObservacionesUsuarioOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerFechaVencimientoContrato", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFechaVencimientoContrato(ByVal iCliente As Integer) As String
            Dim results() As Object = Me.Invoke("ObtenerFechaVencimientoContrato", New Object() {iCliente})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFechaVencimientoContratoAsync(ByVal iCliente As Integer)
            Me.ObtenerFechaVencimientoContratoAsync(iCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFechaVencimientoContratoAsync(ByVal iCliente As Integer, ByVal userState As Object)
            If (Me.ObtenerFechaVencimientoContratoOperationCompleted Is Nothing) Then
                Me.ObtenerFechaVencimientoContratoOperationCompleted = AddressOf Me.OnObtenerFechaVencimientoContratoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFechaVencimientoContrato", New Object() {iCliente}, Me.ObtenerFechaVencimientoContratoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFechaVencimientoContratoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFechaVencimientoContratoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFechaVencimientoContratoCompleted(Me, New ObtenerFechaVencimientoContratoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContratoVigente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ContratoVigente(ByVal iCliente As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ContratoVigente", New Object() {iCliente})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ContratoVigenteAsync(ByVal iCliente As Integer)
            Me.ContratoVigenteAsync(iCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ContratoVigenteAsync(ByVal iCliente As Integer, ByVal userState As Object)
            If (Me.ContratoVigenteOperationCompleted Is Nothing) Then
                Me.ContratoVigenteOperationCompleted = AddressOf Me.OnContratoVigenteOperationCompleted
            End If
            Me.InvokeAsync("ContratoVigente", New Object() {iCliente}, Me.ContratoVigenteOperationCompleted, userState)
        End Sub
        
        Private Sub OnContratoVigenteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ContratoVigenteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ContratoVigenteCompleted(Me, New ContratoVigenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VigentePorFechas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VigentePorFechas(ByVal iCliente As Integer) As Boolean
            Dim results() As Object = Me.Invoke("VigentePorFechas", New Object() {iCliente})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VigentePorFechasAsync(ByVal iCliente As Integer)
            Me.VigentePorFechasAsync(iCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VigentePorFechasAsync(ByVal iCliente As Integer, ByVal userState As Object)
            If (Me.VigentePorFechasOperationCompleted Is Nothing) Then
                Me.VigentePorFechasOperationCompleted = AddressOf Me.OnVigentePorFechasOperationCompleted
            End If
            Me.InvokeAsync("VigentePorFechas", New Object() {iCliente}, Me.VigentePorFechasOperationCompleted, userState)
        End Sub
        
        Private Sub OnVigentePorFechasOperationCompleted(ByVal arg As Object)
            If (Not (Me.VigentePorFechasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VigentePorFechasCompleted(Me, New VigentePorFechasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoClienteOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoClienteOfficePos(ByVal iCliente As Integer) As Integer
            Dim results() As Object = Me.Invoke("ObtenerTipoClienteOfficePos", New Object() {iCliente})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoClienteOfficePosAsync(ByVal iCliente As Integer)
            Me.ObtenerTipoClienteOfficePosAsync(iCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoClienteOfficePosAsync(ByVal iCliente As Integer, ByVal userState As Object)
            If (Me.ObtenerTipoClienteOfficePosOperationCompleted Is Nothing) Then
                Me.ObtenerTipoClienteOfficePosOperationCompleted = AddressOf Me.OnObtenerTipoClienteOfficePosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoClienteOfficePos", New Object() {iCliente}, Me.ObtenerTipoClienteOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoClienteOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoClienteOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoClienteOfficePosCompleted(Me, New ObtenerTipoClienteOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutentificacionOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutentificacionOfficePos( _
                    ByVal strUsuario As String,  _
                    ByVal strClave As String,  _
                    ByVal IP As String,  _
                    ByRef SessionID As String,  _
                    ByRef iCliente As Integer,  _
                    ByRef sNombreUsuario As String,  _
                    ByRef sConexionUrl As String,  _
                    ByRef sIdioma As String,  _
                    ByRef sSimboloMonetario As String,  _
                    ByRef sFormatoMoneda As String,  _
                    ByRef sSeparadorMiles As String,  _
                    ByRef sSeparadorDecimales As String,  _
                    ByRef sFormatoFecha As String,  _
                    ByRef iDecimalesImporte As Integer,  _
                    ByRef iDecimalesCantidad As Integer,  _
                    ByRef sMsg As String) As Integer
            Dim results() As Object = Me.Invoke("AutentificacionOfficePos", New Object() {strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sConexionUrl, sIdioma, sSimboloMonetario, sFormatoMoneda, sSeparadorMiles, sSeparadorDecimales, sFormatoFecha, iDecimalesImporte, iDecimalesCantidad, sMsg})
            SessionID = CType(results(1),String)
            iCliente = CType(results(2),Integer)
            sNombreUsuario = CType(results(3),String)
            sConexionUrl = CType(results(4),String)
            sIdioma = CType(results(5),String)
            sSimboloMonetario = CType(results(6),String)
            sFormatoMoneda = CType(results(7),String)
            sSeparadorMiles = CType(results(8),String)
            sSeparadorDecimales = CType(results(9),String)
            sFormatoFecha = CType(results(10),String)
            iDecimalesImporte = CType(results(11),Integer)
            iDecimalesCantidad = CType(results(12),Integer)
            sMsg = CType(results(13),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutentificacionOfficePosAsync( _
                    ByVal strUsuario As String,  _
                    ByVal strClave As String,  _
                    ByVal IP As String,  _
                    ByVal SessionID As String,  _
                    ByVal iCliente As Integer,  _
                    ByVal sNombreUsuario As String,  _
                    ByVal sConexionUrl As String,  _
                    ByVal sIdioma As String,  _
                    ByVal sSimboloMonetario As String,  _
                    ByVal sFormatoMoneda As String,  _
                    ByVal sSeparadorMiles As String,  _
                    ByVal sSeparadorDecimales As String,  _
                    ByVal sFormatoFecha As String,  _
                    ByVal iDecimalesImporte As Integer,  _
                    ByVal iDecimalesCantidad As Integer,  _
                    ByVal sMsg As String)
            Me.AutentificacionOfficePosAsync(strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sConexionUrl, sIdioma, sSimboloMonetario, sFormatoMoneda, sSeparadorMiles, sSeparadorDecimales, sFormatoFecha, iDecimalesImporte, iDecimalesCantidad, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutentificacionOfficePosAsync( _
                    ByVal strUsuario As String,  _
                    ByVal strClave As String,  _
                    ByVal IP As String,  _
                    ByVal SessionID As String,  _
                    ByVal iCliente As Integer,  _
                    ByVal sNombreUsuario As String,  _
                    ByVal sConexionUrl As String,  _
                    ByVal sIdioma As String,  _
                    ByVal sSimboloMonetario As String,  _
                    ByVal sFormatoMoneda As String,  _
                    ByVal sSeparadorMiles As String,  _
                    ByVal sSeparadorDecimales As String,  _
                    ByVal sFormatoFecha As String,  _
                    ByVal iDecimalesImporte As Integer,  _
                    ByVal iDecimalesCantidad As Integer,  _
                    ByVal sMsg As String,  _
                    ByVal userState As Object)
            If (Me.AutentificacionOfficePosOperationCompleted Is Nothing) Then
                Me.AutentificacionOfficePosOperationCompleted = AddressOf Me.OnAutentificacionOfficePosOperationCompleted
            End If
            Me.InvokeAsync("AutentificacionOfficePos", New Object() {strUsuario, strClave, IP, SessionID, iCliente, sNombreUsuario, sConexionUrl, sIdioma, sSimboloMonetario, sFormatoMoneda, sSeparadorMiles, sSeparadorDecimales, sFormatoFecha, iDecimalesImporte, iDecimalesCantidad, sMsg}, Me.AutentificacionOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutentificacionOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutentificacionOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutentificacionOfficePosCompleted(Me, New AutentificacionOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CerrarSesionesAbiertasOfficePos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CerrarSesionesAbiertasOfficePos(ByVal strUsuario As String, ByVal strClave As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CerrarSesionesAbiertasOfficePos", New Object() {strUsuario, strClave, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CerrarSesionesAbiertasOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sMsg As String)
            Me.CerrarSesionesAbiertasOfficePosAsync(strUsuario, strClave, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CerrarSesionesAbiertasOfficePosAsync(ByVal strUsuario As String, ByVal strClave As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CerrarSesionesAbiertasOfficePosOperationCompleted Is Nothing) Then
                Me.CerrarSesionesAbiertasOfficePosOperationCompleted = AddressOf Me.OnCerrarSesionesAbiertasOfficePosOperationCompleted
            End If
            Me.InvokeAsync("CerrarSesionesAbiertasOfficePos", New Object() {strUsuario, strClave, sMsg}, Me.CerrarSesionesAbiertasOfficePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCerrarSesionesAbiertasOfficePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CerrarSesionesAbiertasOfficePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CerrarSesionesAbiertasOfficePosCompleted(Me, New CerrarSesionesAbiertasOfficePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SesionActiva", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SesionActiva(ByVal strUsuario As String, ByVal strSessionID As String, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("SesionActiva", New Object() {strUsuario, strSessionID, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SesionActivaAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String)
            Me.SesionActivaAsync(strUsuario, strSessionID, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SesionActivaAsync(ByVal strUsuario As String, ByVal strSessionID As String, ByVal sMsg As String, ByVal userState As Object)
            If (Me.SesionActivaOperationCompleted Is Nothing) Then
                Me.SesionActivaOperationCompleted = AddressOf Me.OnSesionActivaOperationCompleted
            End If
            Me.InvokeAsync("SesionActiva", New Object() {strUsuario, strSessionID, sMsg}, Me.SesionActivaOperationCompleted, userState)
        End Sub
        
        Private Sub OnSesionActivaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SesionActivaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SesionActivaCompleted(Me, New SesionActivaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealizarCopiaSeguridad", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RealizarCopiaSeguridad(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("RealizarCopiaSeguridad", New Object() {iCliente, bCompleta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String)
            Me.RealizarCopiaSeguridadAsync(iCliente, bCompleta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.RealizarCopiaSeguridadOperationCompleted Is Nothing) Then
                Me.RealizarCopiaSeguridadOperationCompleted = AddressOf Me.OnRealizarCopiaSeguridadOperationCompleted
            End If
            Me.InvokeAsync("RealizarCopiaSeguridad", New Object() {iCliente, bCompleta, sMsg}, Me.RealizarCopiaSeguridadOperationCompleted, userState)
        End Sub
        
        Private Sub OnRealizarCopiaSeguridadOperationCompleted(ByVal arg As Object)
            If (Not (Me.RealizarCopiaSeguridadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RealizarCopiaSeguridadCompleted(Me, New RealizarCopiaSeguridadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearBaseDatosCompact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearBaseDatosCompact(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CrearBaseDatosCompact", New Object() {iCliente, bCompleta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearBaseDatosCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String)
            Me.CrearBaseDatosCompactAsync(iCliente, bCompleta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearBaseDatosCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CrearBaseDatosCompactOperationCompleted Is Nothing) Then
                Me.CrearBaseDatosCompactOperationCompleted = AddressOf Me.OnCrearBaseDatosCompactOperationCompleted
            End If
            Me.InvokeAsync("CrearBaseDatosCompact", New Object() {iCliente, bCompleta, sMsg}, Me.CrearBaseDatosCompactOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearBaseDatosCompactOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearBaseDatosCompactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearBaseDatosCompactCompleted(Me, New CrearBaseDatosCompactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CumplimentarDatosCompact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CumplimentarDatosCompact(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal iNivel As Integer, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CumplimentarDatosCompact", New Object() {iCliente, bCompleta, iNivel, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CumplimentarDatosCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal iNivel As Integer, ByVal sMsg As String)
            Me.CumplimentarDatosCompactAsync(iCliente, bCompleta, iNivel, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CumplimentarDatosCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal iNivel As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CumplimentarDatosCompactOperationCompleted Is Nothing) Then
                Me.CumplimentarDatosCompactOperationCompleted = AddressOf Me.OnCumplimentarDatosCompactOperationCompleted
            End If
            Me.InvokeAsync("CumplimentarDatosCompact", New Object() {iCliente, bCompleta, iNivel, sMsg}, Me.CumplimentarDatosCompactOperationCompleted, userState)
        End Sub
        
        Private Sub OnCumplimentarDatosCompactOperationCompleted(ByVal arg As Object)
            If (Not (Me.CumplimentarDatosCompactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CumplimentarDatosCompactCompleted(Me, New CumplimentarDatosCompactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompactarDatosCompact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CompactarDatosCompact(ByVal iCliente As Integer, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("CompactarDatosCompact", New Object() {iCliente, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CompactarDatosCompactAsync(ByVal iCliente As Integer, ByVal sMsg As String)
            Me.CompactarDatosCompactAsync(iCliente, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CompactarDatosCompactAsync(ByVal iCliente As Integer, ByVal sMsg As String, ByVal userState As Object)
            If (Me.CompactarDatosCompactOperationCompleted Is Nothing) Then
                Me.CompactarDatosCompactOperationCompleted = AddressOf Me.OnCompactarDatosCompactOperationCompleted
            End If
            Me.InvokeAsync("CompactarDatosCompact", New Object() {iCliente, sMsg}, Me.CompactarDatosCompactOperationCompleted, userState)
        End Sub
        
        Private Sub OnCompactarDatosCompactOperationCompleted(ByVal arg As Object)
            If (Not (Me.CompactarDatosCompactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CompactarDatosCompactCompleted(Me, New CompactarDatosCompactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealizarCopiaSeguridadCompact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RealizarCopiaSeguridadCompact(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("RealizarCopiaSeguridadCompact", New Object() {iCliente, bCompleta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String)
            Me.RealizarCopiaSeguridadCompactAsync(iCliente, bCompleta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCompactAsync(ByVal iCliente As Integer, ByVal bCompleta As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.RealizarCopiaSeguridadCompactOperationCompleted Is Nothing) Then
                Me.RealizarCopiaSeguridadCompactOperationCompleted = AddressOf Me.OnRealizarCopiaSeguridadCompactOperationCompleted
            End If
            Me.InvokeAsync("RealizarCopiaSeguridadCompact", New Object() {iCliente, bCompleta, sMsg}, Me.RealizarCopiaSeguridadCompactOperationCompleted, userState)
        End Sub
        
        Private Sub OnRealizarCopiaSeguridadCompactOperationCompleted(ByVal arg As Object)
            If (Not (Me.RealizarCopiaSeguridadCompactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RealizarCopiaSeguridadCompactCompleted(Me, New RealizarCopiaSeguridadCompactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealizarCopiaSeguridadCompactStandard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RealizarCopiaSeguridadCompactStandard(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("RealizarCopiaSeguridadCompactStandard", New Object() {sNumSerie, bCompleta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCompactStandardAsync(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByVal sMsg As String)
            Me.RealizarCopiaSeguridadCompactStandardAsync(sNumSerie, bCompleta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCompactStandardAsync(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.RealizarCopiaSeguridadCompactStandardOperationCompleted Is Nothing) Then
                Me.RealizarCopiaSeguridadCompactStandardOperationCompleted = AddressOf Me.OnRealizarCopiaSeguridadCompactStandardOperationCompleted
            End If
            Me.InvokeAsync("RealizarCopiaSeguridadCompactStandard", New Object() {sNumSerie, bCompleta, sMsg}, Me.RealizarCopiaSeguridadCompactStandardOperationCompleted, userState)
        End Sub
        
        Private Sub OnRealizarCopiaSeguridadCompactStandardOperationCompleted(ByVal arg As Object)
            If (Not (Me.RealizarCopiaSeguridadCompactStandardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RealizarCopiaSeguridadCompactStandardCompleted(Me, New RealizarCopiaSeguridadCompactStandardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealizarCopiaSeguridadCentral", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RealizarCopiaSeguridadCentral(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByRef sMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("RealizarCopiaSeguridadCentral", New Object() {sNumSerie, bCompleta, sMsg})
            sMsg = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCentralAsync(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByVal sMsg As String)
            Me.RealizarCopiaSeguridadCentralAsync(sNumSerie, bCompleta, sMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RealizarCopiaSeguridadCentralAsync(ByVal sNumSerie As String, ByVal bCompleta As Boolean, ByVal sMsg As String, ByVal userState As Object)
            If (Me.RealizarCopiaSeguridadCentralOperationCompleted Is Nothing) Then
                Me.RealizarCopiaSeguridadCentralOperationCompleted = AddressOf Me.OnRealizarCopiaSeguridadCentralOperationCompleted
            End If
            Me.InvokeAsync("RealizarCopiaSeguridadCentral", New Object() {sNumSerie, bCompleta, sMsg}, Me.RealizarCopiaSeguridadCentralOperationCompleted, userState)
        End Sub
        
        Private Sub OnRealizarCopiaSeguridadCentralOperationCompleted(ByVal arg As Object)
            If (Not (Me.RealizarCopiaSeguridadCentralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RealizarCopiaSeguridadCentralCompleted(Me, New RealizarCopiaSeguridadCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class VgeCredencialesUsuario
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usuarioField As String
        
        Private passwordField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<comentarios/>
        Public Property Usuario() As String
            Get
                Return Me.usuarioField
            End Get
            Set
                Me.usuarioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(DbParameter)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SqlParameter)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public MustInherit Class MarshalByRefObject
    End Class
    
    '''<comentarios/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(SqlParameter)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public MustInherit Class DbParameter
        Inherits MarshalByRefObject
        
        Private dbTypeField As DbType
        
        Private directionField As ParameterDirection
        
        Private isNullableField As Boolean
        
        Private parameterNameField As String
        
        Private sizeField As Integer
        
        Private sourceColumnField As String
        
        Private sourceColumnNullMappingField As Boolean
        
        Private sourceVersionField As DataRowVersion
        
        Private valueField As Object
        
        Public Sub New()
            MyBase.New
            Me.directionField = ParameterDirection.Input
            Me.parameterNameField = ""
            Me.sourceColumnField = ""
            Me.sourceColumnNullMappingField = false
            Me.sourceVersionField = DataRowVersion.Current
        End Sub
        
        '''<comentarios/>
        Public Property DbType() As DbType
            Get
                Return Me.dbTypeField
            End Get
            Set
                Me.dbTypeField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute(ParameterDirection.Input)>  _
        Public Property Direction() As ParameterDirection
            Get
                Return Me.directionField
            End Get
            Set
                Me.directionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IsNullable() As Boolean
            Get
                Return Me.isNullableField
            End Get
            Set
                Me.isNullableField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute("")>  _
        Public Property ParameterName() As String
            Get
                Return Me.parameterNameField
            End Get
            Set
                Me.parameterNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Size() As Integer
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute("")>  _
        Public Property SourceColumn() As String
            Get
                Return Me.sourceColumnField
            End Get
            Set
                Me.sourceColumnField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute(false)>  _
        Public Property SourceColumnNullMapping() As Boolean
            Get
                Return Me.sourceColumnNullMappingField
            End Get
            Set
                Me.sourceColumnNullMappingField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute(DataRowVersion.Current)>  _
        Public Property SourceVersion() As DataRowVersion
            Get
                Return Me.sourceVersionField
            End Get
            Set
                Me.sourceVersionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DbType
        
        '''<comentarios/>
        AnsiString
        
        '''<comentarios/>
        Binary
        
        '''<comentarios/>
        [Byte]
        
        '''<comentarios/>
        [Boolean]
        
        '''<comentarios/>
        Currency
        
        '''<comentarios/>
        [Date]
        
        '''<comentarios/>
        DateTime
        
        '''<comentarios/>
        [Decimal]
        
        '''<comentarios/>
        [Double]
        
        '''<comentarios/>
        Guid
        
        '''<comentarios/>
        Int16
        
        '''<comentarios/>
        Int32
        
        '''<comentarios/>
        Int64
        
        '''<comentarios/>
        [Object]
        
        '''<comentarios/>
        [SByte]
        
        '''<comentarios/>
        [Single]
        
        '''<comentarios/>
        [String]
        
        '''<comentarios/>
        Time
        
        '''<comentarios/>
        UInt16
        
        '''<comentarios/>
        UInt32
        
        '''<comentarios/>
        UInt64
        
        '''<comentarios/>
        VarNumeric
        
        '''<comentarios/>
        AnsiStringFixedLength
        
        '''<comentarios/>
        StringFixedLength
        
        '''<comentarios/>
        Xml
        
        '''<comentarios/>
        DateTime2
        
        '''<comentarios/>
        DateTimeOffset
    End Enum
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum ParameterDirection
        
        '''<comentarios/>
        Input
        
        '''<comentarios/>
        Output
        
        '''<comentarios/>
        InputOutput
        
        '''<comentarios/>
        ReturnValue
    End Enum
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DataRowVersion
        
        '''<comentarios/>
        Original
        
        '''<comentarios/>
        Current
        
        '''<comentarios/>
        Proposed
        
        '''<comentarios/>
        [Default]
    End Enum
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SqlParameter
        Inherits DbParameter
        
        Private compareInfoField As SqlCompareOptions
        
        Private xmlSchemaCollectionDatabaseField As String
        
        Private xmlSchemaCollectionOwningSchemaField As String
        
        Private xmlSchemaCollectionNameField As String
        
        Private localeIdField As Integer
        
        Private precisionField As Byte
        
        Private scaleField As Byte
        
        Private sqlDbTypeField As SqlDbType
        
        Private sqlValueField As Object
        
        Private udtTypeNameField As String
        
        Private typeNameField As String
        
        Private offsetField As Integer
        
        Public Sub New()
            MyBase.New
            Me.precisionField = CType(0,Byte)
            Me.scaleField = CType(0,Byte)
        End Sub
        
        '''<comentarios/>
        Public Property CompareInfo() As SqlCompareOptions
            Get
                Return Me.compareInfoField
            End Get
            Set
                Me.compareInfoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property XmlSchemaCollectionDatabase() As String
            Get
                Return Me.xmlSchemaCollectionDatabaseField
            End Get
            Set
                Me.xmlSchemaCollectionDatabaseField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property XmlSchemaCollectionOwningSchema() As String
            Get
                Return Me.xmlSchemaCollectionOwningSchemaField
            End Get
            Set
                Me.xmlSchemaCollectionOwningSchemaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property XmlSchemaCollectionName() As String
            Get
                Return Me.xmlSchemaCollectionNameField
            End Get
            Set
                Me.xmlSchemaCollectionNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LocaleId() As Integer
            Get
                Return Me.localeIdField
            End Get
            Set
                Me.localeIdField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute(GetType(Byte), "0")>  _
        Public Property Precision() As Byte
            Get
                Return Me.precisionField
            End Get
            Set
                Me.precisionField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.ComponentModel.DefaultValueAttribute(GetType(Byte), "0")>  _
        Public Property Scale() As Byte
            Get
                Return Me.scaleField
            End Get
            Set
                Me.scaleField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property SqlDbType() As SqlDbType
            Get
                Return Me.sqlDbTypeField
            End Get
            Set
                Me.sqlDbTypeField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property SqlValue() As Object
            Get
                Return Me.sqlValueField
            End Get
            Set
                Me.sqlValueField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UdtTypeName() As String
            Get
                Return Me.udtTypeNameField
            End Get
            Set
                Me.udtTypeNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TypeName() As String
            Get
                Return Me.typeNameField
            End Get
            Set
                Me.typeNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Offset() As Integer
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SqlCompareOptions
        
        '''<comentarios/>
        None = 1
        
        '''<comentarios/>
        IgnoreCase = 2
        
        '''<comentarios/>
        IgnoreNonSpace = 4
        
        '''<comentarios/>
        IgnoreKanaType = 8
        
        '''<comentarios/>
        IgnoreWidth = 16
        
        '''<comentarios/>
        BinarySort = 32
        
        '''<comentarios/>
        BinarySort2 = 64
    End Enum
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SqlDbType
        
        '''<comentarios/>
        BigInt
        
        '''<comentarios/>
        Binary
        
        '''<comentarios/>
        Bit
        
        '''<comentarios/>
        [Char]
        
        '''<comentarios/>
        DateTime
        
        '''<comentarios/>
        [Decimal]
        
        '''<comentarios/>
        Float
        
        '''<comentarios/>
        Image
        
        '''<comentarios/>
        Int
        
        '''<comentarios/>
        Money
        
        '''<comentarios/>
        NChar
        
        '''<comentarios/>
        NText
        
        '''<comentarios/>
        NVarChar
        
        '''<comentarios/>
        Real
        
        '''<comentarios/>
        UniqueIdentifier
        
        '''<comentarios/>
        SmallDateTime
        
        '''<comentarios/>
        SmallInt
        
        '''<comentarios/>
        SmallMoney
        
        '''<comentarios/>
        Text
        
        '''<comentarios/>
        Timestamp
        
        '''<comentarios/>
        TinyInt
        
        '''<comentarios/>
        VarBinary
        
        '''<comentarios/>
        VarChar
        
        '''<comentarios/>
        [Variant]
        
        '''<comentarios/>
        Xml
        
        '''<comentarios/>
        Udt
        
        '''<comentarios/>
        Structured
        
        '''<comentarios/>
        [Date]
        
        '''<comentarios/>
        Time
        
        '''<comentarios/>
        DateTime2
        
        '''<comentarios/>
        DateTimeOffset
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSSuperadasTransaccionesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetDataPSCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetStocksPSCompletedEventHandler(ByVal sender As Object, ByVal e As GetStocksPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStocksPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertCustomerPSCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCustomerPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCustomerPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property CodigoDeCliente() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ExecutePSCompletedEventHandler(ByVal sender As Object, ByVal e As ExecutePSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExecutePSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertOrderXMLPSCompletedEventHandler(ByVal sender As Object, ByVal e As InsertOrderXMLPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertOrderXMLPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerZonaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerZonaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerZonaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPerfilesTiendaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPerfilesTiendaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPerfilesTiendaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPerfilesCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPerfilesCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPerfilesCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvTareasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvTareasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvTareasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvTareasAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvTareasAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvTareasAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerMesasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerMesasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerMesasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerSeccionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerSeccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerSeccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTPVPerifericosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTPVPerifericosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTPVPerifericosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvArticulosConfiguracionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvArticulosConfiguracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvArticulosConfiguracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvCrmCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvCrmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvCrmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerEscandallosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEscandallosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerEscandallosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvParametrosAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvParametrosAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvParametrosAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTpvPermisosVendedoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTpvPermisosVendedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTpvPermisosVendedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosTiendaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosTiendaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosTiendaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTPVPerifericosCodigosDeControlCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTPVPerifericosCodigosDeControlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTPVPerifericosCodigosDeControlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTiposDeRepartoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTiposDeRepartoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTiposDeRepartoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerProveedorCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerProveedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerProveedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerProveedorAlternativoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerProveedorAlternativoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerProveedorAlternativoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerAgenciaDeTransporteCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAgenciaDeTransporteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAgenciaDeTransporteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerConceptoCuentaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerConceptoCuentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerConceptoCuentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDepartamentoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDepartamentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDepartamentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDivisaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDivisaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDivisaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerIdiomaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerIdiomaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerIdiomaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerGrupoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerGrupoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerGrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPaisCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPaisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPaisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerProvinciaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerProvinciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerProvinciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTareaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTareaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTareaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTemporadaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTemporadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTemporadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerConceptosCuentasAlternativaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerConceptosCuentasAlternativaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerConceptosCuentasAlternativaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDireccionesEnvioClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDireccionesEnvioClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDireccionesEnvioClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDescripcionArticulosIdiomaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDescripcionArticulosIdiomaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDescripcionArticulosIdiomaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDescripcionFamiliasIdiomasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDescripcionFamiliasIdiomasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDescripcionFamiliasIdiomasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDescripcionSubFamiliasIdiomasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDescripcionSubFamiliasIdiomasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDescripcionSubFamiliasIdiomasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDesgloseMonetarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDesgloseMonetarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDesgloseMonetarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPoblacionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPoblacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPoblacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPermisosUsuariosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPermisosUsuariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPermisosUsuariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPermisosGruposCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPermisosGruposCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPermisosGruposCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPuntosDesgloseCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPuntosDesgloseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPuntosDesgloseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertAlbaranClienteFCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAlbaranClienteFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAlbaranClienteFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDeAlbaranCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertPedidoClienteFCompletedEventHandler(ByVal sender As Object, ByVal e As InsertPedidoClienteFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertPedidoClienteFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDePedidoCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertPedidoClienteXMLCompletedEventHandler(ByVal sender As Object, ByVal e As InsertPedidoClienteXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertPedidoClienteXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertClienteFCompletedEventHandler(ByVal sender As Object, ByVal e As InsertClienteFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertClienteFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property CodigoDeCliente() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerStocksFCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerStocksFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerStocksFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDatosFCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDatosFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDatosFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDatosXMLCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDatosXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDatosXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerValorFCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerValorFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerValorFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EjecutarFCompletedEventHandler(ByVal sender As Object, ByVal e As EjecutarFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EjecutarFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ListadoDeExistenciasEnFechaCompletedEventHandler(ByVal sender As Object, ByVal e As ListadoDeExistenciasEnFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListadoDeExistenciasEnFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertarLineaInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLineaInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLineaInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lPos() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFecha() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CrearInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As CrearInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttInventario() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSLoginCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSLoginCajaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSArticulosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSValidateEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSClientesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSGuardarVentaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSCobrarVentaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSInicioDiaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSArqueoDiferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSArqueoEjecucionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSCobrosPagosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSUltimoTicketCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSSesionActivaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSCerrarSesionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub POSEliminarImagenesDirectorioCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EliminarBackUpBaseDeDatosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBackUpBaseDeDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBackUpBaseDeDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CrearBaseDeDatosCompletedEventHandler(ByVal sender As Object, ByVal e As CrearBaseDeDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearBaseDeDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEventHandler(ByVal sender As Object, ByVal e As ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ComprobarBaseDastosCreadaOfficePosEnServidorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InicializarBaseDeDatosCompletedEventHandler(ByVal sender As Object, ByVal e As InicializarBaseDeDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InicializarBaseDeDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerFiltroUsuarioOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFiltroUsuarioOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFiltroUsuarioOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property sTipoFiltro() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFiltro() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDatoUsuarioOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDatoUsuarioOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDatoUsuarioOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActivarFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ActivarFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActivarFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub DesActivarFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As DesActivarFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DesActivarFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub VentasPorTiendaCompletedEventHandler(ByVal sender As Object, ByVal e As VentasPorTiendaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VentasPorTiendaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFechas() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ResumenVentasCompletedEventHandler(ByVal sender As Object, ByVal e As ResumenVentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ResumenVentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFechas() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UltimasVentasCompletedEventHandler(ByVal sender As Object, ByVal e As UltimasVentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UltimasVentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub VentasPorFamiliasCompletedEventHandler(ByVal sender As Object, ByVal e As VentasPorFamiliasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VentasPorFamiliasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFechas() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SituacionActualTiendasCompletedEventHandler(ByVal sender As Object, ByVal e As SituacionActualTiendasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SituacionActualTiendasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub VentasPorMesesCompletedEventHandler(ByVal sender As Object, ByVal e As VentasPorMesesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VentasPorMesesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PedidosPendientesCompletedEventHandler(ByVal sender As Object, ByVal e As PedidosPendientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PedidosPendientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub FichaArticuloStockCompletedEventHandler(ByVal sender As Object, ByVal e As FichaArticuloStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FichaArticuloStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub BuscarCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EnviarMensajeOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarMensajeOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarMensajeOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub MisDatosCompletedEventHandler(ByVal sender As Object, ByVal e As MisDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MisDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EnviarPasswordPorMailCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarPasswordPorMailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarPasswordPorMailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub BannerCompletedEventHandler(ByVal sender As Object, ByVal e As BannerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BannerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPeriodoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPeriodoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPeriodoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property sFechaDesde() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFechaHasta() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFechas() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerUsuarioOfficePosDEMOCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerUsuarioOfficePosDEMOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerUsuarioOfficePosDEMOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AccederOficinaCompletedEventHandler(ByVal sender As Object, ByVal e As AccederOficinaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AccederOficinaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AccederRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As AccederRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AccederRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub BannerLoginCompletedEventHandler(ByVal sender As Object, ByVal e As BannerLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BannerLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarComunicacionesTiendaCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarComunicacionesTiendaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarComunicacionesTiendaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ErroresSincronizacionCompletedEventHandler(ByVal sender As Object, ByVal e As ErroresSincronizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ErroresSincronizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionMesasCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionMesasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionMesasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaInventarioFisicoCompletedEventHandler(ByVal sender As Object, ByVal e As AltaInventarioFisicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaInventarioFisicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionSeccionesCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionSeccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionSeccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTPVCrmEstadisticaCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTPVCrmEstadisticaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTPVCrmEstadisticaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTPVPerifericosCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTPVPerifericosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTPVPerifericosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTPVPerifericosCharsetCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTPVPerifericosCharsetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTPVPerifericosCharsetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTPVPerifericosCodigosDeControlCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTPVPerifericosCodigosDeControlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTPVPerifericosCodigosDeControlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTpvParametrosAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTpvParametrosAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTpvParametrosAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTpvTareasAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTpvTareasAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTpvTareasAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTpvArticulosConfiguracionCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTpvArticulosConfiguracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTpvArticulosConfiguracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionCajasCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AltaModificacionTiendasCompletedEventHandler(ByVal sender As Object, ByVal e As AltaModificacionTiendasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AltaModificacionTiendasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDatosSincronizarCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDatosSincronizarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDatosSincronizarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sSQL() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosModeloCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosModeloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosModeloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosDescripcionIdiomaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosDescripcionIdiomaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosDescripcionIdiomaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerCodigosDeBarrasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCodigosDeBarrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCodigosDeBarrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerVendedoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerVendedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerVendedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerBancoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerDireccionesVariasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDireccionesVariasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDireccionesVariasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTiendasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTiendasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTiendasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerCajasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTiendasGrupoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTiendasGrupoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTiendasGrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTPVPerifericosCharsetCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTPVPerifericosCharsetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTPVPerifericosCharsetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTipoTarifaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoTarifaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoTarifaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTarifaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTarifaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTarifaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPromocionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPromocionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPromocionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPromocionEscaladoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPromocionEscaladoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPromocionEscaladoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerClientesPreciosEscaladoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerClientesPreciosEscaladoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerClientesPreciosEscaladoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosModeloAlternativosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosModeloAlternativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosModeloAlternativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosComplementariosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosComplementariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosComplementariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerArticulosModeloComplementariosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerArticulosModeloComplementariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerArticulosModeloComplementariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerColoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerColoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerColoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerColoresDesgloseCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerColoresDesgloseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerColoresDesgloseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerFabricanteCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFabricanteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFabricanteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerFamiliaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFamiliaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFamiliaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerFormaDePagoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFormaDePagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFormaDePagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerIvaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerIvaEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerIvaEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerMarcaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerMarcaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerMarcaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerModistaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerModistaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerModistaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerSerieCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerSerieCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerSerieCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerSubFamiliaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerSubFamiliaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerSubFamiliaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTallaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTallaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTallaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTallasDesgloseCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTallasDesgloseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTallasDesgloseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTipoDeDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoDeDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoDeDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTipoDeClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoDeClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoDeClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTipoDeDesgloseCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoDeDesgloseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoDeDesgloseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTiposMovimientoAlmacenCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTiposMovimientoAlmacenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTiposMovimientoAlmacenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerAlmacenCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAlmacenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAlmacenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub NumeroFilasClientesDireccionesVariasCompletedEventHandler(ByVal sender As Object, ByVal e As NumeroFilasClientesDireccionesVariasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NumeroFilasClientesDireccionesVariasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub NumeroFilasClientesCompletedEventHandler(ByVal sender As Object, ByVal e As NumeroFilasClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NumeroFilasClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PuntosClientesCompletedEventHandler(ByVal sender As Object, ByVal e As PuntosClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PuntosClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PuntosClientesImporteCompletedEventHandler(ByVal sender As Object, ByVal e As PuntosClientesImporteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PuntosClientesImporteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ExisteClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ExisteClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExisteClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarClienteCompletedEventHandler(ByVal sender As Object, ByVal e As CargarClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UpdateClienteCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertClienteCompletedEventHandler(ByVal sender As Object, ByVal e As InsertClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SaldoCompletedEventHandler(ByVal sender As Object, ByVal e As SaldoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaldoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub NumeroFilasArticulosCompletedEventHandler(ByVal sender As Object, ByVal e As NumeroFilasArticulosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NumeroFilasArticulosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ConsultaStocksCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaStocksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaStocksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UpdateIPCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateIPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateIPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerIPCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerIPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerIPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertTesoreriaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertTesoreriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertTesoreriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strPosicionMov() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertMovClienteCompletedEventHandler(ByVal sender As Object, ByVal e As InsertMovClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertMovClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strPosicionMov() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarReciboCompletedEventHandler(ByVal sender As Object, ByVal e As CargarReciboCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarReciboCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertReciboCompletedEventHandler(ByVal sender As Object, ByVal e As InsertReciboCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertReciboCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UpdateReciboCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateReciboCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateReciboCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertAlbaranTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAlbaranTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAlbaranTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttCabecera() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDeAlbaranCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CancelarAlbaranTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As CancelarAlbaranTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelarAlbaranTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarAlbaranClienteCompletedEventHandler(ByVal sender As Object, ByVal e As CargarAlbaranClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarAlbaranClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertAlbaranClienteCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAlbaranClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAlbaranClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDeAlbaranCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarFacturaClienteCompletedEventHandler(ByVal sender As Object, ByVal e As CargarFacturaClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarFacturaClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertFacturaClienteCompletedEventHandler(ByVal sender As Object, ByVal e As InsertFacturaClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertFacturaClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDeFacturaCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarPedidoClienteCompletedEventHandler(ByVal sender As Object, ByVal e As CargarPedidoClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarPedidoClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertPedidoClienteCompletedEventHandler(ByVal sender As Object, ByVal e As InsertPedidoClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertPedidoClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDePedidoCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EliminarPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttVale() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarCabeceraPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCabeceraPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarCabeceraPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttDiarioCaja() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CargarPresupuestoCompletedEventHandler(ByVal sender As Object, ByVal e As CargarPresupuestoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarPresupuestoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub InsertPresupuestoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertPresupuestoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertPresupuestoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDePresupuestoCentral() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarCabeceraPresupuestoCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCabeceraPresupuestoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarCabeceraPresupuestoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EliminarPresupuestoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPresupuestoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPresupuestoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ProcesoCobrarOnlineCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoCobrarOnlineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoCobrarOnlineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NumeroDocumento() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTablasRef() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dttValeAImprimir() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ConfirmarMensajeRecibidoEnTiendaCompletedEventHandler(ByVal sender As Object, ByVal e As ConfirmarMensajeRecibidoEnTiendaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConfirmarMensajeRecibidoEnTiendaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirMovimientosAlmacenCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirMovimientosAlmacenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirMovimientosAlmacenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirEstadisticaVentasCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirEstadisticaVentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirEstadisticaVentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirDiarioCajaCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirDiarioCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirDiarioCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirInformacionAdicionalCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirInformacionAdicionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirInformacionAdicionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirMovimientosPuntosCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirMovimientosPuntosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirMovimientosPuntosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirCintaDeControlCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirCintaDeControlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirCintaDeControlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirControlHorarioCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirControlHorarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirControlHorarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub TransferirAuditoriaCompletedEventHandler(ByVal sender As Object, ByVal e As TransferirAuditoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferirAuditoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub VersionWSCompletedEventHandler(ByVal sender As Object, ByVal e As VersionWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VersionWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub FactorCambioDeDivisaCompletedEventHandler(ByVal sender As Object, ByVal e As FactorCambioDeDivisaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FactorCambioDeDivisaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerAlmacenTransitoSiTengoTratamientoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAlmacenTransitoSiTengoTratamientoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAlmacenTransitoSiTengoTratamientoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ComprobarCredencialesCompletedEventHandler(ByVal sender As Object, ByVal e As ComprobarCredencialesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ComprobarCredencialesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerValorCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerValorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerValorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EjecutarQueryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EjecutarQueryParamCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPLSCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPLSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPLSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property dtt() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub MatarColaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub EnviarMailDesdeOfficePOSCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarMailDesdeOfficePOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarMailDesdeOfficePOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerPasswordOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPasswordOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPasswordOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property sMail() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sClave() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CambioDeAñoCompletedEventHandler(ByVal sender As Object, ByVal e As CambioDeAñoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambioDeAñoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActivarTiendaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ActivarTiendaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActivarTiendaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTiendasLibresOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTiendasLibresOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTiendasLibresOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerCajasLibresOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCajasLibresOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCajasLibresOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AutentificacionUsuarioOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As AutentificacionUsuarioOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutentificacionUsuarioOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property SessionID() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property iCliente() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sNombreUsuario() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PermisosUsuarioOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As PermisosUsuarioOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PermisosUsuarioOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ActualizarObservacionesUsuarioOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarObservacionesUsuarioOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarObservacionesUsuarioOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerFechaVencimientoContratoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFechaVencimientoContratoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFechaVencimientoContratoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ContratoVigenteCompletedEventHandler(ByVal sender As Object, ByVal e As ContratoVigenteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ContratoVigenteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub VigentePorFechasCompletedEventHandler(ByVal sender As Object, ByVal e As VigentePorFechasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VigentePorFechasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ObtenerTipoClienteOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoClienteOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoClienteOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub AutentificacionOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As AutentificacionOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutentificacionOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property SessionID() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property iCliente() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sNombreUsuario() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sConexionUrl() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sIdioma() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sSimboloMonetario() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFormatoMoneda() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sSeparadorMiles() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sSeparadorDecimales() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(9),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sFormatoFecha() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(10),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property iDecimalesImporte() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(11),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property iDecimalesCantidad() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(12),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(13),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CerrarSesionesAbiertasOfficePosCompletedEventHandler(ByVal sender As Object, ByVal e As CerrarSesionesAbiertasOfficePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CerrarSesionesAbiertasOfficePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SesionActivaCompletedEventHandler(ByVal sender As Object, ByVal e As SesionActivaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SesionActivaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RealizarCopiaSeguridadCompletedEventHandler(ByVal sender As Object, ByVal e As RealizarCopiaSeguridadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RealizarCopiaSeguridadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CrearBaseDatosCompactCompletedEventHandler(ByVal sender As Object, ByVal e As CrearBaseDatosCompactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearBaseDatosCompactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CumplimentarDatosCompactCompletedEventHandler(ByVal sender As Object, ByVal e As CumplimentarDatosCompactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CumplimentarDatosCompactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub CompactarDatosCompactCompletedEventHandler(ByVal sender As Object, ByVal e As CompactarDatosCompactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CompactarDatosCompactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RealizarCopiaSeguridadCompactCompletedEventHandler(ByVal sender As Object, ByVal e As RealizarCopiaSeguridadCompactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RealizarCopiaSeguridadCompactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RealizarCopiaSeguridadCompactStandardCompletedEventHandler(ByVal sender As Object, ByVal e As RealizarCopiaSeguridadCompactStandardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RealizarCopiaSeguridadCompactStandardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RealizarCopiaSeguridadCentralCompletedEventHandler(ByVal sender As Object, ByVal e As RealizarCopiaSeguridadCentralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RealizarCopiaSeguridadCentralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
End Namespace
